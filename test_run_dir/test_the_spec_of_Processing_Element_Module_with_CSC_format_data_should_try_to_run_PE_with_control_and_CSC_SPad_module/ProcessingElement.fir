;buildInfoPackage: chisel3, version: 3.3-SNAPSHOT, scalaVersion: 2.12.10, sbtVersion: 1.3.2
circuit ProcessingElement : 
  module ProcessingElementControl : 
    input clock : Clock
    input reset : Reset
    output io : {ctrlPad : {doMACEn : UInt<1>, flip fromTopIO : {flip pSumEnqOrProduct : {flip ready : UInt<1>, valid : UInt<1>, bits : UInt<1>}, flip doLoadEn : UInt<1>, writeFinish : UInt<1>, calFinish : UInt<1>}}, ctrlTop : {flip pSumEnqOrProduct : {flip ready : UInt<1>, valid : UInt<1>, bits : UInt<1>}, flip doLoadEn : UInt<1>, calFinish : UInt<1>, flip writeFinish : UInt<1>}, debugIO : {peState : UInt<2>, doMACEnDebug : UInt<1>}}
    
    io.ctrlTop.calFinish <= io.ctrlPad.fromTopIO.calFinish @[ProcessingElement.scala 52:24]
    reg _T : UInt<2>, clock with : (reset => (reset, UInt<2>("h00"))) @[ProcessingElement.scala 60:39]
    node _T_1 = eq(_T, UInt<2>("h02")) @[ProcessingElement.scala 61:53]
    node _T_2 = mux(_T_1, io.ctrlPad.fromTopIO.pSumEnqOrProduct.ready, UInt<1>("h00")) @[ProcessingElement.scala 61:43]
    io.ctrlTop.pSumEnqOrProduct.ready <= _T_2 @[ProcessingElement.scala 61:37]
    node _T_3 = eq(_T, UInt<2>("h02")) @[ProcessingElement.scala 62:63]
    node _T_4 = mux(_T_3, io.ctrlTop.pSumEnqOrProduct.valid, UInt<1>("h00")) @[ProcessingElement.scala 62:53]
    io.ctrlPad.fromTopIO.pSumEnqOrProduct.valid <= _T_4 @[ProcessingElement.scala 62:47]
    io.ctrlPad.fromTopIO.pSumEnqOrProduct.bits <= io.ctrlTop.pSumEnqOrProduct.bits @[ProcessingElement.scala 63:46]
    io.ctrlPad.fromTopIO.doLoadEn <= io.ctrlTop.doLoadEn @[ProcessingElement.scala 64:33]
    node _T_5 = eq(_T, UInt<2>("h02")) @[ProcessingElement.scala 65:34]
    io.ctrlPad.doMACEn <= _T_5 @[ProcessingElement.scala 65:22]
    node _T_6 = eq(UInt<2>("h00"), _T) @[Conditional.scala 37:30]
    when _T_6 : @[Conditional.scala 40:58]
      when io.ctrlTop.doLoadEn : @[ProcessingElement.scala 68:34]
        _T <= UInt<2>("h01") @[ProcessingElement.scala 69:18]
        skip @[ProcessingElement.scala 68:34]
      skip @[Conditional.scala 40:58]
    else : @[Conditional.scala 39:67]
      node _T_7 = eq(UInt<2>("h01"), _T) @[Conditional.scala 37:30]
      when _T_7 : @[Conditional.scala 39:67]
        when io.ctrlTop.writeFinish : @[ProcessingElement.scala 73:37]
          _T <= UInt<2>("h02") @[ProcessingElement.scala 74:18]
          skip @[ProcessingElement.scala 73:37]
        skip @[Conditional.scala 39:67]
      else : @[Conditional.scala 39:67]
        node _T_8 = eq(UInt<2>("h02"), _T) @[Conditional.scala 37:30]
        when _T_8 : @[Conditional.scala 39:67]
          when io.ctrlPad.fromTopIO.calFinish : @[ProcessingElement.scala 78:45]
            _T <= UInt<2>("h00") @[ProcessingElement.scala 79:18]
            skip @[ProcessingElement.scala 78:45]
          skip @[Conditional.scala 39:67]
    io.debugIO.peState <= _T @[ProcessingElement.scala 84:24]
    io.debugIO.doMACEnDebug <= io.ctrlPad.doMACEn @[ProcessingElement.scala 85:29]
    
  module SPadAdrModule : 
    input clock : Clock
    input reset : Reset
    output io : {dataPath : {columnNum : UInt<4>, readOutData : UInt<4>, flip writeInData : {data : {flip ready : UInt<1>, valid : UInt<1>, bits : UInt<4>}}}, ctrlPath : {flip writeEn : UInt<1>, writeIdx : UInt<4>, writeFin : UInt<1>, flip readEn : UInt<1>, flip readInIdx : UInt<4>, flip indexInc : UInt<1>, flip readInIdxEn : UInt<1>}}
    
    wire dataWire : UInt<4> @[SPadModule.scala 75:38]
    reg padWriteIndexReg : UInt<4>, clock with : (reset => (reset, UInt<4>("h00"))) @[SPadModule.scala 76:49]
    reg padReadIndexReg : UInt<4>, clock with : (reset => (reset, UInt<4>("h00"))) @[SPadModule.scala 77:48]
    wire writeWrapWire : UInt<1> @[SPadModule.scala 78:43]
    wire readWrapWire : UInt<1> @[SPadModule.scala 79:42]
    wire readIndexInc : UInt<1> @[SPadModule.scala 80:42]
    node _T = eq(io.dataPath.writeInData.data.bits, UInt<1>("h00")) @[SPadModule.scala 81:41]
    node _T_1 = and(_T, io.ctrlPath.writeEn) @[SPadModule.scala 81:49]
    writeWrapWire <= _T_1 @[SPadModule.scala 81:17]
    node _T_2 = eq(dataWire, UInt<1>("h00")) @[SPadModule.scala 82:28]
    node _T_3 = and(_T_2, readIndexInc) @[SPadModule.scala 82:36]
    readWrapWire <= _T_3 @[SPadModule.scala 82:16]
    node _T_4 = and(io.dataPath.writeInData.data.valid, io.ctrlPath.writeEn) @[SPadModule.scala 84:31]
    when _T_4 : @[SPadModule.scala 84:55]
      io.dataPath.writeInData.data.ready <= UInt<1>("h01") @[SPadModule.scala 85:27]
      node _T_5 = add(padWriteIndexReg, UInt<1>("h01")) @[SPadModule.scala 86:42]
      node _T_6 = tail(_T_5, 1) @[SPadModule.scala 86:42]
      padWriteIndexReg <= _T_6 @[SPadModule.scala 86:22]
      when writeWrapWire : @[SPadModule.scala 87:26]
        padWriteIndexReg <= UInt<1>("h00") @[SPadModule.scala 88:24]
        skip @[SPadModule.scala 87:26]
      skip @[SPadModule.scala 84:55]
    else : @[SPadModule.scala 90:15]
      io.dataPath.writeInData.data.ready <= UInt<1>("h00") @[SPadModule.scala 91:27]
      skip @[SPadModule.scala 90:15]
    io.ctrlPath.writeIdx <= padWriteIndexReg @[SPadModule.scala 94:24]
    io.ctrlPath.writeFin <= writeWrapWire @[SPadModule.scala 95:24]
    io.dataPath.columnNum <= padReadIndexReg @[SPadModule.scala 96:25]
    wire _T_7 : UInt<4>[9] @[SPadModule.scala 14:51]
    _T_7[0] <= UInt<4>("h00") @[SPadModule.scala 14:51]
    _T_7[1] <= UInt<4>("h00") @[SPadModule.scala 14:51]
    _T_7[2] <= UInt<4>("h00") @[SPadModule.scala 14:51]
    _T_7[3] <= UInt<4>("h00") @[SPadModule.scala 14:51]
    _T_7[4] <= UInt<4>("h00") @[SPadModule.scala 14:51]
    _T_7[5] <= UInt<4>("h00") @[SPadModule.scala 14:51]
    _T_7[6] <= UInt<4>("h00") @[SPadModule.scala 14:51]
    _T_7[7] <= UInt<4>("h00") @[SPadModule.scala 14:51]
    _T_7[8] <= UInt<4>("h00") @[SPadModule.scala 14:51]
    reg _T_8 : UInt<4>[9], clock with : (reset => (reset, _T_7)) @[SPadModule.scala 14:43]
    node _T_9 = and(io.dataPath.writeInData.data.valid, io.ctrlPath.writeEn) @[SPadModule.scala 16:31]
    when _T_9 : @[SPadModule.scala 16:55]
      _T_8[padWriteIndexReg] <= io.dataPath.writeInData.data.bits @[SPadModule.scala 17:31]
      skip @[SPadModule.scala 16:55]
    when readIndexInc : @[SPadModule.scala 20:23]
      node _T_10 = add(padReadIndexReg, UInt<1>("h01")) @[SPadModule.scala 21:40]
      node _T_11 = tail(_T_10, 1) @[SPadModule.scala 21:40]
      padReadIndexReg <= _T_11 @[SPadModule.scala 21:21]
      when readWrapWire : @[SPadModule.scala 22:25]
        padReadIndexReg <= UInt<1>("h00") @[SPadModule.scala 23:23]
        skip @[SPadModule.scala 22:25]
      skip @[SPadModule.scala 20:23]
    dataWire <= _T_8[padReadIndexReg] @[SPadModule.scala 27:12]
    io.dataPath.readOutData <= dataWire @[SPadModule.scala 28:27]
    readIndexInc <= io.ctrlPath.indexInc @[SPadModule.scala 29:16]
    
  module SPadDataModule : 
    input clock : Clock
    input reset : Reset
    output io : {dataPath : {columnNum : UInt<4>, readOutData : UInt<12>, flip writeInData : {data : {flip ready : UInt<1>, valid : UInt<1>, bits : UInt<12>}}}, ctrlPath : {flip writeEn : UInt<1>, writeIdx : UInt<4>, writeFin : UInt<1>, flip readEn : UInt<1>, flip readInIdx : UInt<4>, flip indexInc : UInt<1>, flip readInIdxEn : UInt<1>}}
    
    wire dataWire : UInt<12> @[SPadModule.scala 75:38]
    reg padWriteIndexReg : UInt<4>, clock with : (reset => (reset, UInt<4>("h00"))) @[SPadModule.scala 76:49]
    reg padReadIndexReg : UInt<4>, clock with : (reset => (reset, UInt<4>("h00"))) @[SPadModule.scala 77:48]
    wire writeWrapWire : UInt<1> @[SPadModule.scala 78:43]
    wire readWrapWire : UInt<1> @[SPadModule.scala 79:42]
    wire readIndexInc : UInt<1> @[SPadModule.scala 80:42]
    node _T = eq(io.dataPath.writeInData.data.bits, UInt<1>("h00")) @[SPadModule.scala 81:41]
    node _T_1 = and(_T, io.ctrlPath.writeEn) @[SPadModule.scala 81:49]
    writeWrapWire <= _T_1 @[SPadModule.scala 81:17]
    node _T_2 = eq(dataWire, UInt<1>("h00")) @[SPadModule.scala 82:28]
    node _T_3 = and(_T_2, readIndexInc) @[SPadModule.scala 82:36]
    readWrapWire <= _T_3 @[SPadModule.scala 82:16]
    node _T_4 = and(io.dataPath.writeInData.data.valid, io.ctrlPath.writeEn) @[SPadModule.scala 84:31]
    when _T_4 : @[SPadModule.scala 84:55]
      io.dataPath.writeInData.data.ready <= UInt<1>("h01") @[SPadModule.scala 85:27]
      node _T_5 = add(padWriteIndexReg, UInt<1>("h01")) @[SPadModule.scala 86:42]
      node _T_6 = tail(_T_5, 1) @[SPadModule.scala 86:42]
      padWriteIndexReg <= _T_6 @[SPadModule.scala 86:22]
      when writeWrapWire : @[SPadModule.scala 87:26]
        padWriteIndexReg <= UInt<1>("h00") @[SPadModule.scala 88:24]
        skip @[SPadModule.scala 87:26]
      skip @[SPadModule.scala 84:55]
    else : @[SPadModule.scala 90:15]
      io.dataPath.writeInData.data.ready <= UInt<1>("h00") @[SPadModule.scala 91:27]
      skip @[SPadModule.scala 90:15]
    io.ctrlPath.writeIdx <= padWriteIndexReg @[SPadModule.scala 94:24]
    io.ctrlPath.writeFin <= writeWrapWire @[SPadModule.scala 95:24]
    io.dataPath.columnNum <= padReadIndexReg @[SPadModule.scala 96:25]
    wire _T_7 : UInt<12>[16] @[SPadModule.scala 54:46]
    _T_7[0] <= UInt<12>("h00") @[SPadModule.scala 54:46]
    _T_7[1] <= UInt<12>("h00") @[SPadModule.scala 54:46]
    _T_7[2] <= UInt<12>("h00") @[SPadModule.scala 54:46]
    _T_7[3] <= UInt<12>("h00") @[SPadModule.scala 54:46]
    _T_7[4] <= UInt<12>("h00") @[SPadModule.scala 54:46]
    _T_7[5] <= UInt<12>("h00") @[SPadModule.scala 54:46]
    _T_7[6] <= UInt<12>("h00") @[SPadModule.scala 54:46]
    _T_7[7] <= UInt<12>("h00") @[SPadModule.scala 54:46]
    _T_7[8] <= UInt<12>("h00") @[SPadModule.scala 54:46]
    _T_7[9] <= UInt<12>("h00") @[SPadModule.scala 54:46]
    _T_7[10] <= UInt<12>("h00") @[SPadModule.scala 54:46]
    _T_7[11] <= UInt<12>("h00") @[SPadModule.scala 54:46]
    _T_7[12] <= UInt<12>("h00") @[SPadModule.scala 54:46]
    _T_7[13] <= UInt<12>("h00") @[SPadModule.scala 54:46]
    _T_7[14] <= UInt<12>("h00") @[SPadModule.scala 54:46]
    _T_7[15] <= UInt<12>("h00") @[SPadModule.scala 54:46]
    reg _T_8 : UInt<12>[16], clock with : (reset => (reset, _T_7)) @[SPadModule.scala 54:38]
    node _T_9 = and(io.dataPath.writeInData.data.valid, io.ctrlPath.writeEn) @[SPadModule.scala 55:33]
    when _T_9 : @[SPadModule.scala 55:57]
      _T_8[padWriteIndexReg] <= io.dataPath.writeInData.data.bits @[SPadModule.scala 56:34]
      skip @[SPadModule.scala 55:57]
    when readIndexInc : @[SPadModule.scala 59:25]
      node _T_10 = add(padReadIndexReg, UInt<1>("h01")) @[SPadModule.scala 60:42]
      node _T_11 = tail(_T_10, 1) @[SPadModule.scala 60:42]
      padReadIndexReg <= _T_11 @[SPadModule.scala 60:23]
      when readWrapWire : @[SPadModule.scala 61:27]
        padReadIndexReg <= UInt<1>("h00") @[SPadModule.scala 62:25]
        skip @[SPadModule.scala 61:27]
      skip @[SPadModule.scala 59:25]
    dataWire <= _T_8[padReadIndexReg] @[SPadModule.scala 66:14]
    readIndexInc <= io.ctrlPath.indexInc @[SPadModule.scala 68:16]
    io.dataPath.readOutData <= dataWire @[SPadModule.scala 69:27]
    
  module WeightSPadAdrModule : 
    input clock : Clock
    input reset : Reset
    output io : {dataPath : {columnNum : UInt<4>, readOutData : UInt<7>, flip writeInData : {data : {flip ready : UInt<1>, valid : UInt<1>, bits : UInt<7>}}}, ctrlPath : {flip writeEn : UInt<1>, writeIdx : UInt<4>, writeFin : UInt<1>, flip readEn : UInt<1>, flip readInIdx : UInt<4>, flip indexInc : UInt<1>, flip readInIdxEn : UInt<1>}}
    
    wire dataWire : UInt<7> @[SPadModule.scala 75:38]
    reg padWriteIndexReg : UInt<4>, clock with : (reset => (reset, UInt<4>("h00"))) @[SPadModule.scala 76:49]
    reg padReadIndexReg : UInt<4>, clock with : (reset => (reset, UInt<4>("h00"))) @[SPadModule.scala 77:48]
    wire writeWrapWire : UInt<1> @[SPadModule.scala 78:43]
    wire readWrapWire : UInt<1> @[SPadModule.scala 79:42]
    wire readIndexInc : UInt<1> @[SPadModule.scala 80:42]
    node _T = eq(io.dataPath.writeInData.data.bits, UInt<1>("h00")) @[SPadModule.scala 81:41]
    node _T_1 = and(_T, io.ctrlPath.writeEn) @[SPadModule.scala 81:49]
    writeWrapWire <= _T_1 @[SPadModule.scala 81:17]
    node _T_2 = eq(dataWire, UInt<1>("h00")) @[SPadModule.scala 82:28]
    node _T_3 = and(_T_2, readIndexInc) @[SPadModule.scala 82:36]
    readWrapWire <= _T_3 @[SPadModule.scala 82:16]
    node _T_4 = and(io.dataPath.writeInData.data.valid, io.ctrlPath.writeEn) @[SPadModule.scala 84:31]
    when _T_4 : @[SPadModule.scala 84:55]
      io.dataPath.writeInData.data.ready <= UInt<1>("h01") @[SPadModule.scala 85:27]
      node _T_5 = add(padWriteIndexReg, UInt<1>("h01")) @[SPadModule.scala 86:42]
      node _T_6 = tail(_T_5, 1) @[SPadModule.scala 86:42]
      padWriteIndexReg <= _T_6 @[SPadModule.scala 86:22]
      when writeWrapWire : @[SPadModule.scala 87:26]
        padWriteIndexReg <= UInt<1>("h00") @[SPadModule.scala 88:24]
        skip @[SPadModule.scala 87:26]
      skip @[SPadModule.scala 84:55]
    else : @[SPadModule.scala 90:15]
      io.dataPath.writeInData.data.ready <= UInt<1>("h00") @[SPadModule.scala 91:27]
      skip @[SPadModule.scala 90:15]
    io.ctrlPath.writeIdx <= padWriteIndexReg @[SPadModule.scala 94:24]
    io.ctrlPath.writeFin <= writeWrapWire @[SPadModule.scala 95:24]
    io.dataPath.columnNum <= padReadIndexReg @[SPadModule.scala 96:25]
    wire _T_7 : UInt<7>[16] @[SPadModule.scala 14:51]
    _T_7[0] <= UInt<7>("h00") @[SPadModule.scala 14:51]
    _T_7[1] <= UInt<7>("h00") @[SPadModule.scala 14:51]
    _T_7[2] <= UInt<7>("h00") @[SPadModule.scala 14:51]
    _T_7[3] <= UInt<7>("h00") @[SPadModule.scala 14:51]
    _T_7[4] <= UInt<7>("h00") @[SPadModule.scala 14:51]
    _T_7[5] <= UInt<7>("h00") @[SPadModule.scala 14:51]
    _T_7[6] <= UInt<7>("h00") @[SPadModule.scala 14:51]
    _T_7[7] <= UInt<7>("h00") @[SPadModule.scala 14:51]
    _T_7[8] <= UInt<7>("h00") @[SPadModule.scala 14:51]
    _T_7[9] <= UInt<7>("h00") @[SPadModule.scala 14:51]
    _T_7[10] <= UInt<7>("h00") @[SPadModule.scala 14:51]
    _T_7[11] <= UInt<7>("h00") @[SPadModule.scala 14:51]
    _T_7[12] <= UInt<7>("h00") @[SPadModule.scala 14:51]
    _T_7[13] <= UInt<7>("h00") @[SPadModule.scala 14:51]
    _T_7[14] <= UInt<7>("h00") @[SPadModule.scala 14:51]
    _T_7[15] <= UInt<7>("h00") @[SPadModule.scala 14:51]
    reg _T_8 : UInt<7>[16], clock with : (reset => (reset, _T_7)) @[SPadModule.scala 14:43]
    node _T_9 = and(io.dataPath.writeInData.data.valid, io.ctrlPath.writeEn) @[SPadModule.scala 16:31]
    when _T_9 : @[SPadModule.scala 16:55]
      _T_8[padWriteIndexReg] <= io.dataPath.writeInData.data.bits @[SPadModule.scala 17:31]
      skip @[SPadModule.scala 16:55]
    when readIndexInc : @[SPadModule.scala 20:23]
      node _T_10 = add(padReadIndexReg, UInt<1>("h01")) @[SPadModule.scala 21:40]
      node _T_11 = tail(_T_10, 1) @[SPadModule.scala 21:40]
      padReadIndexReg <= _T_11 @[SPadModule.scala 21:21]
      when readWrapWire : @[SPadModule.scala 22:25]
        padReadIndexReg <= UInt<1>("h00") @[SPadModule.scala 23:23]
        skip @[SPadModule.scala 22:25]
      skip @[SPadModule.scala 20:23]
    dataWire <= _T_8[padReadIndexReg] @[SPadModule.scala 27:12]
    io.dataPath.readOutData <= dataWire @[SPadModule.scala 28:27]
    readIndexInc <= io.ctrlPath.indexInc @[SPadModule.scala 29:16]
    when io.ctrlPath.readInIdxEn : @[SPadModule.scala 7:34]
      padReadIndexReg <= io.ctrlPath.readInIdx @[SPadModule.scala 8:21]
      skip @[SPadModule.scala 7:34]
    
  module SPadDataModule_1 : 
    input clock : Clock
    input reset : Reset
    output io : {dataPath : {columnNum : UInt<8>, readOutData : UInt<12>, flip writeInData : {data : {flip ready : UInt<1>, valid : UInt<1>, bits : UInt<12>}}}, ctrlPath : {flip writeEn : UInt<1>, writeIdx : UInt<8>, writeFin : UInt<1>, flip readEn : UInt<1>, flip readInIdx : UInt<8>, flip indexInc : UInt<1>, flip readInIdxEn : UInt<1>}}
    
    wire dataWire : UInt<12> @[SPadModule.scala 75:38]
    reg padWriteIndexReg : UInt<8>, clock with : (reset => (reset, UInt<8>("h00"))) @[SPadModule.scala 76:49]
    reg padReadIndexReg : UInt<8>, clock with : (reset => (reset, UInt<8>("h00"))) @[SPadModule.scala 77:48]
    wire writeWrapWire : UInt<1> @[SPadModule.scala 78:43]
    wire readWrapWire : UInt<1> @[SPadModule.scala 79:42]
    wire readIndexInc : UInt<1> @[SPadModule.scala 80:42]
    node _T = eq(io.dataPath.writeInData.data.bits, UInt<1>("h00")) @[SPadModule.scala 81:41]
    node _T_1 = and(_T, io.ctrlPath.writeEn) @[SPadModule.scala 81:49]
    writeWrapWire <= _T_1 @[SPadModule.scala 81:17]
    node _T_2 = eq(dataWire, UInt<1>("h00")) @[SPadModule.scala 82:28]
    node _T_3 = and(_T_2, readIndexInc) @[SPadModule.scala 82:36]
    readWrapWire <= _T_3 @[SPadModule.scala 82:16]
    node _T_4 = and(io.dataPath.writeInData.data.valid, io.ctrlPath.writeEn) @[SPadModule.scala 84:31]
    when _T_4 : @[SPadModule.scala 84:55]
      io.dataPath.writeInData.data.ready <= UInt<1>("h01") @[SPadModule.scala 85:27]
      node _T_5 = add(padWriteIndexReg, UInt<1>("h01")) @[SPadModule.scala 86:42]
      node _T_6 = tail(_T_5, 1) @[SPadModule.scala 86:42]
      padWriteIndexReg <= _T_6 @[SPadModule.scala 86:22]
      when writeWrapWire : @[SPadModule.scala 87:26]
        padWriteIndexReg <= UInt<1>("h00") @[SPadModule.scala 88:24]
        skip @[SPadModule.scala 87:26]
      skip @[SPadModule.scala 84:55]
    else : @[SPadModule.scala 90:15]
      io.dataPath.writeInData.data.ready <= UInt<1>("h00") @[SPadModule.scala 91:27]
      skip @[SPadModule.scala 90:15]
    io.ctrlPath.writeIdx <= padWriteIndexReg @[SPadModule.scala 94:24]
    io.ctrlPath.writeFin <= writeWrapWire @[SPadModule.scala 95:24]
    io.dataPath.columnNum <= padReadIndexReg @[SPadModule.scala 96:25]
    smem _T_7 : UInt<12>[192] @[SPadModule.scala 35:50]
    node _T_8 = and(io.dataPath.writeInData.data.valid, io.ctrlPath.writeEn) @[SPadModule.scala 37:33]
    when _T_8 : @[SPadModule.scala 37:57]
      write mport _T_9 = _T_7[padWriteIndexReg], clock
      _T_9 <= io.dataPath.writeInData.data.bits
      skip @[SPadModule.scala 37:57]
    when io.ctrlPath.readInIdxEn : @[SPadModule.scala 41:36]
      padReadIndexReg <= io.ctrlPath.readInIdx @[SPadModule.scala 42:23]
      skip @[SPadModule.scala 41:36]
    else : @[SPadModule.scala 43:18]
      when readIndexInc : @[SPadModule.scala 44:27]
        node _T_10 = add(padReadIndexReg, UInt<1>("h01")) @[SPadModule.scala 45:44]
        node _T_11 = tail(_T_10, 1) @[SPadModule.scala 45:44]
        padReadIndexReg <= _T_11 @[SPadModule.scala 45:25]
        when readWrapWire : @[SPadModule.scala 46:29]
          padReadIndexReg <= UInt<1>("h00") @[SPadModule.scala 47:27]
          skip @[SPadModule.scala 46:29]
        skip @[SPadModule.scala 44:27]
      skip @[SPadModule.scala 43:18]
    wire _T_12 : UInt @[SPadModule.scala 52:30]
    _T_12 is invalid @[SPadModule.scala 52:30]
    when io.ctrlPath.readEn : @[SPadModule.scala 52:30]
      _T_12 <= padReadIndexReg @[SPadModule.scala 52:30]
      node _T_13 = or(_T_12, UInt<8>("h00")) @[SPadModule.scala 52:30]
      node _T_14 = bits(_T_13, 7, 0) @[SPadModule.scala 52:30]
      read mport _T_15 = _T_7[_T_14], clock @[SPadModule.scala 52:30]
      skip @[SPadModule.scala 52:30]
    dataWire <= _T_15 @[SPadModule.scala 52:14]
    readIndexInc <= io.ctrlPath.indexInc @[SPadModule.scala 68:16]
    io.dataPath.readOutData <= dataWire @[SPadModule.scala 69:27]
    
  module ProcessingElementPad : 
    input clock : Clock
    input reset : Reset
    output io : {flip padCtrl : {doMACEn : UInt<1>, flip fromTopIO : {flip pSumEnqOrProduct : {flip ready : UInt<1>, valid : UInt<1>, bits : UInt<1>}, flip doLoadEn : UInt<1>, writeFinish : UInt<1>, calFinish : UInt<1>}}, dataStream : {flip ipsIO : {flip ready : UInt<1>, valid : UInt<1>, bits : UInt<20>}, opsIO : {flip ready : UInt<1>, valid : UInt<1>, bits : UInt<20>}, flip inActIOs : {adrIOs : {data : {flip ready : UInt<1>, valid : UInt<1>, bits : UInt<4>}}, dataIOs : {data : {flip ready : UInt<1>, valid : UInt<1>, bits : UInt<12>}}}, flip weightIOs : {adrIOs : {data : {flip ready : UInt<1>, valid : UInt<1>, bits : UInt<7>}}, dataIOs : {data : {flip ready : UInt<1>, valid : UInt<1>, bits : UInt<12>}}}}, debugIO : {inActMatrixData : UInt<8>, inActMatrixRow : UInt<4>, inActMatrixColumn : UInt<4>, inActAdrInc : UInt<1>, inActDataInc : UInt<1>, inActAdrIdx : UInt<4>, weightAdrSPadReadOut : UInt<7>, weightMatrixData : UInt<8>, weightMatrixRow : UInt<4>, productResult : UInt<20>, pSumResult : UInt<20>, pSumLoad : UInt<20>, weightAdrInIdx : UInt<4>, sPadState : UInt<3>}, padWF : {inActWriteFin : {adrWriteFin : UInt<1>, dataWriteFin : UInt<1>}, weightWriteFin : {adrWriteFin : UInt<1>, dataWriteFin : UInt<1>}}}
    
    wire _T : UInt<20>[32] @[ProcessingElement.scala 134:54]
    _T[0] <= UInt<20>("h00") @[ProcessingElement.scala 134:54]
    _T[1] <= UInt<20>("h00") @[ProcessingElement.scala 134:54]
    _T[2] <= UInt<20>("h00") @[ProcessingElement.scala 134:54]
    _T[3] <= UInt<20>("h00") @[ProcessingElement.scala 134:54]
    _T[4] <= UInt<20>("h00") @[ProcessingElement.scala 134:54]
    _T[5] <= UInt<20>("h00") @[ProcessingElement.scala 134:54]
    _T[6] <= UInt<20>("h00") @[ProcessingElement.scala 134:54]
    _T[7] <= UInt<20>("h00") @[ProcessingElement.scala 134:54]
    _T[8] <= UInt<20>("h00") @[ProcessingElement.scala 134:54]
    _T[9] <= UInt<20>("h00") @[ProcessingElement.scala 134:54]
    _T[10] <= UInt<20>("h00") @[ProcessingElement.scala 134:54]
    _T[11] <= UInt<20>("h00") @[ProcessingElement.scala 134:54]
    _T[12] <= UInt<20>("h00") @[ProcessingElement.scala 134:54]
    _T[13] <= UInt<20>("h00") @[ProcessingElement.scala 134:54]
    _T[14] <= UInt<20>("h00") @[ProcessingElement.scala 134:54]
    _T[15] <= UInt<20>("h00") @[ProcessingElement.scala 134:54]
    _T[16] <= UInt<20>("h00") @[ProcessingElement.scala 134:54]
    _T[17] <= UInt<20>("h00") @[ProcessingElement.scala 134:54]
    _T[18] <= UInt<20>("h00") @[ProcessingElement.scala 134:54]
    _T[19] <= UInt<20>("h00") @[ProcessingElement.scala 134:54]
    _T[20] <= UInt<20>("h00") @[ProcessingElement.scala 134:54]
    _T[21] <= UInt<20>("h00") @[ProcessingElement.scala 134:54]
    _T[22] <= UInt<20>("h00") @[ProcessingElement.scala 134:54]
    _T[23] <= UInt<20>("h00") @[ProcessingElement.scala 134:54]
    _T[24] <= UInt<20>("h00") @[ProcessingElement.scala 134:54]
    _T[25] <= UInt<20>("h00") @[ProcessingElement.scala 134:54]
    _T[26] <= UInt<20>("h00") @[ProcessingElement.scala 134:54]
    _T[27] <= UInt<20>("h00") @[ProcessingElement.scala 134:54]
    _T[28] <= UInt<20>("h00") @[ProcessingElement.scala 134:54]
    _T[29] <= UInt<20>("h00") @[ProcessingElement.scala 134:54]
    _T[30] <= UInt<20>("h00") @[ProcessingElement.scala 134:54]
    _T[31] <= UInt<20>("h00") @[ProcessingElement.scala 134:54]
    reg _T_1 : UInt<20>[32], clock with : (reset => (reset, _T)) @[ProcessingElement.scala 134:46]
    inst SPadAdrModule of SPadAdrModule @[ProcessingElement.scala 135:51]
    SPadAdrModule.clock <= clock
    SPadAdrModule.reset <= reset
    inst SPadDataModule of SPadDataModule @[ProcessingElement.scala 136:53]
    SPadDataModule.clock <= clock
    SPadDataModule.reset <= reset
    inst WeightSPadAdrModule of WeightSPadAdrModule @[ProcessingElement.scala 137:52]
    WeightSPadAdrModule.clock <= clock
    WeightSPadAdrModule.reset <= reset
    inst SPadDataModule_1 of SPadDataModule_1 @[ProcessingElement.scala 138:54]
    SPadDataModule_1.clock <= clock
    SPadDataModule_1.reset <= reset
    wire _T_2 : UInt<4> @[ProcessingElement.scala 140:45]
    wire _T_3 : UInt<4> @[ProcessingElement.scala 141:44]
    wire _T_4 : UInt<4> @[ProcessingElement.scala 142:46]
    reg _T_5 : UInt<1>, clock with : (reset => (reset, UInt<1>("h00"))) @[ProcessingElement.scala 143:52]
    reg _T_6 : UInt<1>, clock with : (reset => (reset, UInt<1>("h00"))) @[ProcessingElement.scala 144:53]
    wire _T_7 : UInt<1> @[ProcessingElement.scala 145:50]
    wire _T_8 : UInt<1> @[ProcessingElement.scala 146:51]
    reg _T_9 : UInt<4>, clock with : (reset => (reset, UInt<4>("h00"))) @[ProcessingElement.scala 147:51]
    reg _T_10 : UInt<4>, clock with : (reset => (reset, UInt<4>("h00"))) @[ProcessingElement.scala 148:52]
    reg _T_11 : UInt<1>, clock with : (reset => (reset, UInt<1>("h01"))) @[ProcessingElement.scala 149:56]
    wire _T_12 : UInt<4> @[ProcessingElement.scala 150:46]
    wire _T_13 : UInt<8> @[ProcessingElement.scala 151:47]
    wire _T_14 : UInt<4> @[ProcessingElement.scala 153:46]
    wire _T_15 : UInt<7> @[ProcessingElement.scala 154:45]
    wire _T_16 : UInt<8> @[ProcessingElement.scala 155:47]
    reg _T_17 : UInt<1>, clock with : (reset => (reset, UInt<1>("h00"))) @[ProcessingElement.scala 156:53]
    reg _T_18 : UInt<1>, clock with : (reset => (reset, UInt<1>("h00"))) @[ProcessingElement.scala 157:54]
    wire _T_19 : UInt<1> @[ProcessingElement.scala 158:51]
    wire _T_20 : UInt<1> @[ProcessingElement.scala 159:52]
    wire _T_21 : UInt<8> @[ProcessingElement.scala 160:47]
    reg _T_22 : UInt<1>, clock with : (reset => (reset, UInt<1>("h01"))) @[ProcessingElement.scala 162:54]
    wire _T_23 : UInt<1> @[ProcessingElement.scala 163:48]
    wire _T_24 : UInt<4> @[ProcessingElement.scala 164:52]
    wire _T_25 : UInt<1> @[ProcessingElement.scala 165:47]
    wire _T_26 : UInt<1> @[ProcessingElement.scala 166:46]
    wire _T_27 : UInt<1> @[ProcessingElement.scala 167:55]
    reg _T_28 : UInt<20>, clock with : (reset => (reset, UInt<20>("h00"))) @[ProcessingElement.scala 169:41]
    reg _T_29 : UInt<20>, clock with : (reset => (reset, UInt<20>("h00"))) @[ProcessingElement.scala 170:46]
    wire _T_30 : UInt<20> @[ProcessingElement.scala 171:42]
    reg _T_31 : UInt<3>, clock with : (reset => (reset, UInt<3>("h00"))) @[ProcessingElement.scala 182:35]
    wire _T_32 : UInt<1> @[ProcessingElement.scala 183:35]
    wire _T_33 : UInt<1> @[ProcessingElement.scala 184:35]
    wire _T_34 : UInt<1> @[ProcessingElement.scala 185:35]
    wire _T_35 : UInt<1> @[ProcessingElement.scala 186:36]
    wire _T_36 : UInt<1> @[ProcessingElement.scala 187:35]
    node _T_37 = eq(_T_31, UInt<3>("h01")) @[ProcessingElement.scala 188:19]
    _T_32 <= _T_37 @[ProcessingElement.scala 188:11]
    node _T_38 = eq(_T_31, UInt<3>("h06")) @[ProcessingElement.scala 189:20]
    _T_35 <= _T_38 @[ProcessingElement.scala 189:12]
    node _T_39 = eq(_T_31, UInt<3>("h07")) @[ProcessingElement.scala 190:19]
    _T_36 <= _T_39 @[ProcessingElement.scala 190:11]
    node _T_40 = eq(_T_31, UInt<3>("h03")) @[ProcessingElement.scala 191:19]
    _T_34 <= _T_40 @[ProcessingElement.scala 191:11]
    node _T_41 = eq(_T_31, UInt<3>("h02")) @[ProcessingElement.scala 192:19]
    _T_33 <= _T_41 @[ProcessingElement.scala 192:11]
    node _T_42 = eq(_T_12, UInt<1>("h00")) @[ProcessingElement.scala 193:53]
    _T_27 <= _T_42 @[ProcessingElement.scala 193:31]
    wire _T_43 : UInt<4> @[ProcessingElement.scala 194:46]
    SPadAdrModule.io.ctrlPath.writeEn <= io.padCtrl.fromTopIO.doLoadEn @[ProcessingElement.scala 197:37]
    SPadDataModule.io.ctrlPath.writeEn <= io.padCtrl.fromTopIO.doLoadEn @[ProcessingElement.scala 197:37]
    WeightSPadAdrModule.io.ctrlPath.writeEn <= io.padCtrl.fromTopIO.doLoadEn @[ProcessingElement.scala 197:37]
    SPadDataModule_1.io.ctrlPath.writeEn <= io.padCtrl.fromTopIO.doLoadEn @[ProcessingElement.scala 197:37]
    io.padCtrl.fromTopIO.writeFinish is invalid @[ProcessingElement.scala 198:36]
    SPadAdrModule.io.dataPath.writeInData.data.bits <= io.dataStream.inActIOs.adrIOs.data.bits @[ProcessingElement.scala 200:40]
    SPadAdrModule.io.dataPath.writeInData.data.valid <= io.dataStream.inActIOs.adrIOs.data.valid @[ProcessingElement.scala 200:40]
    io.dataStream.inActIOs.adrIOs.data.ready <= SPadAdrModule.io.dataPath.writeInData.data.ready @[ProcessingElement.scala 200:40]
    _T_2 <= SPadAdrModule.io.dataPath.columnNum @[ProcessingElement.scala 201:21]
    _T_3 <= SPadAdrModule.io.dataPath.readOutData @[ProcessingElement.scala 202:20]
    io.padWF.inActWriteFin.adrWriteFin <= SPadAdrModule.io.ctrlPath.writeFin @[ProcessingElement.scala 203:38]
    SPadAdrModule.io.ctrlPath.readEn <= _T_5 @[ProcessingElement.scala 204:35]
    SPadAdrModule.io.ctrlPath.readInIdx is invalid @[ProcessingElement.scala 205:38]
    SPadAdrModule.io.ctrlPath.indexInc <= _T_7 @[ProcessingElement.scala 206:37]
    SPadAdrModule.io.ctrlPath.readInIdxEn is invalid @[ProcessingElement.scala 207:40]
    SPadDataModule.io.dataPath.writeInData.data.bits <= io.dataStream.inActIOs.dataIOs.data.bits @[ProcessingElement.scala 209:41]
    SPadDataModule.io.dataPath.writeInData.data.valid <= io.dataStream.inActIOs.dataIOs.data.valid @[ProcessingElement.scala 209:41]
    io.dataStream.inActIOs.dataIOs.data.ready <= SPadDataModule.io.dataPath.writeInData.data.ready @[ProcessingElement.scala 209:41]
    _T_4 <= SPadDataModule.io.dataPath.columnNum @[ProcessingElement.scala 210:22]
    node _T_44 = bits(SPadDataModule.io.dataPath.readOutData, 0, 0) @[ProcessingElement.scala 211:84]
    node _T_45 = bits(SPadDataModule.io.dataPath.readOutData, 1, 1) @[ProcessingElement.scala 211:84]
    node _T_46 = bits(SPadDataModule.io.dataPath.readOutData, 2, 2) @[ProcessingElement.scala 211:84]
    node _T_47 = bits(SPadDataModule.io.dataPath.readOutData, 3, 3) @[ProcessingElement.scala 211:84]
    node _T_48 = bits(SPadDataModule.io.dataPath.readOutData, 4, 4) @[ProcessingElement.scala 211:84]
    node _T_49 = bits(SPadDataModule.io.dataPath.readOutData, 5, 5) @[ProcessingElement.scala 211:84]
    node _T_50 = bits(SPadDataModule.io.dataPath.readOutData, 6, 6) @[ProcessingElement.scala 211:84]
    node _T_51 = bits(SPadDataModule.io.dataPath.readOutData, 7, 7) @[ProcessingElement.scala 211:84]
    node _T_52 = bits(SPadDataModule.io.dataPath.readOutData, 8, 8) @[ProcessingElement.scala 211:84]
    node _T_53 = bits(SPadDataModule.io.dataPath.readOutData, 9, 9) @[ProcessingElement.scala 211:84]
    node _T_54 = bits(SPadDataModule.io.dataPath.readOutData, 10, 10) @[ProcessingElement.scala 211:84]
    node _T_55 = bits(SPadDataModule.io.dataPath.readOutData, 11, 11) @[ProcessingElement.scala 211:84]
    node _T_56 = cat(_T_49, _T_48) @[Cat.scala 29:58]
    node _T_57 = cat(_T_51, _T_50) @[Cat.scala 29:58]
    node _T_58 = cat(_T_57, _T_56) @[Cat.scala 29:58]
    node _T_59 = cat(_T_53, _T_52) @[Cat.scala 29:58]
    node _T_60 = cat(_T_55, _T_54) @[Cat.scala 29:58]
    node _T_61 = cat(_T_60, _T_59) @[Cat.scala 29:58]
    node _T_62 = cat(_T_61, _T_58) @[Cat.scala 29:58]
    _T_13 <= _T_62 @[ProcessingElement.scala 212:23]
    node _T_63 = cat(_T_45, _T_44) @[Cat.scala 29:58]
    node _T_64 = cat(_T_47, _T_46) @[Cat.scala 29:58]
    node _T_65 = cat(_T_64, _T_63) @[Cat.scala 29:58]
    _T_12 <= _T_65 @[ProcessingElement.scala 213:22]
    io.padWF.inActWriteFin.dataWriteFin <= SPadDataModule.io.ctrlPath.writeFin @[ProcessingElement.scala 214:39]
    SPadDataModule.io.ctrlPath.readEn <= _T_6 @[ProcessingElement.scala 215:36]
    SPadDataModule.io.ctrlPath.readInIdx <= _T_3 @[ProcessingElement.scala 216:39]
    SPadDataModule.io.ctrlPath.indexInc <= _T_8 @[ProcessingElement.scala 217:38]
    SPadDataModule.io.ctrlPath.readInIdxEn is invalid @[ProcessingElement.scala 218:41]
    WeightSPadAdrModule.io.dataPath.writeInData.data.bits <= io.dataStream.weightIOs.adrIOs.data.bits @[ProcessingElement.scala 220:41]
    WeightSPadAdrModule.io.dataPath.writeInData.data.valid <= io.dataStream.weightIOs.adrIOs.data.valid @[ProcessingElement.scala 220:41]
    io.dataStream.weightIOs.adrIOs.data.ready <= WeightSPadAdrModule.io.dataPath.writeInData.data.ready @[ProcessingElement.scala 220:41]
    _T_14 <= WeightSPadAdrModule.io.dataPath.columnNum @[ProcessingElement.scala 221:22]
    _T_15 <= WeightSPadAdrModule.io.dataPath.readOutData @[ProcessingElement.scala 222:21]
    io.padWF.weightWriteFin.adrWriteFin <= WeightSPadAdrModule.io.ctrlPath.writeFin @[ProcessingElement.scala 223:39]
    WeightSPadAdrModule.io.ctrlPath.readEn <= _T_17 @[ProcessingElement.scala 224:36]
    WeightSPadAdrModule.io.ctrlPath.readInIdx <= _T_24 @[ProcessingElement.scala 225:39]
    WeightSPadAdrModule.io.ctrlPath.indexInc <= _T_19 @[ProcessingElement.scala 228:38]
    WeightSPadAdrModule.io.ctrlPath.readInIdxEn <= _T_26 @[ProcessingElement.scala 229:41]
    SPadDataModule_1.io.dataPath.writeInData.data.bits <= io.dataStream.weightIOs.dataIOs.data.bits @[ProcessingElement.scala 231:42]
    SPadDataModule_1.io.dataPath.writeInData.data.valid <= io.dataStream.weightIOs.dataIOs.data.valid @[ProcessingElement.scala 231:42]
    io.dataStream.weightIOs.dataIOs.data.ready <= SPadDataModule_1.io.dataPath.writeInData.data.ready @[ProcessingElement.scala 231:42]
    _T_16 <= SPadDataModule_1.io.dataPath.columnNum @[ProcessingElement.scala 232:23]
    node _T_66 = bits(SPadDataModule_1.io.dataPath.readOutData, 0, 0) @[ProcessingElement.scala 233:86]
    node _T_67 = bits(SPadDataModule_1.io.dataPath.readOutData, 1, 1) @[ProcessingElement.scala 233:86]
    node _T_68 = bits(SPadDataModule_1.io.dataPath.readOutData, 2, 2) @[ProcessingElement.scala 233:86]
    node _T_69 = bits(SPadDataModule_1.io.dataPath.readOutData, 3, 3) @[ProcessingElement.scala 233:86]
    node _T_70 = bits(SPadDataModule_1.io.dataPath.readOutData, 4, 4) @[ProcessingElement.scala 233:86]
    node _T_71 = bits(SPadDataModule_1.io.dataPath.readOutData, 5, 5) @[ProcessingElement.scala 233:86]
    node _T_72 = bits(SPadDataModule_1.io.dataPath.readOutData, 6, 6) @[ProcessingElement.scala 233:86]
    node _T_73 = bits(SPadDataModule_1.io.dataPath.readOutData, 7, 7) @[ProcessingElement.scala 233:86]
    node _T_74 = bits(SPadDataModule_1.io.dataPath.readOutData, 8, 8) @[ProcessingElement.scala 233:86]
    node _T_75 = bits(SPadDataModule_1.io.dataPath.readOutData, 9, 9) @[ProcessingElement.scala 233:86]
    node _T_76 = bits(SPadDataModule_1.io.dataPath.readOutData, 10, 10) @[ProcessingElement.scala 233:86]
    node _T_77 = bits(SPadDataModule_1.io.dataPath.readOutData, 11, 11) @[ProcessingElement.scala 233:86]
    node _T_78 = cat(_T_71, _T_70) @[Cat.scala 29:58]
    node _T_79 = cat(_T_73, _T_72) @[Cat.scala 29:58]
    node _T_80 = cat(_T_79, _T_78) @[Cat.scala 29:58]
    node _T_81 = cat(_T_75, _T_74) @[Cat.scala 29:58]
    node _T_82 = cat(_T_77, _T_76) @[Cat.scala 29:58]
    node _T_83 = cat(_T_82, _T_81) @[Cat.scala 29:58]
    node _T_84 = cat(_T_83, _T_80) @[Cat.scala 29:58]
    _T_21 <= _T_84 @[ProcessingElement.scala 234:23]
    node _T_85 = cat(_T_67, _T_66) @[Cat.scala 29:58]
    node _T_86 = cat(_T_69, _T_68) @[Cat.scala 29:58]
    node _T_87 = cat(_T_86, _T_85) @[Cat.scala 29:58]
    _T_43 <= _T_87 @[ProcessingElement.scala 235:22]
    io.padWF.weightWriteFin.dataWriteFin <= SPadDataModule_1.io.ctrlPath.writeFin @[ProcessingElement.scala 236:40]
    SPadDataModule_1.io.ctrlPath.readEn <= _T_6 @[ProcessingElement.scala 237:37]
    node _T_88 = mux(_T_27, UInt<1>("h00"), _T_15) @[ProcessingElement.scala 238:46]
    SPadDataModule_1.io.ctrlPath.readInIdx <= _T_88 @[ProcessingElement.scala 238:40]
    SPadDataModule_1.io.ctrlPath.indexInc <= _T_20 @[ProcessingElement.scala 239:39]
    SPadDataModule_1.io.ctrlPath.readInIdxEn <= _T_25 @[ProcessingElement.scala 240:42]
    node _T_89 = and(_T_35, io.padCtrl.fromTopIO.pSumEnqOrProduct.bits) @[ProcessingElement.scala 242:41]
    io.dataStream.ipsIO.ready <= _T_89 @[ProcessingElement.scala 242:29]
    reg value : UInt<5>, clock with : (reset => (reset, UInt<5>("h00"))) @[Counter.scala 29:33]
    node _T_90 = and(io.padCtrl.fromTopIO.doLoadEn, io.dataStream.opsIO.ready) @[ProcessingElement.scala 244:39]
    when _T_90 : @[ProcessingElement.scala 244:69]
      io.dataStream.opsIO.bits <= _T_1[value] @[ProcessingElement.scala 245:30]
      io.dataStream.opsIO.valid <= UInt<1>("h01") @[ProcessingElement.scala 246:31]
      node _T_91 = eq(value, UInt<5>("h018")) @[Counter.scala 37:24]
      node _T_92 = add(value, UInt<1>("h01")) @[Counter.scala 38:22]
      node _T_93 = tail(_T_92, 1) @[Counter.scala 38:22]
      value <= _T_93 @[Counter.scala 38:13]
      when _T_91 : @[Counter.scala 40:21]
        value <= UInt<1>("h00") @[Counter.scala 40:29]
        skip @[Counter.scala 40:21]
      skip @[ProcessingElement.scala 244:69]
    else : @[ProcessingElement.scala 248:16]
      io.dataStream.opsIO.valid <= UInt<1>("h00") @[ProcessingElement.scala 249:31]
      io.dataStream.opsIO.bits is invalid @[ProcessingElement.scala 250:30]
      skip @[ProcessingElement.scala 248:16]
    io.padCtrl.fromTopIO.pSumEnqOrProduct.ready <= _T_35 @[ProcessingElement.scala 253:47]
    node _T_94 = add(_T_29, _T_28) @[ProcessingElement.scala 254:50]
    node _T_95 = tail(_T_94, 1) @[ProcessingElement.scala 254:50]
    node _T_96 = mux(_T_36, _T_95, UInt<1>("h00")) @[ProcessingElement.scala 254:24]
    _T_30 <= _T_96 @[ProcessingElement.scala 254:18]
    wire _T_97 : UInt<1> @[ProcessingElement.scala 262:52]
    reg _T_98 : UInt<1>, clock with : (reset => (reset, UInt<1>("h00"))) @[ProcessingElement.scala 263:53]
    wire _T_99 : UInt<1> @[ProcessingElement.scala 264:48]
    wire _T_100 : UInt<1> @[ProcessingElement.scala 265:53]
    wire _T_101 : UInt<1> @[ProcessingElement.scala 266:49]
    wire _T_102 : UInt<1> @[ProcessingElement.scala 267:48]
    wire _T_103 : UInt<1> @[ProcessingElement.scala 268:49]
    wire _T_104 : UInt<5> @[ProcessingElement.scala 269:45]
    node _T_105 = eq(_T_3, UInt<4>("h0f")) @[ProcessingElement.scala 270:48]
    _T_97 <= _T_105 @[ProcessingElement.scala 270:28]
    node _T_106 = eq(_T_15, UInt<7>("h07f")) @[ProcessingElement.scala 271:50]
    _T_100 <= _T_106 @[ProcessingElement.scala 271:29]
    node _T_107 = add(_T_4, UInt<1>("h01")) @[ProcessingElement.scala 272:68]
    node _T_108 = tail(_T_107, 1) @[ProcessingElement.scala 272:68]
    node _T_109 = eq(_T_3, _T_108) @[ProcessingElement.scala 272:44]
    _T_99 <= _T_109 @[ProcessingElement.scala 272:24]
    node _T_110 = add(_T_16, UInt<1>("h01")) @[ProcessingElement.scala 273:71]
    node _T_111 = tail(_T_110, 1) @[ProcessingElement.scala 273:71]
    node _T_112 = eq(_T_15, _T_111) @[ProcessingElement.scala 273:46]
    _T_101 <= _T_112 @[ProcessingElement.scala 273:25]
    node _T_113 = eq(_T_13, UInt<1>("h00")) @[ProcessingElement.scala 274:47]
    node _T_114 = eq(_T_11, UInt<1>("h00")) @[ProcessingElement.scala 274:58]
    node _T_115 = and(_T_113, _T_114) @[ProcessingElement.scala 274:55]
    _T_102 <= _T_115 @[ProcessingElement.scala 274:24]
    node _T_116 = eq(_T_21, UInt<1>("h00")) @[ProcessingElement.scala 275:48]
    node _T_117 = eq(_T_22, UInt<1>("h00")) @[ProcessingElement.scala 275:59]
    node _T_118 = and(_T_116, _T_117) @[ProcessingElement.scala 275:56]
    _T_103 <= _T_118 @[ProcessingElement.scala 275:25]
    node _T_119 = and(_T_32, _T_97) @[ProcessingElement.scala 276:38]
    node _T_120 = and(_T_34, _T_100) @[ProcessingElement.scala 276:81]
    node _T_121 = and(_T_36, _T_101) @[ProcessingElement.scala 276:123]
    node _T_122 = or(_T_120, _T_121) @[ProcessingElement.scala 276:111]
    node _T_123 = and(_T_122, _T_99) @[ProcessingElement.scala 276:150]
    node _T_124 = or(_T_119, _T_123) @[ProcessingElement.scala 276:67]
    _T_7 <= _T_124 @[ProcessingElement.scala 276:26]
    node _T_125 = eq(_T_31, UInt<3>("h04")) @[ProcessingElement.scala 277:48]
    node _T_126 = or(_T_35, _T_125) @[ProcessingElement.scala 277:40]
    node _T_127 = and(_T_126, _T_100) @[ProcessingElement.scala 277:68]
    _T_19 <= _T_127 @[ProcessingElement.scala 277:27]
    node _T_128 = eq(_T_97, UInt<1>("h00")) @[ProcessingElement.scala 279:42]
    node _T_129 = and(_T_32, _T_128) @[ProcessingElement.scala 279:39]
    node _T_130 = eq(_T_11, UInt<1>("h00")) @[ProcessingElement.scala 279:71]
    node _T_131 = and(_T_129, _T_130) @[ProcessingElement.scala 279:68]
    node _T_132 = and(_T_34, _T_100) @[ProcessingElement.scala 279:113]
    node _T_133 = and(_T_36, _T_101) @[ProcessingElement.scala 279:155]
    node _T_134 = or(_T_132, _T_133) @[ProcessingElement.scala 279:143]
    node _T_135 = eq(_T_99, UInt<1>("h00")) @[ProcessingElement.scala 279:185]
    node _T_136 = and(_T_134, _T_135) @[ProcessingElement.scala 279:182]
    node _T_137 = or(_T_131, _T_136) @[ProcessingElement.scala 279:99]
    _T_8 <= _T_137 @[ProcessingElement.scala 279:27]
    node _T_138 = eq(_T_100, UInt<1>("h00")) @[ProcessingElement.scala 280:43]
    node _T_139 = and(_T_34, _T_138) @[ProcessingElement.scala 280:40]
    node _T_140 = eq(_T_22, UInt<1>("h00")) @[ProcessingElement.scala 280:73]
    node _T_141 = and(_T_139, _T_140) @[ProcessingElement.scala 280:70]
    node _T_142 = eq(_T_101, UInt<1>("h00")) @[ProcessingElement.scala 280:114]
    node _T_143 = and(_T_36, _T_142) @[ProcessingElement.scala 280:111]
    node _T_144 = or(_T_141, _T_143) @[ProcessingElement.scala 280:99]
    _T_20 <= _T_144 @[ProcessingElement.scala 280:28]
    node _T_145 = or(_T_33, _T_34) @[ProcessingElement.scala 281:34]
    node _T_146 = and(_T_145, _T_22) @[ProcessingElement.scala 281:46]
    _T_26 <= _T_146 @[ProcessingElement.scala 281:22]
    node _T_147 = and(_T_33, _T_22) @[ProcessingElement.scala 282:35]
    node _T_148 = eq(_T_27, UInt<1>("h00")) @[ProcessingElement.scala 282:65]
    node _T_149 = and(_T_147, _T_148) @[ProcessingElement.scala 282:62]
    _T_23 <= _T_149 @[ProcessingElement.scala 282:24]
    node _T_150 = sub(_T_12, UInt<1>("h01")) @[ProcessingElement.scala 283:76]
    node _T_151 = tail(_T_150, 1) @[ProcessingElement.scala 283:76]
    node _T_152 = mux(_T_23, _T_151, _T_12) @[ProcessingElement.scala 283:34]
    _T_24 <= _T_152 @[ProcessingElement.scala 283:28]
    node _T_153 = and(_T_34, _T_22) @[ProcessingElement.scala 284:34]
    node _T_154 = eq(_T_100, UInt<1>("h00")) @[ProcessingElement.scala 284:64]
    node _T_155 = and(_T_153, _T_154) @[ProcessingElement.scala 284:61]
    _T_25 <= _T_155 @[ProcessingElement.scala 284:23]
    io.padCtrl.fromTopIO.calFinish <= _T_102 @[ProcessingElement.scala 285:34]
    node _T_156 = mul(_T_9, UInt<3>("h04")) @[ProcessingElement.scala 286:66]
    node _T_157 = add(_T_43, _T_156) @[ProcessingElement.scala 286:43]
    node _T_158 = tail(_T_157, 1) @[ProcessingElement.scala 286:43]
    _T_104 <= _T_158 @[ProcessingElement.scala 286:21]
    node _T_159 = eq(UInt<3>("h00"), _T_31) @[Conditional.scala 37:30]
    when _T_159 : @[Conditional.scala 40:58]
      when io.padCtrl.doMACEn : @[ProcessingElement.scala 289:32]
        _T_31 <= UInt<3>("h01") @[ProcessingElement.scala 94:10]
        _T_5 <= UInt<1>("h01") @[ProcessingElement.scala 95:27]
        _T_6 <= UInt<1>("h00") @[ProcessingElement.scala 96:28]
        _T_17 <= UInt<1>("h00") @[ProcessingElement.scala 97:28]
        _T_18 <= UInt<1>("h00") @[ProcessingElement.scala 98:29]
        _T_22 <= UInt<1>("h01") @[ProcessingElement.scala 99:29]
        _T_11 <= UInt<1>("h01") @[ProcessingElement.scala 291:35]
        skip @[ProcessingElement.scala 289:32]
      skip @[Conditional.scala 40:58]
    else : @[Conditional.scala 39:67]
      node _T_160 = eq(UInt<3>("h01"), _T_31) @[Conditional.scala 37:30]
      when _T_160 : @[Conditional.scala 39:67]
        when _T_97 : @[ProcessingElement.scala 295:39]
          _T_31 <= UInt<3>("h01") @[ProcessingElement.scala 94:10]
          _T_5 <= UInt<1>("h01") @[ProcessingElement.scala 95:27]
          _T_6 <= UInt<1>("h00") @[ProcessingElement.scala 96:28]
          _T_17 <= UInt<1>("h00") @[ProcessingElement.scala 97:28]
          _T_18 <= UInt<1>("h00") @[ProcessingElement.scala 98:29]
          _T_22 <= UInt<1>("h01") @[ProcessingElement.scala 99:29]
          _T_98 <= UInt<1>("h01") @[ProcessingElement.scala 297:32]
          node _T_161 = add(_T_10, UInt<1>("h01")) @[ProcessingElement.scala 298:56]
          node _T_162 = tail(_T_161, 1) @[ProcessingElement.scala 298:56]
          _T_10 <= _T_162 @[ProcessingElement.scala 298:31]
          skip @[ProcessingElement.scala 295:39]
        else : @[ProcessingElement.scala 299:20]
          _T_31 <= UInt<3>("h02") @[ProcessingElement.scala 102:10]
          _T_5 <= UInt<1>("h00") @[ProcessingElement.scala 103:27]
          _T_6 <= UInt<1>("h01") @[ProcessingElement.scala 104:28]
          _T_17 <= UInt<1>("h00") @[ProcessingElement.scala 105:28]
          _T_18 <= UInt<1>("h00") @[ProcessingElement.scala 106:29]
          _T_22 <= UInt<1>("h01") @[ProcessingElement.scala 107:29]
          skip @[ProcessingElement.scala 299:20]
        skip @[Conditional.scala 39:67]
      else : @[Conditional.scala 39:67]
        node _T_163 = eq(UInt<3>("h02"), _T_31) @[Conditional.scala 37:30]
        when _T_163 : @[Conditional.scala 39:67]
          when _T_102 : @[ProcessingElement.scala 304:35]
            _T_31 <= UInt<3>("h00") @[ProcessingElement.scala 130:10]
            _T_9 <= UInt<1>("h00") @[ProcessingElement.scala 131:26]
            value <= UInt<1>("h00") @[ProcessingElement.scala 132:31]
            skip @[ProcessingElement.scala 304:35]
          else : @[ProcessingElement.scala 306:20]
            _T_31 <= UInt<3>("h03") @[ProcessingElement.scala 110:10]
            _T_5 <= UInt<1>("h00") @[ProcessingElement.scala 111:27]
            _T_6 <= UInt<1>("h00") @[ProcessingElement.scala 112:28]
            _T_17 <= UInt<1>("h01") @[ProcessingElement.scala 113:28]
            _T_18 <= UInt<1>("h00") @[ProcessingElement.scala 114:29]
            _T_11 <= UInt<1>("h00") @[ProcessingElement.scala 308:35]
            skip @[ProcessingElement.scala 306:20]
          skip @[Conditional.scala 39:67]
        else : @[Conditional.scala 39:67]
          node _T_164 = eq(UInt<3>("h03"), _T_31) @[Conditional.scala 37:30]
          when _T_164 : @[Conditional.scala 39:67]
            when _T_100 : @[ProcessingElement.scala 312:40]
              when _T_99 : @[ProcessingElement.scala 313:37]
                _T_31 <= UInt<3>("h01") @[ProcessingElement.scala 94:10]
                _T_5 <= UInt<1>("h01") @[ProcessingElement.scala 95:27]
                _T_6 <= UInt<1>("h00") @[ProcessingElement.scala 96:28]
                _T_17 <= UInt<1>("h00") @[ProcessingElement.scala 97:28]
                _T_18 <= UInt<1>("h00") @[ProcessingElement.scala 98:29]
                _T_22 <= UInt<1>("h01") @[ProcessingElement.scala 99:29]
                when _T_98 : @[ProcessingElement.scala 315:41]
                  _T_98 <= UInt<1>("h00") @[ProcessingElement.scala 316:36]
                  node _T_165 = add(_T_9, UInt<1>("h01")) @[ProcessingElement.scala 317:58]
                  node _T_166 = tail(_T_165, 1) @[ProcessingElement.scala 317:58]
                  node _T_167 = add(_T_166, _T_10) @[ProcessingElement.scala 317:64]
                  node _T_168 = tail(_T_167, 1) @[ProcessingElement.scala 317:64]
                  _T_9 <= _T_168 @[ProcessingElement.scala 317:34]
                  _T_10 <= UInt<1>("h00") @[ProcessingElement.scala 318:35]
                  skip @[ProcessingElement.scala 315:41]
                else : @[ProcessingElement.scala 319:24]
                  node _T_169 = add(_T_9, UInt<1>("h01")) @[ProcessingElement.scala 320:58]
                  node _T_170 = tail(_T_169, 1) @[ProcessingElement.scala 320:58]
                  _T_9 <= _T_170 @[ProcessingElement.scala 320:34]
                  skip @[ProcessingElement.scala 319:24]
                skip @[ProcessingElement.scala 313:37]
              else : @[ProcessingElement.scala 322:22]
                _T_31 <= UInt<3>("h02") @[ProcessingElement.scala 102:10]
                _T_5 <= UInt<1>("h00") @[ProcessingElement.scala 103:27]
                _T_6 <= UInt<1>("h01") @[ProcessingElement.scala 104:28]
                _T_17 <= UInt<1>("h00") @[ProcessingElement.scala 105:28]
                _T_18 <= UInt<1>("h00") @[ProcessingElement.scala 106:29]
                _T_22 <= UInt<1>("h01") @[ProcessingElement.scala 107:29]
                skip @[ProcessingElement.scala 322:22]
              skip @[ProcessingElement.scala 312:40]
            else : @[ProcessingElement.scala 325:20]
              _T_31 <= UInt<3>("h04") @[ProcessingElement.scala 117:10]
              _T_5 <= UInt<1>("h00") @[ProcessingElement.scala 118:27]
              _T_6 <= UInt<1>("h00") @[ProcessingElement.scala 119:28]
              _T_17 <= UInt<1>("h00") @[ProcessingElement.scala 120:28]
              _T_18 <= UInt<1>("h01") @[ProcessingElement.scala 121:29]
              skip @[ProcessingElement.scala 325:20]
            skip @[Conditional.scala 39:67]
          else : @[Conditional.scala 39:67]
            node _T_171 = eq(UInt<3>("h04"), _T_31) @[Conditional.scala 37:30]
            when _T_171 : @[Conditional.scala 39:67]
              _T_31 <= UInt<3>("h05") @[ProcessingElement.scala 330:12]
              skip @[Conditional.scala 39:67]
            else : @[Conditional.scala 39:67]
              node _T_172 = eq(UInt<3>("h05"), _T_31) @[Conditional.scala 37:30]
              when _T_172 : @[Conditional.scala 39:67]
                _T_31 <= UInt<3>("h06") @[ProcessingElement.scala 333:12]
                value <= _T_104 @[ProcessingElement.scala 334:33]
                _T_5 <= UInt<1>("h00") @[ProcessingElement.scala 124:27]
                _T_6 <= UInt<1>("h00") @[ProcessingElement.scala 125:28]
                _T_17 <= UInt<1>("h00") @[ProcessingElement.scala 126:28]
                _T_18 <= UInt<1>("h00") @[ProcessingElement.scala 127:29]
                skip @[Conditional.scala 39:67]
              else : @[Conditional.scala 39:67]
                node _T_173 = eq(UInt<3>("h06"), _T_31) @[Conditional.scala 37:30]
                when _T_173 : @[Conditional.scala 39:67]
                  when io.padCtrl.fromTopIO.pSumEnqOrProduct.bits : @[ProcessingElement.scala 338:57]
                    when io.dataStream.ipsIO.valid : @[ProcessingElement.scala 339:42]
                      _T_31 <= UInt<3>("h07") @[ProcessingElement.scala 340:16]
                      _T_28 <= io.dataStream.ipsIO.bits @[ProcessingElement.scala 341:22]
                      io.dataStream.ipsIO.ready <= UInt<1>("h01") @[ProcessingElement.scala 342:37]
                      _T_29 <= _T_1[value] @[ProcessingElement.scala 343:27]
                      skip @[ProcessingElement.scala 339:42]
                    skip @[ProcessingElement.scala 338:57]
                  else : @[ProcessingElement.scala 345:20]
                    _T_31 <= UInt<3>("h07") @[ProcessingElement.scala 346:14]
                    node _T_174 = mul(_T_21, _T_13) @[ProcessingElement.scala 347:44]
                    _T_28 <= _T_174 @[ProcessingElement.scala 347:20]
                    _T_29 <= _T_1[value] @[ProcessingElement.scala 348:25]
                    skip @[ProcessingElement.scala 345:20]
                  skip @[Conditional.scala 39:67]
                else : @[Conditional.scala 39:67]
                  node _T_175 = eq(UInt<3>("h07"), _T_31) @[Conditional.scala 37:30]
                  when _T_175 : @[Conditional.scala 39:67]
                    _T_1[_T_104] <= _T_30 @[ProcessingElement.scala 352:37]
                    when _T_102 : @[ProcessingElement.scala 353:35]
                      _T_31 <= UInt<3>("h00") @[ProcessingElement.scala 130:10]
                      _T_9 <= UInt<1>("h00") @[ProcessingElement.scala 131:26]
                      value <= UInt<1>("h00") @[ProcessingElement.scala 132:31]
                      skip @[ProcessingElement.scala 353:35]
                    else : @[ProcessingElement.scala 355:20]
                      when _T_101 : @[ProcessingElement.scala 356:38]
                        when _T_99 : @[ProcessingElement.scala 357:39]
                          _T_31 <= UInt<3>("h01") @[ProcessingElement.scala 94:10]
                          _T_5 <= UInt<1>("h01") @[ProcessingElement.scala 95:27]
                          _T_6 <= UInt<1>("h00") @[ProcessingElement.scala 96:28]
                          _T_17 <= UInt<1>("h00") @[ProcessingElement.scala 97:28]
                          _T_18 <= UInt<1>("h00") @[ProcessingElement.scala 98:29]
                          _T_22 <= UInt<1>("h01") @[ProcessingElement.scala 99:29]
                          when _T_98 : @[ProcessingElement.scala 359:43]
                            _T_98 <= UInt<1>("h00") @[ProcessingElement.scala 360:38]
                            node _T_176 = add(_T_9, UInt<1>("h01")) @[ProcessingElement.scala 361:60]
                            node _T_177 = tail(_T_176, 1) @[ProcessingElement.scala 361:60]
                            node _T_178 = add(_T_177, _T_10) @[ProcessingElement.scala 361:66]
                            node _T_179 = tail(_T_178, 1) @[ProcessingElement.scala 361:66]
                            _T_9 <= _T_179 @[ProcessingElement.scala 361:36]
                            _T_10 <= UInt<1>("h00") @[ProcessingElement.scala 362:37]
                            skip @[ProcessingElement.scala 359:43]
                          else : @[ProcessingElement.scala 363:26]
                            node _T_180 = add(_T_9, UInt<1>("h01")) @[ProcessingElement.scala 364:60]
                            node _T_181 = tail(_T_180, 1) @[ProcessingElement.scala 364:60]
                            _T_9 <= _T_181 @[ProcessingElement.scala 364:36]
                            skip @[ProcessingElement.scala 363:26]
                          skip @[ProcessingElement.scala 357:39]
                        else : @[ProcessingElement.scala 366:24]
                          _T_31 <= UInt<3>("h02") @[ProcessingElement.scala 102:10]
                          _T_5 <= UInt<1>("h00") @[ProcessingElement.scala 103:27]
                          _T_6 <= UInt<1>("h01") @[ProcessingElement.scala 104:28]
                          _T_17 <= UInt<1>("h00") @[ProcessingElement.scala 105:28]
                          _T_18 <= UInt<1>("h00") @[ProcessingElement.scala 106:29]
                          _T_22 <= UInt<1>("h01") @[ProcessingElement.scala 107:29]
                          skip @[ProcessingElement.scala 366:24]
                        skip @[ProcessingElement.scala 356:38]
                      else : @[ProcessingElement.scala 369:22]
                        _T_31 <= UInt<3>("h04") @[ProcessingElement.scala 117:10]
                        _T_5 <= UInt<1>("h00") @[ProcessingElement.scala 118:27]
                        _T_6 <= UInt<1>("h00") @[ProcessingElement.scala 119:28]
                        _T_17 <= UInt<1>("h00") @[ProcessingElement.scala 120:28]
                        _T_18 <= UInt<1>("h01") @[ProcessingElement.scala 121:29]
                        _T_22 <= UInt<1>("h00") @[ProcessingElement.scala 371:35]
                        skip @[ProcessingElement.scala 369:22]
                      skip @[ProcessingElement.scala 355:20]
                    skip @[Conditional.scala 39:67]
    io.debugIO.inActMatrixColumn <= _T_9 @[ProcessingElement.scala 377:34]
    io.debugIO.inActMatrixData <= _T_13 @[ProcessingElement.scala 378:32]
    io.debugIO.inActMatrixRow <= _T_12 @[ProcessingElement.scala 379:31]
    io.debugIO.inActAdrIdx <= _T_2 @[ProcessingElement.scala 380:28]
    io.debugIO.inActAdrInc <= _T_7 @[ProcessingElement.scala 381:28]
    io.debugIO.inActDataInc <= _T_8 @[ProcessingElement.scala 382:29]
    io.debugIO.weightMatrixData <= _T_21 @[ProcessingElement.scala 383:33]
    io.debugIO.weightMatrixRow <= _T_43 @[ProcessingElement.scala 384:32]
    io.debugIO.weightAdrSPadReadOut <= _T_15 @[ProcessingElement.scala 385:37]
    io.debugIO.productResult <= _T_28 @[ProcessingElement.scala 386:30]
    io.debugIO.pSumResult <= _T_30 @[ProcessingElement.scala 387:27]
    io.debugIO.pSumLoad <= _T_29 @[ProcessingElement.scala 388:25]
    io.debugIO.weightAdrInIdx <= _T_24 @[ProcessingElement.scala 389:31]
    io.debugIO.sPadState <= _T_31 @[ProcessingElement.scala 390:26]
    
  module Queue : 
    input clock : Clock
    input reset : Reset
    output io : {flip enq : {flip ready : UInt<1>, valid : UInt<1>, bits : UInt<4>}, deq : {flip ready : UInt<1>, valid : UInt<1>, bits : UInt<4>}, count : UInt<3>}
    
    cmem _T : UInt<4>[4] @[Decoupled.scala 209:24]
    reg _T_1 : UInt<2>, clock with : (reset => (reset, UInt<2>("h00"))) @[Counter.scala 29:33]
    reg _T_2 : UInt<2>, clock with : (reset => (reset, UInt<2>("h00"))) @[Counter.scala 29:33]
    reg _T_3 : UInt<1>, clock with : (reset => (reset, UInt<1>("h00"))) @[Decoupled.scala 212:35]
    node _T_4 = eq(_T_1, _T_2) @[Decoupled.scala 214:41]
    node _T_5 = eq(_T_3, UInt<1>("h00")) @[Decoupled.scala 215:36]
    node _T_6 = and(_T_4, _T_5) @[Decoupled.scala 215:33]
    node _T_7 = and(_T_4, _T_3) @[Decoupled.scala 216:32]
    node _T_8 = and(io.enq.ready, io.enq.valid) @[Decoupled.scala 40:37]
    wire _T_9 : UInt<1>
    _T_9 <= _T_8
    node _T_10 = and(io.deq.ready, io.deq.valid) @[Decoupled.scala 40:37]
    wire _T_11 : UInt<1>
    _T_11 <= _T_10
    when _T_9 : @[Decoupled.scala 220:17]
      infer mport _T_12 = _T[_T_1], clock @[Decoupled.scala 221:8]
      _T_12 <= io.enq.bits @[Decoupled.scala 221:24]
      node _T_13 = eq(_T_1, UInt<2>("h03")) @[Counter.scala 37:24]
      node _T_14 = add(_T_1, UInt<1>("h01")) @[Counter.scala 38:22]
      node _T_15 = tail(_T_14, 1) @[Counter.scala 38:22]
      _T_1 <= _T_15 @[Counter.scala 38:13]
      skip @[Decoupled.scala 220:17]
    when _T_11 : @[Decoupled.scala 224:17]
      node _T_16 = eq(_T_2, UInt<2>("h03")) @[Counter.scala 37:24]
      node _T_17 = add(_T_2, UInt<1>("h01")) @[Counter.scala 38:22]
      node _T_18 = tail(_T_17, 1) @[Counter.scala 38:22]
      _T_2 <= _T_18 @[Counter.scala 38:13]
      skip @[Decoupled.scala 224:17]
    node _T_19 = neq(_T_9, _T_11) @[Decoupled.scala 227:16]
    when _T_19 : @[Decoupled.scala 227:28]
      _T_3 <= _T_9 @[Decoupled.scala 228:16]
      skip @[Decoupled.scala 227:28]
    node _T_20 = eq(_T_6, UInt<1>("h00")) @[Decoupled.scala 231:19]
    io.deq.valid <= _T_20 @[Decoupled.scala 231:16]
    node _T_21 = eq(_T_7, UInt<1>("h00")) @[Decoupled.scala 232:19]
    io.enq.ready <= _T_21 @[Decoupled.scala 232:16]
    infer mport _T_22 = _T[_T_2], clock @[Decoupled.scala 233:21]
    io.deq.bits <= _T_22 @[Decoupled.scala 233:15]
    when io.enq.valid : @[Decoupled.scala 236:25]
      io.deq.valid <= UInt<1>("h01") @[Decoupled.scala 236:40]
      skip @[Decoupled.scala 236:25]
    when _T_6 : @[Decoupled.scala 237:18]
      io.deq.bits <= io.enq.bits @[Decoupled.scala 238:19]
      _T_11 <= UInt<1>("h00") @[Decoupled.scala 239:14]
      when io.deq.ready : @[Decoupled.scala 240:27]
        _T_9 <= UInt<1>("h00") @[Decoupled.scala 240:36]
        skip @[Decoupled.scala 240:27]
      skip @[Decoupled.scala 237:18]
    node _T_23 = sub(_T_1, _T_2) @[Decoupled.scala 248:40]
    node _T_24 = tail(_T_23, 1) @[Decoupled.scala 248:40]
    node _T_25 = and(_T_3, _T_4) @[Decoupled.scala 250:32]
    node _T_26 = mux(_T_25, UInt<3>("h04"), UInt<1>("h00")) @[Decoupled.scala 250:20]
    node _T_27 = or(_T_26, _T_24) @[Decoupled.scala 250:62]
    io.count <= _T_27 @[Decoupled.scala 250:14]
    
  module Queue_1 : 
    input clock : Clock
    input reset : Reset
    output io : {flip enq : {flip ready : UInt<1>, valid : UInt<1>, bits : UInt<12>}, deq : {flip ready : UInt<1>, valid : UInt<1>, bits : UInt<12>}, count : UInt<3>}
    
    cmem _T : UInt<12>[4] @[Decoupled.scala 209:24]
    reg _T_1 : UInt<2>, clock with : (reset => (reset, UInt<2>("h00"))) @[Counter.scala 29:33]
    reg _T_2 : UInt<2>, clock with : (reset => (reset, UInt<2>("h00"))) @[Counter.scala 29:33]
    reg _T_3 : UInt<1>, clock with : (reset => (reset, UInt<1>("h00"))) @[Decoupled.scala 212:35]
    node _T_4 = eq(_T_1, _T_2) @[Decoupled.scala 214:41]
    node _T_5 = eq(_T_3, UInt<1>("h00")) @[Decoupled.scala 215:36]
    node _T_6 = and(_T_4, _T_5) @[Decoupled.scala 215:33]
    node _T_7 = and(_T_4, _T_3) @[Decoupled.scala 216:32]
    node _T_8 = and(io.enq.ready, io.enq.valid) @[Decoupled.scala 40:37]
    wire _T_9 : UInt<1>
    _T_9 <= _T_8
    node _T_10 = and(io.deq.ready, io.deq.valid) @[Decoupled.scala 40:37]
    wire _T_11 : UInt<1>
    _T_11 <= _T_10
    when _T_9 : @[Decoupled.scala 220:17]
      infer mport _T_12 = _T[_T_1], clock @[Decoupled.scala 221:8]
      _T_12 <= io.enq.bits @[Decoupled.scala 221:24]
      node _T_13 = eq(_T_1, UInt<2>("h03")) @[Counter.scala 37:24]
      node _T_14 = add(_T_1, UInt<1>("h01")) @[Counter.scala 38:22]
      node _T_15 = tail(_T_14, 1) @[Counter.scala 38:22]
      _T_1 <= _T_15 @[Counter.scala 38:13]
      skip @[Decoupled.scala 220:17]
    when _T_11 : @[Decoupled.scala 224:17]
      node _T_16 = eq(_T_2, UInt<2>("h03")) @[Counter.scala 37:24]
      node _T_17 = add(_T_2, UInt<1>("h01")) @[Counter.scala 38:22]
      node _T_18 = tail(_T_17, 1) @[Counter.scala 38:22]
      _T_2 <= _T_18 @[Counter.scala 38:13]
      skip @[Decoupled.scala 224:17]
    node _T_19 = neq(_T_9, _T_11) @[Decoupled.scala 227:16]
    when _T_19 : @[Decoupled.scala 227:28]
      _T_3 <= _T_9 @[Decoupled.scala 228:16]
      skip @[Decoupled.scala 227:28]
    node _T_20 = eq(_T_6, UInt<1>("h00")) @[Decoupled.scala 231:19]
    io.deq.valid <= _T_20 @[Decoupled.scala 231:16]
    node _T_21 = eq(_T_7, UInt<1>("h00")) @[Decoupled.scala 232:19]
    io.enq.ready <= _T_21 @[Decoupled.scala 232:16]
    infer mport _T_22 = _T[_T_2], clock @[Decoupled.scala 233:21]
    io.deq.bits <= _T_22 @[Decoupled.scala 233:15]
    when io.enq.valid : @[Decoupled.scala 236:25]
      io.deq.valid <= UInt<1>("h01") @[Decoupled.scala 236:40]
      skip @[Decoupled.scala 236:25]
    when _T_6 : @[Decoupled.scala 237:18]
      io.deq.bits <= io.enq.bits @[Decoupled.scala 238:19]
      _T_11 <= UInt<1>("h00") @[Decoupled.scala 239:14]
      when io.deq.ready : @[Decoupled.scala 240:27]
        _T_9 <= UInt<1>("h00") @[Decoupled.scala 240:36]
        skip @[Decoupled.scala 240:27]
      skip @[Decoupled.scala 237:18]
    node _T_23 = sub(_T_1, _T_2) @[Decoupled.scala 248:40]
    node _T_24 = tail(_T_23, 1) @[Decoupled.scala 248:40]
    node _T_25 = and(_T_3, _T_4) @[Decoupled.scala 250:32]
    node _T_26 = mux(_T_25, UInt<3>("h04"), UInt<1>("h00")) @[Decoupled.scala 250:20]
    node _T_27 = or(_T_26, _T_24) @[Decoupled.scala 250:62]
    io.count <= _T_27 @[Decoupled.scala 250:14]
    
  module Queue_2 : 
    input clock : Clock
    input reset : Reset
    output io : {flip enq : {flip ready : UInt<1>, valid : UInt<1>, bits : UInt<7>}, deq : {flip ready : UInt<1>, valid : UInt<1>, bits : UInt<7>}, count : UInt<3>}
    
    cmem _T : UInt<7>[4] @[Decoupled.scala 209:24]
    reg _T_1 : UInt<2>, clock with : (reset => (reset, UInt<2>("h00"))) @[Counter.scala 29:33]
    reg _T_2 : UInt<2>, clock with : (reset => (reset, UInt<2>("h00"))) @[Counter.scala 29:33]
    reg _T_3 : UInt<1>, clock with : (reset => (reset, UInt<1>("h00"))) @[Decoupled.scala 212:35]
    node _T_4 = eq(_T_1, _T_2) @[Decoupled.scala 214:41]
    node _T_5 = eq(_T_3, UInt<1>("h00")) @[Decoupled.scala 215:36]
    node _T_6 = and(_T_4, _T_5) @[Decoupled.scala 215:33]
    node _T_7 = and(_T_4, _T_3) @[Decoupled.scala 216:32]
    node _T_8 = and(io.enq.ready, io.enq.valid) @[Decoupled.scala 40:37]
    wire _T_9 : UInt<1>
    _T_9 <= _T_8
    node _T_10 = and(io.deq.ready, io.deq.valid) @[Decoupled.scala 40:37]
    wire _T_11 : UInt<1>
    _T_11 <= _T_10
    when _T_9 : @[Decoupled.scala 220:17]
      infer mport _T_12 = _T[_T_1], clock @[Decoupled.scala 221:8]
      _T_12 <= io.enq.bits @[Decoupled.scala 221:24]
      node _T_13 = eq(_T_1, UInt<2>("h03")) @[Counter.scala 37:24]
      node _T_14 = add(_T_1, UInt<1>("h01")) @[Counter.scala 38:22]
      node _T_15 = tail(_T_14, 1) @[Counter.scala 38:22]
      _T_1 <= _T_15 @[Counter.scala 38:13]
      skip @[Decoupled.scala 220:17]
    when _T_11 : @[Decoupled.scala 224:17]
      node _T_16 = eq(_T_2, UInt<2>("h03")) @[Counter.scala 37:24]
      node _T_17 = add(_T_2, UInt<1>("h01")) @[Counter.scala 38:22]
      node _T_18 = tail(_T_17, 1) @[Counter.scala 38:22]
      _T_2 <= _T_18 @[Counter.scala 38:13]
      skip @[Decoupled.scala 224:17]
    node _T_19 = neq(_T_9, _T_11) @[Decoupled.scala 227:16]
    when _T_19 : @[Decoupled.scala 227:28]
      _T_3 <= _T_9 @[Decoupled.scala 228:16]
      skip @[Decoupled.scala 227:28]
    node _T_20 = eq(_T_6, UInt<1>("h00")) @[Decoupled.scala 231:19]
    io.deq.valid <= _T_20 @[Decoupled.scala 231:16]
    node _T_21 = eq(_T_7, UInt<1>("h00")) @[Decoupled.scala 232:19]
    io.enq.ready <= _T_21 @[Decoupled.scala 232:16]
    infer mport _T_22 = _T[_T_2], clock @[Decoupled.scala 233:21]
    io.deq.bits <= _T_22 @[Decoupled.scala 233:15]
    when io.enq.valid : @[Decoupled.scala 236:25]
      io.deq.valid <= UInt<1>("h01") @[Decoupled.scala 236:40]
      skip @[Decoupled.scala 236:25]
    when _T_6 : @[Decoupled.scala 237:18]
      io.deq.bits <= io.enq.bits @[Decoupled.scala 238:19]
      _T_11 <= UInt<1>("h00") @[Decoupled.scala 239:14]
      when io.deq.ready : @[Decoupled.scala 240:27]
        _T_9 <= UInt<1>("h00") @[Decoupled.scala 240:36]
        skip @[Decoupled.scala 240:27]
      skip @[Decoupled.scala 237:18]
    node _T_23 = sub(_T_1, _T_2) @[Decoupled.scala 248:40]
    node _T_24 = tail(_T_23, 1) @[Decoupled.scala 248:40]
    node _T_25 = and(_T_3, _T_4) @[Decoupled.scala 250:32]
    node _T_26 = mux(_T_25, UInt<3>("h04"), UInt<1>("h00")) @[Decoupled.scala 250:20]
    node _T_27 = or(_T_26, _T_24) @[Decoupled.scala 250:62]
    io.count <= _T_27 @[Decoupled.scala 250:14]
    
  module Queue_3 : 
    input clock : Clock
    input reset : Reset
    output io : {flip enq : {flip ready : UInt<1>, valid : UInt<1>, bits : UInt<12>}, deq : {flip ready : UInt<1>, valid : UInt<1>, bits : UInt<12>}, count : UInt<3>}
    
    cmem _T : UInt<12>[4] @[Decoupled.scala 209:24]
    reg _T_1 : UInt<2>, clock with : (reset => (reset, UInt<2>("h00"))) @[Counter.scala 29:33]
    reg _T_2 : UInt<2>, clock with : (reset => (reset, UInt<2>("h00"))) @[Counter.scala 29:33]
    reg _T_3 : UInt<1>, clock with : (reset => (reset, UInt<1>("h00"))) @[Decoupled.scala 212:35]
    node _T_4 = eq(_T_1, _T_2) @[Decoupled.scala 214:41]
    node _T_5 = eq(_T_3, UInt<1>("h00")) @[Decoupled.scala 215:36]
    node _T_6 = and(_T_4, _T_5) @[Decoupled.scala 215:33]
    node _T_7 = and(_T_4, _T_3) @[Decoupled.scala 216:32]
    node _T_8 = and(io.enq.ready, io.enq.valid) @[Decoupled.scala 40:37]
    wire _T_9 : UInt<1>
    _T_9 <= _T_8
    node _T_10 = and(io.deq.ready, io.deq.valid) @[Decoupled.scala 40:37]
    wire _T_11 : UInt<1>
    _T_11 <= _T_10
    when _T_9 : @[Decoupled.scala 220:17]
      infer mport _T_12 = _T[_T_1], clock @[Decoupled.scala 221:8]
      _T_12 <= io.enq.bits @[Decoupled.scala 221:24]
      node _T_13 = eq(_T_1, UInt<2>("h03")) @[Counter.scala 37:24]
      node _T_14 = add(_T_1, UInt<1>("h01")) @[Counter.scala 38:22]
      node _T_15 = tail(_T_14, 1) @[Counter.scala 38:22]
      _T_1 <= _T_15 @[Counter.scala 38:13]
      skip @[Decoupled.scala 220:17]
    when _T_11 : @[Decoupled.scala 224:17]
      node _T_16 = eq(_T_2, UInt<2>("h03")) @[Counter.scala 37:24]
      node _T_17 = add(_T_2, UInt<1>("h01")) @[Counter.scala 38:22]
      node _T_18 = tail(_T_17, 1) @[Counter.scala 38:22]
      _T_2 <= _T_18 @[Counter.scala 38:13]
      skip @[Decoupled.scala 224:17]
    node _T_19 = neq(_T_9, _T_11) @[Decoupled.scala 227:16]
    when _T_19 : @[Decoupled.scala 227:28]
      _T_3 <= _T_9 @[Decoupled.scala 228:16]
      skip @[Decoupled.scala 227:28]
    node _T_20 = eq(_T_6, UInt<1>("h00")) @[Decoupled.scala 231:19]
    io.deq.valid <= _T_20 @[Decoupled.scala 231:16]
    node _T_21 = eq(_T_7, UInt<1>("h00")) @[Decoupled.scala 232:19]
    io.enq.ready <= _T_21 @[Decoupled.scala 232:16]
    infer mport _T_22 = _T[_T_2], clock @[Decoupled.scala 233:21]
    io.deq.bits <= _T_22 @[Decoupled.scala 233:15]
    when io.enq.valid : @[Decoupled.scala 236:25]
      io.deq.valid <= UInt<1>("h01") @[Decoupled.scala 236:40]
      skip @[Decoupled.scala 236:25]
    when _T_6 : @[Decoupled.scala 237:18]
      io.deq.bits <= io.enq.bits @[Decoupled.scala 238:19]
      _T_11 <= UInt<1>("h00") @[Decoupled.scala 239:14]
      when io.deq.ready : @[Decoupled.scala 240:27]
        _T_9 <= UInt<1>("h00") @[Decoupled.scala 240:36]
        skip @[Decoupled.scala 240:27]
      skip @[Decoupled.scala 237:18]
    node _T_23 = sub(_T_1, _T_2) @[Decoupled.scala 248:40]
    node _T_24 = tail(_T_23, 1) @[Decoupled.scala 248:40]
    node _T_25 = and(_T_3, _T_4) @[Decoupled.scala 250:32]
    node _T_26 = mux(_T_25, UInt<3>("h04"), UInt<1>("h00")) @[Decoupled.scala 250:20]
    node _T_27 = or(_T_26, _T_24) @[Decoupled.scala 250:62]
    io.count <= _T_27 @[Decoupled.scala 250:14]
    
  module Queue_4 : 
    input clock : Clock
    input reset : Reset
    output io : {flip enq : {flip ready : UInt<1>, valid : UInt<1>, bits : UInt<20>}, deq : {flip ready : UInt<1>, valid : UInt<1>, bits : UInt<20>}, count : UInt<3>}
    
    cmem _T : UInt<20>[4] @[Decoupled.scala 209:24]
    reg _T_1 : UInt<2>, clock with : (reset => (reset, UInt<2>("h00"))) @[Counter.scala 29:33]
    reg _T_2 : UInt<2>, clock with : (reset => (reset, UInt<2>("h00"))) @[Counter.scala 29:33]
    reg _T_3 : UInt<1>, clock with : (reset => (reset, UInt<1>("h00"))) @[Decoupled.scala 212:35]
    node _T_4 = eq(_T_1, _T_2) @[Decoupled.scala 214:41]
    node _T_5 = eq(_T_3, UInt<1>("h00")) @[Decoupled.scala 215:36]
    node _T_6 = and(_T_4, _T_5) @[Decoupled.scala 215:33]
    node _T_7 = and(_T_4, _T_3) @[Decoupled.scala 216:32]
    node _T_8 = and(io.enq.ready, io.enq.valid) @[Decoupled.scala 40:37]
    wire _T_9 : UInt<1>
    _T_9 <= _T_8
    node _T_10 = and(io.deq.ready, io.deq.valid) @[Decoupled.scala 40:37]
    wire _T_11 : UInt<1>
    _T_11 <= _T_10
    when _T_9 : @[Decoupled.scala 220:17]
      infer mport _T_12 = _T[_T_1], clock @[Decoupled.scala 221:8]
      _T_12 <= io.enq.bits @[Decoupled.scala 221:24]
      node _T_13 = eq(_T_1, UInt<2>("h03")) @[Counter.scala 37:24]
      node _T_14 = add(_T_1, UInt<1>("h01")) @[Counter.scala 38:22]
      node _T_15 = tail(_T_14, 1) @[Counter.scala 38:22]
      _T_1 <= _T_15 @[Counter.scala 38:13]
      skip @[Decoupled.scala 220:17]
    when _T_11 : @[Decoupled.scala 224:17]
      node _T_16 = eq(_T_2, UInt<2>("h03")) @[Counter.scala 37:24]
      node _T_17 = add(_T_2, UInt<1>("h01")) @[Counter.scala 38:22]
      node _T_18 = tail(_T_17, 1) @[Counter.scala 38:22]
      _T_2 <= _T_18 @[Counter.scala 38:13]
      skip @[Decoupled.scala 224:17]
    node _T_19 = neq(_T_9, _T_11) @[Decoupled.scala 227:16]
    when _T_19 : @[Decoupled.scala 227:28]
      _T_3 <= _T_9 @[Decoupled.scala 228:16]
      skip @[Decoupled.scala 227:28]
    node _T_20 = eq(_T_6, UInt<1>("h00")) @[Decoupled.scala 231:19]
    io.deq.valid <= _T_20 @[Decoupled.scala 231:16]
    node _T_21 = eq(_T_7, UInt<1>("h00")) @[Decoupled.scala 232:19]
    io.enq.ready <= _T_21 @[Decoupled.scala 232:16]
    infer mport _T_22 = _T[_T_2], clock @[Decoupled.scala 233:21]
    io.deq.bits <= _T_22 @[Decoupled.scala 233:15]
    when io.enq.valid : @[Decoupled.scala 236:25]
      io.deq.valid <= UInt<1>("h01") @[Decoupled.scala 236:40]
      skip @[Decoupled.scala 236:25]
    when _T_6 : @[Decoupled.scala 237:18]
      io.deq.bits <= io.enq.bits @[Decoupled.scala 238:19]
      _T_11 <= UInt<1>("h00") @[Decoupled.scala 239:14]
      when io.deq.ready : @[Decoupled.scala 240:27]
        _T_9 <= UInt<1>("h00") @[Decoupled.scala 240:36]
        skip @[Decoupled.scala 240:27]
      skip @[Decoupled.scala 237:18]
    node _T_23 = sub(_T_1, _T_2) @[Decoupled.scala 248:40]
    node _T_24 = tail(_T_23, 1) @[Decoupled.scala 248:40]
    node _T_25 = and(_T_3, _T_4) @[Decoupled.scala 250:32]
    node _T_26 = mux(_T_25, UInt<3>("h04"), UInt<1>("h00")) @[Decoupled.scala 250:20]
    node _T_27 = or(_T_26, _T_24) @[Decoupled.scala 250:62]
    io.count <= _T_27 @[Decoupled.scala 250:14]
    
  module Queue_5 : 
    input clock : Clock
    input reset : Reset
    output io : {flip enq : {flip ready : UInt<1>, valid : UInt<1>, bits : UInt<20>}, deq : {flip ready : UInt<1>, valid : UInt<1>, bits : UInt<20>}, count : UInt<3>}
    
    cmem _T : UInt<20>[4] @[Decoupled.scala 209:24]
    reg _T_1 : UInt<2>, clock with : (reset => (reset, UInt<2>("h00"))) @[Counter.scala 29:33]
    reg _T_2 : UInt<2>, clock with : (reset => (reset, UInt<2>("h00"))) @[Counter.scala 29:33]
    reg _T_3 : UInt<1>, clock with : (reset => (reset, UInt<1>("h00"))) @[Decoupled.scala 212:35]
    node _T_4 = eq(_T_1, _T_2) @[Decoupled.scala 214:41]
    node _T_5 = eq(_T_3, UInt<1>("h00")) @[Decoupled.scala 215:36]
    node _T_6 = and(_T_4, _T_5) @[Decoupled.scala 215:33]
    node _T_7 = and(_T_4, _T_3) @[Decoupled.scala 216:32]
    node _T_8 = and(io.enq.ready, io.enq.valid) @[Decoupled.scala 40:37]
    wire _T_9 : UInt<1>
    _T_9 <= _T_8
    node _T_10 = and(io.deq.ready, io.deq.valid) @[Decoupled.scala 40:37]
    wire _T_11 : UInt<1>
    _T_11 <= _T_10
    when _T_9 : @[Decoupled.scala 220:17]
      infer mport _T_12 = _T[_T_1], clock @[Decoupled.scala 221:8]
      _T_12 <= io.enq.bits @[Decoupled.scala 221:24]
      node _T_13 = eq(_T_1, UInt<2>("h03")) @[Counter.scala 37:24]
      node _T_14 = add(_T_1, UInt<1>("h01")) @[Counter.scala 38:22]
      node _T_15 = tail(_T_14, 1) @[Counter.scala 38:22]
      _T_1 <= _T_15 @[Counter.scala 38:13]
      skip @[Decoupled.scala 220:17]
    when _T_11 : @[Decoupled.scala 224:17]
      node _T_16 = eq(_T_2, UInt<2>("h03")) @[Counter.scala 37:24]
      node _T_17 = add(_T_2, UInt<1>("h01")) @[Counter.scala 38:22]
      node _T_18 = tail(_T_17, 1) @[Counter.scala 38:22]
      _T_2 <= _T_18 @[Counter.scala 38:13]
      skip @[Decoupled.scala 224:17]
    node _T_19 = neq(_T_9, _T_11) @[Decoupled.scala 227:16]
    when _T_19 : @[Decoupled.scala 227:28]
      _T_3 <= _T_9 @[Decoupled.scala 228:16]
      skip @[Decoupled.scala 227:28]
    node _T_20 = eq(_T_6, UInt<1>("h00")) @[Decoupled.scala 231:19]
    io.deq.valid <= _T_20 @[Decoupled.scala 231:16]
    node _T_21 = eq(_T_7, UInt<1>("h00")) @[Decoupled.scala 232:19]
    io.enq.ready <= _T_21 @[Decoupled.scala 232:16]
    infer mport _T_22 = _T[_T_2], clock @[Decoupled.scala 233:21]
    io.deq.bits <= _T_22 @[Decoupled.scala 233:15]
    when io.enq.valid : @[Decoupled.scala 236:25]
      io.deq.valid <= UInt<1>("h01") @[Decoupled.scala 236:40]
      skip @[Decoupled.scala 236:25]
    when _T_6 : @[Decoupled.scala 237:18]
      io.deq.bits <= io.enq.bits @[Decoupled.scala 238:19]
      _T_11 <= UInt<1>("h00") @[Decoupled.scala 239:14]
      when io.deq.ready : @[Decoupled.scala 240:27]
        _T_9 <= UInt<1>("h00") @[Decoupled.scala 240:36]
        skip @[Decoupled.scala 240:27]
      skip @[Decoupled.scala 237:18]
    node _T_23 = sub(_T_1, _T_2) @[Decoupled.scala 248:40]
    node _T_24 = tail(_T_23, 1) @[Decoupled.scala 248:40]
    node _T_25 = and(_T_3, _T_4) @[Decoupled.scala 250:32]
    node _T_26 = mux(_T_25, UInt<3>("h04"), UInt<1>("h00")) @[Decoupled.scala 250:20]
    node _T_27 = or(_T_26, _T_24) @[Decoupled.scala 250:62]
    io.count <= _T_27 @[Decoupled.scala 250:14]
    
  module ProcessingElement : 
    input clock : Clock
    input reset : UInt<1>
    output io : {dataStream : {flip ipsIO : {flip ready : UInt<1>, valid : UInt<1>, bits : UInt<20>}, opsIO : {flip ready : UInt<1>, valid : UInt<1>, bits : UInt<20>}, flip inActIOs : {adrIOs : {data : {flip ready : UInt<1>, valid : UInt<1>, bits : UInt<4>}}, dataIOs : {data : {flip ready : UInt<1>, valid : UInt<1>, bits : UInt<12>}}}, flip weightIOs : {adrIOs : {data : {flip ready : UInt<1>, valid : UInt<1>, bits : UInt<7>}}, dataIOs : {data : {flip ready : UInt<1>, valid : UInt<1>, bits : UInt<12>}}}}, padWF : {inActWriteFin : {adrWriteFin : UInt<1>, dataWriteFin : UInt<1>}, weightWriteFin : {adrWriteFin : UInt<1>, dataWriteFin : UInt<1>}}, topCtrl : {flip pSumEnqOrProduct : {flip ready : UInt<1>, valid : UInt<1>, bits : UInt<1>}, flip doLoadEn : UInt<1>, writeFinish : UInt<1>, calFinish : UInt<1>}, debugIO : {peControlDebugIO : {peState : UInt<2>, doMACEnDebug : UInt<1>}, peSPadDebugIO : {inActMatrixData : UInt<8>, inActMatrixRow : UInt<4>, inActMatrixColumn : UInt<4>, inActAdrInc : UInt<1>, inActDataInc : UInt<1>, inActAdrIdx : UInt<4>, weightAdrSPadReadOut : UInt<7>, weightMatrixData : UInt<8>, weightMatrixRow : UInt<4>, productResult : UInt<20>, pSumResult : UInt<20>, pSumLoad : UInt<20>, weightAdrInIdx : UInt<4>, sPadState : UInt<3>}}}
    
    inst ProcessingElementControl of ProcessingElementControl @[ProcessingElement.scala 8:56]
    ProcessingElementControl.clock <= clock
    ProcessingElementControl.reset <= reset
    inst ProcessingElementPad of ProcessingElementPad @[ProcessingElement.scala 9:51]
    ProcessingElementPad.clock <= clock
    ProcessingElementPad.reset <= reset
    inst Queue of Queue @[Decoupled.scala 287:21]
    Queue.clock <= clock
    Queue.reset <= reset
    Queue.io.enq.valid <= io.dataStream.inActIOs.adrIOs.data.valid @[Decoupled.scala 288:22]
    Queue.io.enq.bits <= io.dataStream.inActIOs.adrIOs.data.bits @[Decoupled.scala 289:21]
    io.dataStream.inActIOs.adrIOs.data.ready <= Queue.io.enq.ready @[Decoupled.scala 290:17]
    ProcessingElementPad.io.dataStream.inActIOs.adrIOs.data.bits <= Queue.io.deq.bits @[ProcessingElement.scala 12:46]
    ProcessingElementPad.io.dataStream.inActIOs.adrIOs.data.valid <= Queue.io.deq.valid @[ProcessingElement.scala 12:46]
    Queue.io.deq.ready <= ProcessingElementPad.io.dataStream.inActIOs.adrIOs.data.ready @[ProcessingElement.scala 12:46]
    inst Queue_1 of Queue_1 @[Decoupled.scala 287:21]
    Queue_1.clock <= clock
    Queue_1.reset <= reset
    Queue_1.io.enq.valid <= io.dataStream.inActIOs.dataIOs.data.valid @[Decoupled.scala 288:22]
    Queue_1.io.enq.bits <= io.dataStream.inActIOs.dataIOs.data.bits @[Decoupled.scala 289:21]
    io.dataStream.inActIOs.dataIOs.data.ready <= Queue_1.io.enq.ready @[Decoupled.scala 290:17]
    ProcessingElementPad.io.dataStream.inActIOs.dataIOs.data.bits <= Queue_1.io.deq.bits @[ProcessingElement.scala 13:47]
    ProcessingElementPad.io.dataStream.inActIOs.dataIOs.data.valid <= Queue_1.io.deq.valid @[ProcessingElement.scala 13:47]
    Queue_1.io.deq.ready <= ProcessingElementPad.io.dataStream.inActIOs.dataIOs.data.ready @[ProcessingElement.scala 13:47]
    inst Queue_2 of Queue_2 @[Decoupled.scala 287:21]
    Queue_2.clock <= clock
    Queue_2.reset <= reset
    Queue_2.io.enq.valid <= io.dataStream.weightIOs.adrIOs.data.valid @[Decoupled.scala 288:22]
    Queue_2.io.enq.bits <= io.dataStream.weightIOs.adrIOs.data.bits @[Decoupled.scala 289:21]
    io.dataStream.weightIOs.adrIOs.data.ready <= Queue_2.io.enq.ready @[Decoupled.scala 290:17]
    ProcessingElementPad.io.dataStream.weightIOs.adrIOs.data.bits <= Queue_2.io.deq.bits @[ProcessingElement.scala 14:47]
    ProcessingElementPad.io.dataStream.weightIOs.adrIOs.data.valid <= Queue_2.io.deq.valid @[ProcessingElement.scala 14:47]
    Queue_2.io.deq.ready <= ProcessingElementPad.io.dataStream.weightIOs.adrIOs.data.ready @[ProcessingElement.scala 14:47]
    inst Queue_3 of Queue_3 @[Decoupled.scala 287:21]
    Queue_3.clock <= clock
    Queue_3.reset <= reset
    Queue_3.io.enq.valid <= io.dataStream.weightIOs.dataIOs.data.valid @[Decoupled.scala 288:22]
    Queue_3.io.enq.bits <= io.dataStream.weightIOs.dataIOs.data.bits @[Decoupled.scala 289:21]
    io.dataStream.weightIOs.dataIOs.data.ready <= Queue_3.io.enq.ready @[Decoupled.scala 290:17]
    ProcessingElementPad.io.dataStream.weightIOs.dataIOs.data.bits <= Queue_3.io.deq.bits @[ProcessingElement.scala 15:48]
    ProcessingElementPad.io.dataStream.weightIOs.dataIOs.data.valid <= Queue_3.io.deq.valid @[ProcessingElement.scala 15:48]
    Queue_3.io.deq.ready <= ProcessingElementPad.io.dataStream.weightIOs.dataIOs.data.ready @[ProcessingElement.scala 15:48]
    io.padWF.inActWriteFin.dataWriteFin <= ProcessingElementPad.io.padWF.inActWriteFin.dataWriteFin @[ProcessingElement.scala 17:74]
    io.padWF.inActWriteFin.adrWriteFin <= ProcessingElementPad.io.padWF.inActWriteFin.adrWriteFin @[ProcessingElement.scala 17:74]
    io.padWF.weightWriteFin.dataWriteFin <= ProcessingElementPad.io.padWF.weightWriteFin.dataWriteFin @[ProcessingElement.scala 17:74]
    io.padWF.weightWriteFin.adrWriteFin <= ProcessingElementPad.io.padWF.weightWriteFin.adrWriteFin @[ProcessingElement.scala 17:74]
    ProcessingElementControl.io.ctrlPad.fromTopIO.calFinish <= ProcessingElementPad.io.padCtrl.fromTopIO.calFinish @[ProcessingElement.scala 22:21]
    ProcessingElementControl.io.ctrlPad.fromTopIO.writeFinish <= ProcessingElementPad.io.padCtrl.fromTopIO.writeFinish @[ProcessingElement.scala 22:21]
    ProcessingElementPad.io.padCtrl.fromTopIO.doLoadEn <= ProcessingElementControl.io.ctrlPad.fromTopIO.doLoadEn @[ProcessingElement.scala 22:21]
    ProcessingElementPad.io.padCtrl.fromTopIO.pSumEnqOrProduct.bits <= ProcessingElementControl.io.ctrlPad.fromTopIO.pSumEnqOrProduct.bits @[ProcessingElement.scala 22:21]
    ProcessingElementPad.io.padCtrl.fromTopIO.pSumEnqOrProduct.valid <= ProcessingElementControl.io.ctrlPad.fromTopIO.pSumEnqOrProduct.valid @[ProcessingElement.scala 22:21]
    ProcessingElementControl.io.ctrlPad.fromTopIO.pSumEnqOrProduct.ready <= ProcessingElementPad.io.padCtrl.fromTopIO.pSumEnqOrProduct.ready @[ProcessingElement.scala 22:21]
    ProcessingElementPad.io.padCtrl.doMACEn <= ProcessingElementControl.io.ctrlPad.doMACEn @[ProcessingElement.scala 22:21]
    ProcessingElementControl.io.ctrlTop.pSumEnqOrProduct.bits <= io.topCtrl.pSumEnqOrProduct.bits @[ProcessingElement.scala 23:31]
    ProcessingElementControl.io.ctrlTop.pSumEnqOrProduct.valid <= io.topCtrl.pSumEnqOrProduct.valid @[ProcessingElement.scala 23:31]
    io.topCtrl.pSumEnqOrProduct.ready <= ProcessingElementControl.io.ctrlTop.pSumEnqOrProduct.ready @[ProcessingElement.scala 23:31]
    io.topCtrl.calFinish <= ProcessingElementControl.io.ctrlTop.calFinish @[ProcessingElement.scala 24:24]
    ProcessingElementControl.io.ctrlTop.doLoadEn <= io.topCtrl.doLoadEn @[ProcessingElement.scala 25:30]
    wire _T : UInt<1> @[ProcessingElement.scala 27:43]
    wire _T_1 : UInt<1>[4] @[ProcessingElement.scala 28:61]
    _T_1[0] <= UInt<1>("h00") @[ProcessingElement.scala 28:61]
    _T_1[1] <= UInt<1>("h00") @[ProcessingElement.scala 28:61]
    _T_1[2] <= UInt<1>("h00") @[ProcessingElement.scala 28:61]
    _T_1[3] <= UInt<1>("h00") @[ProcessingElement.scala 28:61]
    reg _T_2 : UInt<1>[4], clock with : (reset => (reset, _T_1)) @[ProcessingElement.scala 28:53]
    when ProcessingElementPad.io.padWF.inActWriteFin.adrWriteFin : @[ProcessingElement.scala 30:25]
      _T_2[0] <= UInt<1>("h01") @[ProcessingElement.scala 31:28]
      skip @[ProcessingElement.scala 30:25]
    when io.topCtrl.calFinish : @[ProcessingElement.scala 33:33]
      _T_2[0] <= UInt<1>("h00") @[ProcessingElement.scala 34:28]
      skip @[ProcessingElement.scala 33:33]
    when ProcessingElementPad.io.padWF.inActWriteFin.dataWriteFin : @[ProcessingElement.scala 30:25]
      _T_2[1] <= UInt<1>("h01") @[ProcessingElement.scala 31:28]
      skip @[ProcessingElement.scala 30:25]
    when io.topCtrl.calFinish : @[ProcessingElement.scala 33:33]
      _T_2[1] <= UInt<1>("h00") @[ProcessingElement.scala 34:28]
      skip @[ProcessingElement.scala 33:33]
    when ProcessingElementPad.io.padWF.weightWriteFin.adrWriteFin : @[ProcessingElement.scala 30:25]
      _T_2[2] <= UInt<1>("h01") @[ProcessingElement.scala 31:28]
      skip @[ProcessingElement.scala 30:25]
    when io.topCtrl.calFinish : @[ProcessingElement.scala 33:33]
      _T_2[2] <= UInt<1>("h00") @[ProcessingElement.scala 34:28]
      skip @[ProcessingElement.scala 33:33]
    when ProcessingElementPad.io.padWF.weightWriteFin.dataWriteFin : @[ProcessingElement.scala 30:25]
      _T_2[3] <= UInt<1>("h01") @[ProcessingElement.scala 31:28]
      skip @[ProcessingElement.scala 30:25]
    when io.topCtrl.calFinish : @[ProcessingElement.scala 33:33]
      _T_2[3] <= UInt<1>("h00") @[ProcessingElement.scala 34:28]
      skip @[ProcessingElement.scala 33:33]
    node _T_3 = and(_T_2[0], _T_2[1]) @[ProcessingElement.scala 37:49]
    node _T_4 = and(_T_3, _T_2[2]) @[ProcessingElement.scala 37:49]
    node _T_5 = and(_T_4, _T_2[3]) @[ProcessingElement.scala 37:49]
    _T <= _T_5 @[ProcessingElement.scala 37:19]
    io.topCtrl.writeFinish <= _T @[ProcessingElement.scala 38:26]
    ProcessingElementControl.io.ctrlTop.writeFinish <= _T @[ProcessingElement.scala 39:33]
    inst Queue_4 of Queue_4 @[Decoupled.scala 287:21]
    Queue_4.clock <= clock
    Queue_4.reset <= reset
    Queue_4.io.enq.valid <= io.dataStream.ipsIO.valid @[Decoupled.scala 288:22]
    Queue_4.io.enq.bits <= io.dataStream.ipsIO.bits @[Decoupled.scala 289:21]
    io.dataStream.ipsIO.ready <= Queue_4.io.enq.ready @[Decoupled.scala 290:17]
    ProcessingElementPad.io.dataStream.ipsIO.bits <= Queue_4.io.deq.bits @[ProcessingElement.scala 40:29]
    ProcessingElementPad.io.dataStream.ipsIO.valid <= Queue_4.io.deq.valid @[ProcessingElement.scala 40:29]
    Queue_4.io.deq.ready <= ProcessingElementPad.io.dataStream.ipsIO.ready @[ProcessingElement.scala 40:29]
    inst Queue_5 of Queue_5 @[Decoupled.scala 287:21]
    Queue_5.clock <= clock
    Queue_5.reset <= reset
    Queue_5.io.enq.valid <= ProcessingElementPad.io.dataStream.opsIO.valid @[Decoupled.scala 288:22]
    Queue_5.io.enq.bits <= ProcessingElementPad.io.dataStream.opsIO.bits @[Decoupled.scala 289:21]
    ProcessingElementPad.io.dataStream.opsIO.ready <= Queue_5.io.enq.ready @[Decoupled.scala 290:17]
    io.dataStream.opsIO.bits <= Queue_5.io.deq.bits @[ProcessingElement.scala 41:23]
    io.dataStream.opsIO.valid <= Queue_5.io.deq.valid @[ProcessingElement.scala 41:23]
    Queue_5.io.deq.ready <= io.dataStream.opsIO.ready @[ProcessingElement.scala 41:23]
    io.debugIO.peControlDebugIO.doMACEnDebug <= ProcessingElementControl.io.debugIO.doMACEnDebug @[ProcessingElement.scala 43:33]
    io.debugIO.peControlDebugIO.peState <= ProcessingElementControl.io.debugIO.peState @[ProcessingElement.scala 43:33]
    io.debugIO.peSPadDebugIO.sPadState <= ProcessingElementPad.io.debugIO.sPadState @[ProcessingElement.scala 44:30]
    io.debugIO.peSPadDebugIO.weightAdrInIdx <= ProcessingElementPad.io.debugIO.weightAdrInIdx @[ProcessingElement.scala 44:30]
    io.debugIO.peSPadDebugIO.pSumLoad <= ProcessingElementPad.io.debugIO.pSumLoad @[ProcessingElement.scala 44:30]
    io.debugIO.peSPadDebugIO.pSumResult <= ProcessingElementPad.io.debugIO.pSumResult @[ProcessingElement.scala 44:30]
    io.debugIO.peSPadDebugIO.productResult <= ProcessingElementPad.io.debugIO.productResult @[ProcessingElement.scala 44:30]
    io.debugIO.peSPadDebugIO.weightMatrixRow <= ProcessingElementPad.io.debugIO.weightMatrixRow @[ProcessingElement.scala 44:30]
    io.debugIO.peSPadDebugIO.weightMatrixData <= ProcessingElementPad.io.debugIO.weightMatrixData @[ProcessingElement.scala 44:30]
    io.debugIO.peSPadDebugIO.weightAdrSPadReadOut <= ProcessingElementPad.io.debugIO.weightAdrSPadReadOut @[ProcessingElement.scala 44:30]
    io.debugIO.peSPadDebugIO.inActAdrIdx <= ProcessingElementPad.io.debugIO.inActAdrIdx @[ProcessingElement.scala 44:30]
    io.debugIO.peSPadDebugIO.inActDataInc <= ProcessingElementPad.io.debugIO.inActDataInc @[ProcessingElement.scala 44:30]
    io.debugIO.peSPadDebugIO.inActAdrInc <= ProcessingElementPad.io.debugIO.inActAdrInc @[ProcessingElement.scala 44:30]
    io.debugIO.peSPadDebugIO.inActMatrixColumn <= ProcessingElementPad.io.debugIO.inActMatrixColumn @[ProcessingElement.scala 44:30]
    io.debugIO.peSPadDebugIO.inActMatrixRow <= ProcessingElementPad.io.debugIO.inActMatrixRow @[ProcessingElement.scala 44:30]
    io.debugIO.peSPadDebugIO.inActMatrixData <= ProcessingElementPad.io.debugIO.inActMatrixData @[ProcessingElement.scala 44:30]
    
