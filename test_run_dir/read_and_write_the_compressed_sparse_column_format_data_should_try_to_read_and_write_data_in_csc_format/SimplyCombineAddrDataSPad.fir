;buildInfoPackage: chisel3, version: 3.3-SNAPSHOT, scalaVersion: 2.12.10, sbtVersion: 1.3.2
circuit SimplyCombineAddrDataSPad : 
  module SPadAddrModule : 
    input clock : Clock
    input reset : Reset
    output io : {commonIO : {columnNum : UInt<4>, readOutData : UInt<4>, flip readEn : UInt<1>, writeIdx : UInt<4>, dataLenFinIO : {flip writeInDataIO : {flip ready : UInt<1>, valid : UInt<1>, bits : {data : UInt<4>}}, flip streamLen : UInt<4>, writeFin : UInt<1>}}, addrIO : {flip readInIdx : UInt<4>, flip indexInc : UInt<1>}, dataIO : {flip readInIdx : UInt<4>, flip indexInc : UInt<1>}}
    
    reg dataLenReg : UInt<4>, clock with : (reset => (reset, UInt<4>("h09"))) @[ProcessingElement.scala 377:33]
    wire dataWire : UInt<4> @[ProcessingElement.scala 378:28]
    dataLenReg <= io.commonIO.dataLenFinIO.streamLen @[ProcessingElement.scala 379:14]
    reg padWriteIndexReg : UInt<4>, clock with : (reset => (reset, UInt<4>("h00"))) @[ProcessingElement.scala 380:39]
    reg padReadIndexReg : UInt<4>, clock with : (reset => (reset, UInt<4>("h00"))) @[ProcessingElement.scala 381:38]
    wire writeWrapWire : UInt<1> @[ProcessingElement.scala 383:33]
    wire readWrapWire : UInt<1> @[ProcessingElement.scala 384:32]
    wire readIndexInc : UInt<1> @[ProcessingElement.scala 385:32]
    node _T = sub(dataLenReg, UInt<1>("h01")) @[ProcessingElement.scala 386:53]
    node _T_1 = tail(_T, 1) @[ProcessingElement.scala 386:53]
    node _T_2 = eq(padWriteIndexReg, _T_1) @[ProcessingElement.scala 386:37]
    writeWrapWire <= _T_2 @[ProcessingElement.scala 386:17]
    node _T_3 = sub(dataLenReg, UInt<1>("h01")) @[ProcessingElement.scala 387:51]
    node _T_4 = tail(_T_3, 1) @[ProcessingElement.scala 387:51]
    node _T_5 = eq(padReadIndexReg, _T_4) @[ProcessingElement.scala 387:35]
    readWrapWire <= _T_5 @[ProcessingElement.scala 387:16]
    when io.commonIO.dataLenFinIO.writeInDataIO.valid : @[ProcessingElement.scala 389:32]
      io.commonIO.dataLenFinIO.writeInDataIO.ready <= UInt<1>("h01") @[ProcessingElement.scala 390:27]
      node _T_6 = add(padWriteIndexReg, UInt<1>("h01")) @[ProcessingElement.scala 391:42]
      node _T_7 = tail(_T_6, 1) @[ProcessingElement.scala 391:42]
      padWriteIndexReg <= _T_7 @[ProcessingElement.scala 391:22]
      when writeWrapWire : @[ProcessingElement.scala 392:26]
        padWriteIndexReg <= UInt<1>("h00") @[ProcessingElement.scala 393:24]
        skip @[ProcessingElement.scala 392:26]
      skip @[ProcessingElement.scala 389:32]
    else : @[ProcessingElement.scala 395:15]
      io.commonIO.dataLenFinIO.writeInDataIO.ready <= UInt<1>("h00") @[ProcessingElement.scala 396:27]
      skip @[ProcessingElement.scala 395:15]
    when readIndexInc : @[ProcessingElement.scala 399:23]
      node _T_8 = add(padReadIndexReg, UInt<1>("h01")) @[ProcessingElement.scala 400:40]
      node _T_9 = tail(_T_8, 1) @[ProcessingElement.scala 400:40]
      padReadIndexReg <= _T_9 @[ProcessingElement.scala 400:21]
      when readWrapWire : @[ProcessingElement.scala 401:25]
        padReadIndexReg <= UInt<1>("h00") @[ProcessingElement.scala 402:23]
        skip @[ProcessingElement.scala 401:25]
      skip @[ProcessingElement.scala 399:23]
    io.commonIO.writeIdx <= padWriteIndexReg @[ProcessingElement.scala 406:24]
    node _T_10 = and(io.commonIO.dataLenFinIO.writeInDataIO.valid, writeWrapWire) @[ProcessingElement.scala 407:62]
    io.commonIO.dataLenFinIO.writeFin <= _T_10 @[ProcessingElement.scala 407:37]
    io.commonIO.columnNum <= padReadIndexReg @[ProcessingElement.scala 408:25]
    wire _T_11 : UInt<4>[15] @[ProcessingElement.scala 337:44]
    _T_11[0] <= UInt<4>("h00") @[ProcessingElement.scala 337:44]
    _T_11[1] <= UInt<4>("h00") @[ProcessingElement.scala 337:44]
    _T_11[2] <= UInt<4>("h00") @[ProcessingElement.scala 337:44]
    _T_11[3] <= UInt<4>("h00") @[ProcessingElement.scala 337:44]
    _T_11[4] <= UInt<4>("h00") @[ProcessingElement.scala 337:44]
    _T_11[5] <= UInt<4>("h00") @[ProcessingElement.scala 337:44]
    _T_11[6] <= UInt<4>("h00") @[ProcessingElement.scala 337:44]
    _T_11[7] <= UInt<4>("h00") @[ProcessingElement.scala 337:44]
    _T_11[8] <= UInt<4>("h00") @[ProcessingElement.scala 337:44]
    _T_11[9] <= UInt<4>("h00") @[ProcessingElement.scala 337:44]
    _T_11[10] <= UInt<4>("h00") @[ProcessingElement.scala 337:44]
    _T_11[11] <= UInt<4>("h00") @[ProcessingElement.scala 337:44]
    _T_11[12] <= UInt<4>("h00") @[ProcessingElement.scala 337:44]
    _T_11[13] <= UInt<4>("h00") @[ProcessingElement.scala 337:44]
    _T_11[14] <= UInt<4>("h00") @[ProcessingElement.scala 337:44]
    reg addrSPad : UInt<4>[15], clock with : (reset => (reset, _T_11)) @[ProcessingElement.scala 337:36]
    when io.commonIO.dataLenFinIO.writeInDataIO.valid : @[ProcessingElement.scala 339:32]
      addrSPad[padWriteIndexReg] <= io.commonIO.dataLenFinIO.writeInDataIO.bits.data @[ProcessingElement.scala 340:32]
      skip @[ProcessingElement.scala 339:32]
    dataWire <= addrSPad[padReadIndexReg] @[ProcessingElement.scala 343:12]
    io.commonIO.readOutData <= dataWire @[ProcessingElement.scala 344:27]
    readIndexInc <= io.addrIO.indexInc @[ProcessingElement.scala 345:16]
    
  module SPadDataModule : 
    input clock : Clock
    input reset : Reset
    output io : {commonIO : {columnNum : UInt<4>, readOutData : UInt<12>, flip readEn : UInt<1>, writeIdx : UInt<4>, dataLenFinIO : {flip writeInDataIO : {flip ready : UInt<1>, valid : UInt<1>, bits : {data : UInt<12>}}, flip streamLen : UInt<4>, writeFin : UInt<1>}}, addrIO : {flip readInIdx : UInt<4>, flip indexInc : UInt<1>}, dataIO : {flip readInIdx : UInt<4>, flip indexInc : UInt<1>}}
    
    reg dataLenReg : UInt<4>, clock with : (reset => (reset, UInt<4>("h09"))) @[ProcessingElement.scala 377:33]
    wire dataWire : UInt<12> @[ProcessingElement.scala 378:28]
    dataLenReg <= io.commonIO.dataLenFinIO.streamLen @[ProcessingElement.scala 379:14]
    reg padWriteIndexReg : UInt<4>, clock with : (reset => (reset, UInt<4>("h00"))) @[ProcessingElement.scala 380:39]
    reg padReadIndexReg : UInt<4>, clock with : (reset => (reset, UInt<4>("h00"))) @[ProcessingElement.scala 381:38]
    wire writeWrapWire : UInt<1> @[ProcessingElement.scala 383:33]
    wire readWrapWire : UInt<1> @[ProcessingElement.scala 384:32]
    wire readIndexInc : UInt<1> @[ProcessingElement.scala 385:32]
    node _T = sub(dataLenReg, UInt<1>("h01")) @[ProcessingElement.scala 386:53]
    node _T_1 = tail(_T, 1) @[ProcessingElement.scala 386:53]
    node _T_2 = eq(padWriteIndexReg, _T_1) @[ProcessingElement.scala 386:37]
    writeWrapWire <= _T_2 @[ProcessingElement.scala 386:17]
    node _T_3 = sub(dataLenReg, UInt<1>("h01")) @[ProcessingElement.scala 387:51]
    node _T_4 = tail(_T_3, 1) @[ProcessingElement.scala 387:51]
    node _T_5 = eq(padReadIndexReg, _T_4) @[ProcessingElement.scala 387:35]
    readWrapWire <= _T_5 @[ProcessingElement.scala 387:16]
    when io.commonIO.dataLenFinIO.writeInDataIO.valid : @[ProcessingElement.scala 389:32]
      io.commonIO.dataLenFinIO.writeInDataIO.ready <= UInt<1>("h01") @[ProcessingElement.scala 390:27]
      node _T_6 = add(padWriteIndexReg, UInt<1>("h01")) @[ProcessingElement.scala 391:42]
      node _T_7 = tail(_T_6, 1) @[ProcessingElement.scala 391:42]
      padWriteIndexReg <= _T_7 @[ProcessingElement.scala 391:22]
      when writeWrapWire : @[ProcessingElement.scala 392:26]
        padWriteIndexReg <= UInt<1>("h00") @[ProcessingElement.scala 393:24]
        skip @[ProcessingElement.scala 392:26]
      skip @[ProcessingElement.scala 389:32]
    else : @[ProcessingElement.scala 395:15]
      io.commonIO.dataLenFinIO.writeInDataIO.ready <= UInt<1>("h00") @[ProcessingElement.scala 396:27]
      skip @[ProcessingElement.scala 395:15]
    when readIndexInc : @[ProcessingElement.scala 399:23]
      node _T_8 = add(padReadIndexReg, UInt<1>("h01")) @[ProcessingElement.scala 400:40]
      node _T_9 = tail(_T_8, 1) @[ProcessingElement.scala 400:40]
      padReadIndexReg <= _T_9 @[ProcessingElement.scala 400:21]
      when readWrapWire : @[ProcessingElement.scala 401:25]
        padReadIndexReg <= UInt<1>("h00") @[ProcessingElement.scala 402:23]
        skip @[ProcessingElement.scala 401:25]
      skip @[ProcessingElement.scala 399:23]
    io.commonIO.writeIdx <= padWriteIndexReg @[ProcessingElement.scala 406:24]
    node _T_10 = and(io.commonIO.dataLenFinIO.writeInDataIO.valid, writeWrapWire) @[ProcessingElement.scala 407:62]
    io.commonIO.dataLenFinIO.writeFin <= _T_10 @[ProcessingElement.scala 407:37]
    io.commonIO.columnNum <= padReadIndexReg @[ProcessingElement.scala 408:25]
    wire _T_11 : UInt<12>[16] @[ProcessingElement.scala 359:46]
    _T_11[0] <= UInt<12>("h00") @[ProcessingElement.scala 359:46]
    _T_11[1] <= UInt<12>("h00") @[ProcessingElement.scala 359:46]
    _T_11[2] <= UInt<12>("h00") @[ProcessingElement.scala 359:46]
    _T_11[3] <= UInt<12>("h00") @[ProcessingElement.scala 359:46]
    _T_11[4] <= UInt<12>("h00") @[ProcessingElement.scala 359:46]
    _T_11[5] <= UInt<12>("h00") @[ProcessingElement.scala 359:46]
    _T_11[6] <= UInt<12>("h00") @[ProcessingElement.scala 359:46]
    _T_11[7] <= UInt<12>("h00") @[ProcessingElement.scala 359:46]
    _T_11[8] <= UInt<12>("h00") @[ProcessingElement.scala 359:46]
    _T_11[9] <= UInt<12>("h00") @[ProcessingElement.scala 359:46]
    _T_11[10] <= UInt<12>("h00") @[ProcessingElement.scala 359:46]
    _T_11[11] <= UInt<12>("h00") @[ProcessingElement.scala 359:46]
    _T_11[12] <= UInt<12>("h00") @[ProcessingElement.scala 359:46]
    _T_11[13] <= UInt<12>("h00") @[ProcessingElement.scala 359:46]
    _T_11[14] <= UInt<12>("h00") @[ProcessingElement.scala 359:46]
    _T_11[15] <= UInt<12>("h00") @[ProcessingElement.scala 359:46]
    reg _T_12 : UInt<12>[16], clock with : (reset => (reset, _T_11)) @[ProcessingElement.scala 359:38]
    when io.commonIO.dataLenFinIO.writeInDataIO.valid : @[ProcessingElement.scala 360:34]
      _T_12[padWriteIndexReg] <= io.commonIO.dataLenFinIO.writeInDataIO.bits.data @[ProcessingElement.scala 361:34]
      skip @[ProcessingElement.scala 360:34]
    dataWire <= _T_12[padReadIndexReg] @[ProcessingElement.scala 364:14]
    readIndexInc <= io.dataIO.indexInc @[ProcessingElement.scala 366:16]
    io.commonIO.readOutData <= dataWire @[ProcessingElement.scala 367:27]
    
  module SimplyCombineAddrDataSPad : 
    input clock : Clock
    input reset : UInt<1>
    output io : {iactIOs : {dataIOs : {flip writeInDataIO : {flip ready : UInt<1>, valid : UInt<1>, bits : {data : UInt<12>}}, flip streamLen : UInt<4>, writeFin : UInt<1>}, addrIOs : {flip writeInDataIO : {flip ready : UInt<1>, valid : UInt<1>, bits : {data : UInt<4>}}, flip streamLen : UInt<4>, writeFin : UInt<1>}}, iactAddrWriteIdx : UInt<4>, flip iactDataReq : UInt<1>, iactMatrixColumn : UInt<4>, iactMatrixRow : UInt<4>, iactMatrixData : UInt<8>, iactMatrixDataBin : UInt<12>, iactAddrReadEn : UInt<1>, iactAddrReadData : UInt<4>, iactDataReadIndex : UInt<4>, iactDataWriteIdx : UInt<4>}
    
    inst iactAddrSPad of SPadAddrModule @[ProcessingElement.scala 239:44]
    iactAddrSPad.clock <= clock
    iactAddrSPad.reset <= reset
    inst iactDataSPad of SPadDataModule @[ProcessingElement.scala 240:44]
    iactDataSPad.clock <= clock
    iactDataSPad.reset <= reset
    reg sPad : UInt<2>, clock with : (reset => (reset, UInt<2>("h00"))) @[ProcessingElement.scala 243:27]
    wire iactAddrIndexWire : UInt<4> @[ProcessingElement.scala 244:37]
    wire iactAddrDataWire : UInt<4> @[ProcessingElement.scala 245:36]
    wire iactDataIndexWire : UInt<4> @[ProcessingElement.scala 246:37]
    reg iactSPadZeroColumnReg : UInt<1>, clock with : (reset => (reset, UInt<1>("h00"))) @[ProcessingElement.scala 247:44]
    reg iactAddrSPadReadEnReg : UInt<1>, clock with : (reset => (reset, UInt<1>("h00"))) @[ProcessingElement.scala 248:44]
    reg iactDataSPadReadEnReg : UInt<1>, clock with : (reset => (reset, UInt<1>("h00"))) @[ProcessingElement.scala 249:44]
    wire iactAddrSPadIdxIncWire : UInt<1> @[ProcessingElement.scala 250:42]
    wire iactDataSPadIdxIncWire : UInt<1> @[ProcessingElement.scala 251:42]
    reg iactMatrixColumnReg : UInt<4>, clock with : (reset => (reset, UInt<4>("h00"))) @[ProcessingElement.scala 252:42]
    reg iactZeroColumnNumber : UInt<4>, clock with : (reset => (reset, UInt<4>("h00"))) @[ProcessingElement.scala 253:43]
    reg iactDataSPadFirstRead : UInt<1>, clock with : (reset => (reset, UInt<1>("h01"))) @[ProcessingElement.scala 254:44]
    iactAddrSPad.io.addrIO.indexInc <= iactAddrSPadIdxIncWire @[ProcessingElement.scala 255:35]
    iactDataSPad.io.dataIO.indexInc <= iactDataSPadIdxIncWire @[ProcessingElement.scala 256:35]
    node _T = eq(sPad, UInt<2>("h02")) @[ProcessingElement.scala 257:36]
    node _T_1 = add(iactDataIndexWire, UInt<1>("h01")) @[ProcessingElement.scala 257:97]
    node _T_2 = tail(_T_1, 1) @[ProcessingElement.scala 257:97]
    node _T_3 = eq(iactAddrDataWire, _T_2) @[ProcessingElement.scala 257:74]
    node _T_4 = and(_T, _T_3) @[ProcessingElement.scala 257:53]
    node _T_5 = eq(sPad, UInt<2>("h01")) @[ProcessingElement.scala 257:116]
    node _T_6 = eq(iactAddrDataWire, UInt<4>("h0f")) @[ProcessingElement.scala 257:154]
    node _T_7 = and(_T_5, _T_6) @[ProcessingElement.scala 257:133]
    node _T_8 = or(_T_4, _T_7) @[ProcessingElement.scala 257:106]
    iactAddrSPadIdxIncWire <= _T_8 @[ProcessingElement.scala 257:26]
    node _T_9 = eq(sPad, UInt<2>("h01")) @[ProcessingElement.scala 258:36]
    node _T_10 = eq(iactSPadZeroColumnReg, UInt<1>("h00")) @[ProcessingElement.scala 258:56]
    node _T_11 = and(_T_9, _T_10) @[ProcessingElement.scala 258:53]
    node _T_12 = eq(iactDataSPadFirstRead, UInt<1>("h00")) @[ProcessingElement.scala 258:82]
    node _T_13 = and(_T_11, _T_12) @[ProcessingElement.scala 258:79]
    node _T_14 = eq(sPad, UInt<2>("h02")) @[ProcessingElement.scala 258:116]
    node _T_15 = eq(iactAddrSPadIdxIncWire, UInt<1>("h00")) @[ProcessingElement.scala 258:136]
    node _T_16 = and(_T_14, _T_15) @[ProcessingElement.scala 258:133]
    node _T_17 = or(_T_13, _T_16) @[ProcessingElement.scala 258:106]
    iactDataSPadIdxIncWire <= _T_17 @[ProcessingElement.scala 258:26]
    io.iactIOs.addrIOs.writeFin <= iactAddrSPad.io.commonIO.dataLenFinIO.writeFin @[ProcessingElement.scala 259:41]
    iactAddrSPad.io.commonIO.dataLenFinIO.streamLen <= io.iactIOs.addrIOs.streamLen @[ProcessingElement.scala 259:41]
    iactAddrSPad.io.commonIO.dataLenFinIO.writeInDataIO.bits.data <= io.iactIOs.addrIOs.writeInDataIO.bits.data @[ProcessingElement.scala 259:41]
    iactAddrSPad.io.commonIO.dataLenFinIO.writeInDataIO.valid <= io.iactIOs.addrIOs.writeInDataIO.valid @[ProcessingElement.scala 259:41]
    io.iactIOs.addrIOs.writeInDataIO.ready <= iactAddrSPad.io.commonIO.dataLenFinIO.writeInDataIO.ready @[ProcessingElement.scala 259:41]
    io.iactIOs.dataIOs.writeFin <= iactDataSPad.io.commonIO.dataLenFinIO.writeFin @[ProcessingElement.scala 260:41]
    iactDataSPad.io.commonIO.dataLenFinIO.streamLen <= io.iactIOs.dataIOs.streamLen @[ProcessingElement.scala 260:41]
    iactDataSPad.io.commonIO.dataLenFinIO.writeInDataIO.bits.data <= io.iactIOs.dataIOs.writeInDataIO.bits.data @[ProcessingElement.scala 260:41]
    iactDataSPad.io.commonIO.dataLenFinIO.writeInDataIO.valid <= io.iactIOs.dataIOs.writeInDataIO.valid @[ProcessingElement.scala 260:41]
    io.iactIOs.dataIOs.writeInDataIO.ready <= iactDataSPad.io.commonIO.dataLenFinIO.writeInDataIO.ready @[ProcessingElement.scala 260:41]
    io.iactAddrWriteIdx <= iactAddrSPad.io.commonIO.writeIdx @[ProcessingElement.scala 261:23]
    io.iactDataWriteIdx <= iactDataSPad.io.commonIO.writeIdx @[ProcessingElement.scala 262:23]
    iactAddrIndexWire <= iactAddrSPad.io.commonIO.columnNum @[ProcessingElement.scala 264:21]
    io.iactMatrixColumn <= iactMatrixColumnReg @[ProcessingElement.scala 265:23]
    iactAddrDataWire <= iactAddrSPad.io.commonIO.readOutData @[ProcessingElement.scala 266:20]
    io.iactAddrReadData <= iactAddrDataWire @[ProcessingElement.scala 267:23]
    iactAddrSPad.io.commonIO.readEn <= iactAddrSPadReadEnReg @[ProcessingElement.scala 268:35]
    io.iactAddrReadEn <= iactAddrSPadReadEnReg @[ProcessingElement.scala 269:21]
    iactAddrSPad.io.dataIO.indexInc is invalid @[ProcessingElement.scala 270:26]
    iactAddrSPad.io.dataIO.readInIdx is invalid @[ProcessingElement.scala 270:26]
    iactAddrSPad.io.addrIO.readInIdx is invalid @[ProcessingElement.scala 271:36]
    iactDataIndexWire <= iactDataSPad.io.commonIO.columnNum @[ProcessingElement.scala 273:21]
    io.iactDataReadIndex <= iactDataIndexWire @[ProcessingElement.scala 274:24]
    io.iactMatrixDataBin <= iactDataSPad.io.commonIO.readOutData @[ProcessingElement.scala 275:24]
    node iactDataCountVec_0 = bits(iactDataSPad.io.commonIO.readOutData, 0, 0) @[ProcessingElement.scala 276:74]
    node iactDataCountVec_1 = bits(iactDataSPad.io.commonIO.readOutData, 1, 1) @[ProcessingElement.scala 276:74]
    node iactDataCountVec_2 = bits(iactDataSPad.io.commonIO.readOutData, 2, 2) @[ProcessingElement.scala 276:74]
    node iactDataCountVec_3 = bits(iactDataSPad.io.commonIO.readOutData, 3, 3) @[ProcessingElement.scala 276:74]
    node iactDataCountVec_4 = bits(iactDataSPad.io.commonIO.readOutData, 4, 4) @[ProcessingElement.scala 276:74]
    node iactDataCountVec_5 = bits(iactDataSPad.io.commonIO.readOutData, 5, 5) @[ProcessingElement.scala 276:74]
    node iactDataCountVec_6 = bits(iactDataSPad.io.commonIO.readOutData, 6, 6) @[ProcessingElement.scala 276:74]
    node iactDataCountVec_7 = bits(iactDataSPad.io.commonIO.readOutData, 7, 7) @[ProcessingElement.scala 276:74]
    node iactDataCountVec_8 = bits(iactDataSPad.io.commonIO.readOutData, 8, 8) @[ProcessingElement.scala 276:74]
    node iactDataCountVec_9 = bits(iactDataSPad.io.commonIO.readOutData, 9, 9) @[ProcessingElement.scala 276:74]
    node iactDataCountVec_10 = bits(iactDataSPad.io.commonIO.readOutData, 10, 10) @[ProcessingElement.scala 276:74]
    node iactDataCountVec_11 = bits(iactDataSPad.io.commonIO.readOutData, 11, 11) @[ProcessingElement.scala 276:74]
    node _T_18 = cat(iactDataCountVec_5, iactDataCountVec_4) @[Cat.scala 29:58]
    node _T_19 = cat(iactDataCountVec_7, iactDataCountVec_6) @[Cat.scala 29:58]
    node _T_20 = cat(_T_19, _T_18) @[Cat.scala 29:58]
    node _T_21 = cat(iactDataCountVec_9, iactDataCountVec_8) @[Cat.scala 29:58]
    node _T_22 = cat(iactDataCountVec_11, iactDataCountVec_10) @[Cat.scala 29:58]
    node _T_23 = cat(_T_22, _T_21) @[Cat.scala 29:58]
    node _T_24 = cat(_T_23, _T_20) @[Cat.scala 29:58]
    io.iactMatrixData <= _T_24 @[ProcessingElement.scala 277:21]
    node _T_25 = cat(iactDataCountVec_1, iactDataCountVec_0) @[Cat.scala 29:58]
    node _T_26 = cat(iactDataCountVec_3, iactDataCountVec_2) @[Cat.scala 29:58]
    node _T_27 = cat(_T_26, _T_25) @[Cat.scala 29:58]
    io.iactMatrixRow <= _T_27 @[ProcessingElement.scala 278:20]
    iactDataSPad.io.commonIO.readEn <= iactDataSPadReadEnReg @[ProcessingElement.scala 279:35]
    iactDataSPad.io.dataIO.readInIdx is invalid @[ProcessingElement.scala 281:36]
    iactDataSPad.io.addrIO.indexInc is invalid @[ProcessingElement.scala 282:26]
    iactDataSPad.io.addrIO.readInIdx is invalid @[ProcessingElement.scala 282:26]
    node _T_28 = eq(UInt<2>("h00"), sPad) @[Conditional.scala 37:30]
    when _T_28 : @[Conditional.scala 40:58]
      when io.iactDataReq : @[ProcessingElement.scala 288:28]
        sPad <= UInt<2>("h01") @[ProcessingElement.scala 289:14]
        iactAddrSPadReadEnReg <= UInt<1>("h01") @[ProcessingElement.scala 290:31]
        iactDataSPadReadEnReg <= UInt<1>("h00") @[ProcessingElement.scala 291:31]
        iactDataSPadFirstRead <= UInt<1>("h01") @[ProcessingElement.scala 292:31]
        skip @[ProcessingElement.scala 288:28]
      skip @[Conditional.scala 40:58]
    else : @[Conditional.scala 39:67]
      node _T_29 = eq(UInt<2>("h01"), sPad) @[Conditional.scala 37:30]
      when _T_29 : @[Conditional.scala 39:67]
        node _T_30 = eq(iactAddrDataWire, UInt<4>("h0f")) @[ProcessingElement.scala 297:30]
        when _T_30 : @[ProcessingElement.scala 297:52]
          sPad <= UInt<2>("h01") @[ProcessingElement.scala 298:14]
          iactSPadZeroColumnReg <= UInt<1>("h01") @[ProcessingElement.scala 299:31]
          iactAddrSPadReadEnReg <= UInt<1>("h01") @[ProcessingElement.scala 300:31]
          iactDataSPadReadEnReg <= UInt<1>("h00") @[ProcessingElement.scala 301:31]
          node _T_31 = add(iactZeroColumnNumber, UInt<1>("h01")) @[ProcessingElement.scala 302:54]
          node _T_32 = tail(_T_31, 1) @[ProcessingElement.scala 302:54]
          iactZeroColumnNumber <= _T_32 @[ProcessingElement.scala 302:30]
          skip @[ProcessingElement.scala 297:52]
        else : @[ProcessingElement.scala 303:19]
          sPad <= UInt<2>("h02") @[ProcessingElement.scala 304:14]
          iactAddrSPadReadEnReg <= UInt<1>("h00") @[ProcessingElement.scala 305:31]
          iactDataSPadReadEnReg <= UInt<1>("h01") @[ProcessingElement.scala 306:31]
          skip @[ProcessingElement.scala 303:19]
        skip @[Conditional.scala 39:67]
      else : @[Conditional.scala 39:67]
        node _T_33 = eq(UInt<2>("h02"), sPad) @[Conditional.scala 37:30]
        when _T_33 : @[Conditional.scala 39:67]
          iactDataSPadFirstRead <= UInt<1>("h00") @[ProcessingElement.scala 310:29]
          sPad <= UInt<2>("h00") @[ProcessingElement.scala 311:12]
          when iactAddrSPadIdxIncWire : @[ProcessingElement.scala 312:37]
            sPad <= UInt<2>("h01") @[ProcessingElement.scala 313:14]
            iactSPadZeroColumnReg <= UInt<1>("h00") @[ProcessingElement.scala 314:31]
            iactAddrSPadReadEnReg <= UInt<1>("h01") @[ProcessingElement.scala 316:31]
            iactDataSPadReadEnReg <= UInt<1>("h00") @[ProcessingElement.scala 317:31]
            when iactSPadZeroColumnReg : @[ProcessingElement.scala 318:38]
              node _T_34 = add(iactMatrixColumnReg, UInt<1>("h01")) @[ProcessingElement.scala 319:54]
              node _T_35 = tail(_T_34, 1) @[ProcessingElement.scala 319:54]
              node _T_36 = add(_T_35, iactZeroColumnNumber) @[ProcessingElement.scala 319:60]
              node _T_37 = tail(_T_36, 1) @[ProcessingElement.scala 319:60]
              iactMatrixColumnReg <= _T_37 @[ProcessingElement.scala 319:31]
              iactZeroColumnNumber <= UInt<1>("h00") @[ProcessingElement.scala 321:32]
              skip @[ProcessingElement.scala 318:38]
            else : @[ProcessingElement.scala 322:22]
              node _T_38 = add(iactMatrixColumnReg, UInt<1>("h01")) @[ProcessingElement.scala 323:54]
              node _T_39 = tail(_T_38, 1) @[ProcessingElement.scala 323:54]
              iactMatrixColumnReg <= _T_39 @[ProcessingElement.scala 323:31]
              skip @[ProcessingElement.scala 322:22]
            skip @[ProcessingElement.scala 312:37]
          else : @[ProcessingElement.scala 325:20]
            sPad <= UInt<2>("h02") @[ProcessingElement.scala 326:14]
            iactAddrSPadReadEnReg <= UInt<1>("h00") @[ProcessingElement.scala 327:31]
            iactDataSPadReadEnReg <= UInt<1>("h01") @[ProcessingElement.scala 328:31]
            skip @[ProcessingElement.scala 325:20]
          node _T_40 = eq(iactAddrDataWire, iactDataIndexWire) @[ProcessingElement.scala 330:49]
          iactAddrSPadReadEnReg <= _T_40 @[ProcessingElement.scala 330:29]
          skip @[Conditional.scala 39:67]
    
