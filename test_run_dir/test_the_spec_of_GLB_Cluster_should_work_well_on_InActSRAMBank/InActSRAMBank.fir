;buildInfoPackage: chisel3, version: 3.3-SNAPSHOT, scalaVersion: 2.12.10, sbtVersion: 1.3.2
circuit InActSRAMBank : 
  module InActSRAMCommon : 
    input clock : Clock
    input reset : Reset
    output io : {dataPath : {flip inIOs : {data : {flip ready : UInt<1>, valid : UInt<1>, bits : UInt<4>}}, outIOs : {data : {flip ready : UInt<1>, valid : UInt<1>, bits : UInt<4>}}}, ctrlPath : {flip writeOrRead : UInt<1>, flip doEn : UInt<1>, done : UInt<1>}, debugIO : {idx : UInt<9>, idxInc : UInt<1>, idxCount : UInt<9>, currentData : UInt<4>, meetOneZero : UInt<1>, theState : UInt<2>, waitForRead : UInt<1>, doReadWire : UInt<1>}}
    
    smem oneInActSRAM : UInt<4>[486] @[GLBCluster.scala 131:57]
    wire writeOrRead : UInt<1> @[GLBCluster.scala 133:41]
    wire doEnWire : UInt<1> @[GLBCluster.scala 136:38]
    wire doReadWire : UInt<1> @[GLBCluster.scala 137:40]
    wire doWriteWire : UInt<1> @[GLBCluster.scala 138:41]
    wire writeInData : UInt<4> @[GLBCluster.scala 139:41]
    wire readOutData : UInt<4> @[GLBCluster.scala 140:41]
    reg waitForRead : UInt<1>, clock with : (reset => (reset, UInt<1>("h00"))) @[GLBCluster.scala 143:44]
    wire doIdxIncWire : UInt<1> @[GLBCluster.scala 144:42]
    wire nextValid : UInt<1> @[GLBCluster.scala 145:39]
    reg nextValidReg : UInt<1>, clock with : (reset => (reset, UInt<1>("h00"))) @[GLBCluster.scala 146:45]
    reg doDoneReg : UInt<1>, clock with : (reset => (reset, UInt<1>("h00"))) @[GLBCluster.scala 147:42]
    node _T = and(doReadWire, waitForRead) @[GLBCluster.scala 148:60]
    node _T_1 = mux(writeOrRead, doWriteWire, _T) @[GLBCluster.scala 148:22]
    doIdxIncWire <= _T_1 @[GLBCluster.scala 148:16]
    wire _T_2 : UInt<1> @[GLBCluster.scala 182:36]
    wire _T_3 : UInt<1> @[GLBCluster.scala 183:41]
    wire _T_4 : UInt<1> @[GLBCluster.scala 184:35]
    wire _T_5 : UInt<1> @[GLBCluster.scala 185:34]
    reg _T_6 : UInt<9>, clock with : (reset => (reset, UInt<9>("h00"))) @[GLBCluster.scala 186:39]
    wire _T_7 : UInt<4> @[GLBCluster.scala 190:33]
    wire _T_8 : UInt<1> @[GLBCluster.scala 191:32]
    wire _T_9 : UInt<1> @[GLBCluster.scala 193:38]
    wire _T_10 : UInt<1> @[GLBCluster.scala 194:29]
    writeOrRead <= io.ctrlPath.writeOrRead @[GLBCluster.scala 196:15]
    io.ctrlPath.done <= _T_8 @[GLBCluster.scala 197:20]
    node _T_11 = eq(writeOrRead, UInt<1>("h00")) @[GLBCluster.scala 198:16]
    node _T_12 = eq(doDoneReg, UInt<1>("h00")) @[GLBCluster.scala 198:32]
    node _T_13 = or(_T_11, _T_12) @[GLBCluster.scala 198:29]
    node _T_14 = and(_T_13, io.ctrlPath.doEn) @[GLBCluster.scala 198:44]
    doEnWire <= _T_14 @[GLBCluster.scala 198:12]
    node _T_15 = mux(writeOrRead, writeInData, readOutData) @[GLBCluster.scala 199:21]
    _T_7 <= _T_15 @[GLBCluster.scala 199:15]
    when doIdxIncWire : @[GLBCluster.scala 201:23]
      node _T_16 = add(_T_6, UInt<1>("h01")) @[GLBCluster.scala 202:26]
      node _T_17 = tail(_T_16, 1) @[GLBCluster.scala 202:26]
      _T_6 <= _T_17 @[GLBCluster.scala 202:14]
      skip @[GLBCluster.scala 201:23]
    when _T_10 : @[GLBCluster.scala 204:18]
      _T_6 <= UInt<1>("h00") @[GLBCluster.scala 205:14]
      skip @[GLBCluster.scala 204:18]
    writeInData <= io.dataPath.inIOs.data.bits @[GLBCluster.scala 163:17]
    node _T_18 = and(doEnWire, io.dataPath.inIOs.data.valid) @[GLBCluster.scala 164:29]
    doWriteWire <= _T_18 @[GLBCluster.scala 164:17]
    io.dataPath.inIOs.data.ready <= doWriteWire @[GLBCluster.scala 165:21]
    when doIdxIncWire : @[GLBCluster.scala 166:24]
      write mport _T_19 = oneInActSRAM[_T_6], clock
      _T_19 <= writeInData
      skip @[GLBCluster.scala 166:24]
    node _T_20 = eq(waitForRead, UInt<1>("h00")) @[GLBCluster.scala 151:56]
    node _T_21 = and(doEnWire, _T_20) @[GLBCluster.scala 151:53]
    node _T_22 = mux(writeOrRead, UInt<1>("h00"), _T_21) @[GLBCluster.scala 151:21]
    nextValid <= _T_22 @[GLBCluster.scala 151:15]
    node _T_23 = and(nextValid, io.dataPath.outIOs.data.ready) @[GLBCluster.scala 152:31]
    nextValidReg <= _T_23 @[GLBCluster.scala 152:18]
    node _T_24 = eq(_T_8, UInt<1>("h00")) @[GLBCluster.scala 155:24]
    node _T_25 = eq(doEnWire, UInt<1>("h00")) @[GLBCluster.scala 155:56]
    node _T_26 = or(writeOrRead, _T_25) @[GLBCluster.scala 155:53]
    node _T_27 = eq(waitForRead, UInt<1>("h00")) @[GLBCluster.scala 155:80]
    node _T_28 = mux(_T_26, waitForRead, _T_27) @[GLBCluster.scala 155:40]
    node _T_29 = mux(_T_24, _T_28, UInt<1>("h00")) @[GLBCluster.scala 155:23]
    waitForRead <= _T_29 @[GLBCluster.scala 155:17]
    io.dataPath.outIOs.data.valid <= nextValidReg @[GLBCluster.scala 156:21]
    node _T_30 = and(io.dataPath.outIOs.data.ready, nextValidReg) @[GLBCluster.scala 157:35]
    doReadWire <= _T_30 @[GLBCluster.scala 157:16]
    node _T_31 = eq(waitForRead, UInt<1>("h00")) @[GLBCluster.scala 158:54]
    node _T_32 = and(doReadWire, _T_31) @[GLBCluster.scala 158:51]
    wire _T_33 : UInt @[GLBCluster.scala 158:32]
    _T_33 is invalid @[GLBCluster.scala 158:32]
    when _T_32 : @[GLBCluster.scala 158:32]
      _T_33 <= _T_6 @[GLBCluster.scala 158:32]
      node _T_34 = or(_T_33, UInt<9>("h00")) @[GLBCluster.scala 158:32]
      node _T_35 = bits(_T_34, 8, 0) @[GLBCluster.scala 158:32]
      read mport _T_36 = oneInActSRAM[_T_35], clock @[GLBCluster.scala 158:32]
      skip @[GLBCluster.scala 158:32]
    readOutData <= _T_36 @[GLBCluster.scala 158:17]
    node _T_37 = mux(waitForRead, readOutData, UInt<1>("h00")) @[GLBCluster.scala 159:26]
    io.dataPath.outIOs.data.bits <= _T_37 @[GLBCluster.scala 159:20]
    reg _T_38 : UInt<2>, clock with : (reset => (reset, UInt<2>("h00"))) @[GLBCluster.scala 213:34]
    wire _T_39 : UInt<1> @[GLBCluster.scala 214:34]
    node _T_40 = eq(_T_7, UInt<1>("h00")) @[GLBCluster.scala 215:31]
    _T_39 <= _T_40 @[GLBCluster.scala 215:16]
    node _T_41 = and(_T_39, waitForRead) @[GLBCluster.scala 216:65]
    node _T_42 = mux(writeOrRead, _T_39, _T_41) @[GLBCluster.scala 216:24]
    _T_2 <= _T_42 @[GLBCluster.scala 216:18]
    node _T_43 = and(_T_2, doEnWire) @[GLBCluster.scala 217:41]
    _T_3 <= _T_43 @[GLBCluster.scala 217:23]
    node _T_44 = eq(UInt<2>("h00"), _T_38) @[Conditional.scala 37:30]
    when _T_44 : @[Conditional.scala 40:58]
      doDoneReg <= UInt<1>("h00") @[GLBCluster.scala 220:17]
      when _T_3 : @[GLBCluster.scala 221:34]
        _T_38 <= UInt<2>("h01") @[GLBCluster.scala 222:19]
        skip @[GLBCluster.scala 221:34]
      skip @[Conditional.scala 40:58]
    else : @[Conditional.scala 39:67]
      node _T_45 = eq(UInt<2>("h01"), _T_38) @[Conditional.scala 37:30]
      when _T_45 : @[Conditional.scala 39:67]
        when _T_3 : @[GLBCluster.scala 226:34]
          _T_38 <= UInt<2>("h02") @[GLBCluster.scala 227:19]
          skip @[GLBCluster.scala 226:34]
        else : @[GLBCluster.scala 228:20]
          _T_38 <= UInt<2>("h00") @[GLBCluster.scala 229:19]
          skip @[GLBCluster.scala 228:20]
        skip @[Conditional.scala 39:67]
      else : @[Conditional.scala 39:67]
        node _T_46 = eq(UInt<2>("h02"), _T_38) @[Conditional.scala 37:30]
        when _T_46 : @[Conditional.scala 39:67]
          _T_38 <= UInt<2>("h00") @[GLBCluster.scala 233:17]
          skip @[Conditional.scala 39:67]
    node _T_47 = eq(_T_38, UInt<2>("h02")) @[GLBCluster.scala 236:33]
    _T_9 <= _T_47 @[GLBCluster.scala 236:20]
    node _T_48 = eq(_T_38, UInt<2>("h01")) @[GLBCluster.scala 237:29]
    _T_5 <= _T_48 @[GLBCluster.scala 237:16]
    _T_4 <= _T_9 @[GLBCluster.scala 238:17]
    node _T_49 = mux(writeOrRead, _T_4, _T_5) @[GLBCluster.scala 239:20]
    _T_8 <= _T_49 @[GLBCluster.scala 239:14]
    doDoneReg <= _T_8 @[GLBCluster.scala 240:13]
    _T_10 <= _T_9 @[GLBCluster.scala 241:11]
    io.debugIO.idx <= _T_6 @[GLBCluster.scala 172:17]
    io.debugIO.idxInc <= doIdxIncWire @[GLBCluster.scala 173:20]
    io.debugIO.waitForRead <= waitForRead @[GLBCluster.scala 174:25]
    io.debugIO.doReadWire <= doReadWire @[GLBCluster.scala 175:24]
    io.debugIO.currentData <= _T_7 @[GLBCluster.scala 245:28]
    io.debugIO.meetOneZero <= _T_5 @[GLBCluster.scala 246:28]
    io.debugIO.theState <= _T_38 @[GLBCluster.scala 247:25]
    io.debugIO.idxCount is invalid @[GLBCluster.scala 248:25]
    
  module InActSRAMCommon_1 : 
    input clock : Clock
    input reset : Reset
    output io : {dataPath : {flip inIOs : {data : {flip ready : UInt<1>, valid : UInt<1>, bits : UInt<12>}}, outIOs : {data : {flip ready : UInt<1>, valid : UInt<1>, bits : UInt<12>}}}, ctrlPath : {flip writeOrRead : UInt<1>, flip doEn : UInt<1>, done : UInt<1>}, debugIO : {idx : UInt<10>, idxInc : UInt<1>, idxCount : UInt<10>, currentData : UInt<12>, meetOneZero : UInt<1>, theState : UInt<2>, waitForRead : UInt<1>, doReadWire : UInt<1>}}
    
    smem oneInActSRAM : UInt<12>[862] @[GLBCluster.scala 131:57]
    wire writeOrRead : UInt<1> @[GLBCluster.scala 133:41]
    wire doEnWire : UInt<1> @[GLBCluster.scala 136:38]
    wire doReadWire : UInt<1> @[GLBCluster.scala 137:40]
    wire doWriteWire : UInt<1> @[GLBCluster.scala 138:41]
    wire writeInData : UInt<12> @[GLBCluster.scala 139:41]
    wire readOutData : UInt<12> @[GLBCluster.scala 140:41]
    reg waitForRead : UInt<1>, clock with : (reset => (reset, UInt<1>("h00"))) @[GLBCluster.scala 143:44]
    wire doIdxIncWire : UInt<1> @[GLBCluster.scala 144:42]
    wire nextValid : UInt<1> @[GLBCluster.scala 145:39]
    reg nextValidReg : UInt<1>, clock with : (reset => (reset, UInt<1>("h00"))) @[GLBCluster.scala 146:45]
    reg doDoneReg : UInt<1>, clock with : (reset => (reset, UInt<1>("h00"))) @[GLBCluster.scala 147:42]
    node _T = and(doReadWire, waitForRead) @[GLBCluster.scala 148:60]
    node _T_1 = mux(writeOrRead, doWriteWire, _T) @[GLBCluster.scala 148:22]
    doIdxIncWire <= _T_1 @[GLBCluster.scala 148:16]
    wire _T_2 : UInt<1> @[GLBCluster.scala 182:36]
    wire _T_3 : UInt<1> @[GLBCluster.scala 183:41]
    wire _T_4 : UInt<1> @[GLBCluster.scala 184:35]
    wire _T_5 : UInt<1> @[GLBCluster.scala 185:34]
    reg _T_6 : UInt<10>, clock with : (reset => (reset, UInt<10>("h00"))) @[GLBCluster.scala 186:39]
    wire _T_7 : UInt<12> @[GLBCluster.scala 190:33]
    wire _T_8 : UInt<1> @[GLBCluster.scala 191:32]
    wire _T_9 : UInt<1> @[GLBCluster.scala 193:38]
    wire _T_10 : UInt<1> @[GLBCluster.scala 194:29]
    writeOrRead <= io.ctrlPath.writeOrRead @[GLBCluster.scala 196:15]
    io.ctrlPath.done <= _T_8 @[GLBCluster.scala 197:20]
    node _T_11 = eq(writeOrRead, UInt<1>("h00")) @[GLBCluster.scala 198:16]
    node _T_12 = eq(doDoneReg, UInt<1>("h00")) @[GLBCluster.scala 198:32]
    node _T_13 = or(_T_11, _T_12) @[GLBCluster.scala 198:29]
    node _T_14 = and(_T_13, io.ctrlPath.doEn) @[GLBCluster.scala 198:44]
    doEnWire <= _T_14 @[GLBCluster.scala 198:12]
    node _T_15 = mux(writeOrRead, writeInData, readOutData) @[GLBCluster.scala 199:21]
    _T_7 <= _T_15 @[GLBCluster.scala 199:15]
    when doIdxIncWire : @[GLBCluster.scala 201:23]
      node _T_16 = add(_T_6, UInt<1>("h01")) @[GLBCluster.scala 202:26]
      node _T_17 = tail(_T_16, 1) @[GLBCluster.scala 202:26]
      _T_6 <= _T_17 @[GLBCluster.scala 202:14]
      skip @[GLBCluster.scala 201:23]
    when _T_10 : @[GLBCluster.scala 204:18]
      _T_6 <= UInt<1>("h00") @[GLBCluster.scala 205:14]
      skip @[GLBCluster.scala 204:18]
    writeInData <= io.dataPath.inIOs.data.bits @[GLBCluster.scala 163:17]
    node _T_18 = and(doEnWire, io.dataPath.inIOs.data.valid) @[GLBCluster.scala 164:29]
    doWriteWire <= _T_18 @[GLBCluster.scala 164:17]
    io.dataPath.inIOs.data.ready <= doWriteWire @[GLBCluster.scala 165:21]
    when doIdxIncWire : @[GLBCluster.scala 166:24]
      write mport _T_19 = oneInActSRAM[_T_6], clock
      _T_19 <= writeInData
      skip @[GLBCluster.scala 166:24]
    node _T_20 = eq(waitForRead, UInt<1>("h00")) @[GLBCluster.scala 151:56]
    node _T_21 = and(doEnWire, _T_20) @[GLBCluster.scala 151:53]
    node _T_22 = mux(writeOrRead, UInt<1>("h00"), _T_21) @[GLBCluster.scala 151:21]
    nextValid <= _T_22 @[GLBCluster.scala 151:15]
    node _T_23 = and(nextValid, io.dataPath.outIOs.data.ready) @[GLBCluster.scala 152:31]
    nextValidReg <= _T_23 @[GLBCluster.scala 152:18]
    node _T_24 = eq(_T_8, UInt<1>("h00")) @[GLBCluster.scala 155:24]
    node _T_25 = eq(doEnWire, UInt<1>("h00")) @[GLBCluster.scala 155:56]
    node _T_26 = or(writeOrRead, _T_25) @[GLBCluster.scala 155:53]
    node _T_27 = eq(waitForRead, UInt<1>("h00")) @[GLBCluster.scala 155:80]
    node _T_28 = mux(_T_26, waitForRead, _T_27) @[GLBCluster.scala 155:40]
    node _T_29 = mux(_T_24, _T_28, UInt<1>("h00")) @[GLBCluster.scala 155:23]
    waitForRead <= _T_29 @[GLBCluster.scala 155:17]
    io.dataPath.outIOs.data.valid <= nextValidReg @[GLBCluster.scala 156:21]
    node _T_30 = and(io.dataPath.outIOs.data.ready, nextValidReg) @[GLBCluster.scala 157:35]
    doReadWire <= _T_30 @[GLBCluster.scala 157:16]
    node _T_31 = eq(waitForRead, UInt<1>("h00")) @[GLBCluster.scala 158:54]
    node _T_32 = and(doReadWire, _T_31) @[GLBCluster.scala 158:51]
    wire _T_33 : UInt @[GLBCluster.scala 158:32]
    _T_33 is invalid @[GLBCluster.scala 158:32]
    when _T_32 : @[GLBCluster.scala 158:32]
      _T_33 <= _T_6 @[GLBCluster.scala 158:32]
      node _T_34 = or(_T_33, UInt<10>("h00")) @[GLBCluster.scala 158:32]
      node _T_35 = bits(_T_34, 9, 0) @[GLBCluster.scala 158:32]
      read mport _T_36 = oneInActSRAM[_T_35], clock @[GLBCluster.scala 158:32]
      skip @[GLBCluster.scala 158:32]
    readOutData <= _T_36 @[GLBCluster.scala 158:17]
    node _T_37 = mux(waitForRead, readOutData, UInt<1>("h00")) @[GLBCluster.scala 159:26]
    io.dataPath.outIOs.data.bits <= _T_37 @[GLBCluster.scala 159:20]
    reg _T_38 : UInt<2>, clock with : (reset => (reset, UInt<2>("h00"))) @[GLBCluster.scala 213:34]
    wire _T_39 : UInt<1> @[GLBCluster.scala 214:34]
    node _T_40 = eq(_T_7, UInt<1>("h00")) @[GLBCluster.scala 215:31]
    _T_39 <= _T_40 @[GLBCluster.scala 215:16]
    node _T_41 = and(_T_39, waitForRead) @[GLBCluster.scala 216:65]
    node _T_42 = mux(writeOrRead, _T_39, _T_41) @[GLBCluster.scala 216:24]
    _T_2 <= _T_42 @[GLBCluster.scala 216:18]
    node _T_43 = and(_T_2, doEnWire) @[GLBCluster.scala 217:41]
    _T_3 <= _T_43 @[GLBCluster.scala 217:23]
    node _T_44 = eq(UInt<2>("h00"), _T_38) @[Conditional.scala 37:30]
    when _T_44 : @[Conditional.scala 40:58]
      doDoneReg <= UInt<1>("h00") @[GLBCluster.scala 220:17]
      when _T_3 : @[GLBCluster.scala 221:34]
        _T_38 <= UInt<2>("h01") @[GLBCluster.scala 222:19]
        skip @[GLBCluster.scala 221:34]
      skip @[Conditional.scala 40:58]
    else : @[Conditional.scala 39:67]
      node _T_45 = eq(UInt<2>("h01"), _T_38) @[Conditional.scala 37:30]
      when _T_45 : @[Conditional.scala 39:67]
        when _T_3 : @[GLBCluster.scala 226:34]
          _T_38 <= UInt<2>("h02") @[GLBCluster.scala 227:19]
          skip @[GLBCluster.scala 226:34]
        else : @[GLBCluster.scala 228:20]
          _T_38 <= UInt<2>("h00") @[GLBCluster.scala 229:19]
          skip @[GLBCluster.scala 228:20]
        skip @[Conditional.scala 39:67]
      else : @[Conditional.scala 39:67]
        node _T_46 = eq(UInt<2>("h02"), _T_38) @[Conditional.scala 37:30]
        when _T_46 : @[Conditional.scala 39:67]
          _T_38 <= UInt<2>("h00") @[GLBCluster.scala 233:17]
          skip @[Conditional.scala 39:67]
    node _T_47 = eq(_T_38, UInt<2>("h02")) @[GLBCluster.scala 236:33]
    _T_9 <= _T_47 @[GLBCluster.scala 236:20]
    node _T_48 = eq(_T_38, UInt<2>("h01")) @[GLBCluster.scala 237:29]
    _T_5 <= _T_48 @[GLBCluster.scala 237:16]
    _T_4 <= _T_9 @[GLBCluster.scala 238:17]
    node _T_49 = mux(writeOrRead, _T_4, _T_5) @[GLBCluster.scala 239:20]
    _T_8 <= _T_49 @[GLBCluster.scala 239:14]
    doDoneReg <= _T_8 @[GLBCluster.scala 240:13]
    _T_10 <= _T_9 @[GLBCluster.scala 241:11]
    io.debugIO.idx <= _T_6 @[GLBCluster.scala 172:17]
    io.debugIO.idxInc <= doIdxIncWire @[GLBCluster.scala 173:20]
    io.debugIO.waitForRead <= waitForRead @[GLBCluster.scala 174:25]
    io.debugIO.doReadWire <= doReadWire @[GLBCluster.scala 175:24]
    io.debugIO.currentData <= _T_7 @[GLBCluster.scala 245:28]
    io.debugIO.meetOneZero <= _T_5 @[GLBCluster.scala 246:28]
    io.debugIO.theState <= _T_38 @[GLBCluster.scala 247:25]
    io.debugIO.idxCount is invalid @[GLBCluster.scala 248:25]
    
  module InActSRAMBank : 
    input clock : Clock
    input reset : UInt<1>
    output io : {dataPath : {flip inIOs : {adrIOs : {data : {flip ready : UInt<1>, valid : UInt<1>, bits : UInt<4>}}, dataIOs : {data : {flip ready : UInt<1>, valid : UInt<1>, bits : UInt<12>}}}, outIOs : {adrIOs : {data : {flip ready : UInt<1>, valid : UInt<1>, bits : UInt<4>}}, dataIOs : {data : {flip ready : UInt<1>, valid : UInt<1>, bits : UInt<12>}}}}, ctrlPath : {flip writeOrRead : UInt<1>, flip doEn : UInt<1>, done : UInt<1>}, debugIO : {theState : UInt<2>, adrDebug : {commonDebug : {idx : UInt<9>, idxInc : UInt<1>, idxCount : UInt<9>, currentData : UInt<4>, meetOneZero : UInt<1>, theState : UInt<2>, waitForRead : UInt<1>, doReadWire : UInt<1>}, subDone : UInt<1>}, dataDebug : {commonDebug : {idx : UInt<10>, idxInc : UInt<1>, idxCount : UInt<10>, currentData : UInt<12>, meetOneZero : UInt<1>, theState : UInt<2>, waitForRead : UInt<1>, doReadWire : UInt<1>}, subDone : UInt<1>}}}
    
    inst adrSRAM of InActSRAMCommon @[GLBCluster.scala 256:31]
    adrSRAM.clock <= clock
    adrSRAM.reset <= reset
    inst dataSRAM of InActSRAMCommon_1 @[GLBCluster.scala 258:32]
    dataSRAM.clock <= clock
    dataSRAM.reset <= reset
    wire _T : UInt<1> @[GLBCluster.scala 260:34]
    reg _T_1 : UInt<2>, clock with : (reset => (reset, UInt<2>("h00"))) @[GLBCluster.scala 262:35]
    wire _T_2 : UInt<1> @[GLBCluster.scala 263:38]
    wire _T_3 : UInt<1> @[GLBCluster.scala 264:33]
    wire _T_4 : UInt<1> @[GLBCluster.scala 265:34]
    node _T_5 = eq(_T_1, UInt<2>("h01")) @[GLBCluster.scala 266:34]
    _T_2 <= _T_5 @[GLBCluster.scala 266:20]
    _T_3 <= adrSRAM.io.ctrlPath.done @[GLBCluster.scala 267:15]
    _T_4 <= dataSRAM.io.ctrlPath.done @[GLBCluster.scala 268:16]
    node _T_6 = eq(_T_1, UInt<2>("h02")) @[GLBCluster.scala 269:63]
    node _T_7 = or(_T_2, _T_6) @[GLBCluster.scala 269:48]
    adrSRAM.io.ctrlPath.doEn <= _T_7 @[GLBCluster.scala 269:28]
    node _T_8 = eq(_T_1, UInt<2>("h03")) @[GLBCluster.scala 270:64]
    node _T_9 = or(_T_2, _T_8) @[GLBCluster.scala 270:49]
    dataSRAM.io.ctrlPath.doEn <= _T_9 @[GLBCluster.scala 270:29]
    node _T_10 = eq(_T_1, UInt<2>("h03")) @[GLBCluster.scala 271:32]
    node _T_11 = and(_T_10, _T_4) @[GLBCluster.scala 271:51]
    node _T_12 = eq(_T_1, UInt<2>("h02")) @[GLBCluster.scala 271:84]
    node _T_13 = and(_T_12, _T_3) @[GLBCluster.scala 271:102]
    node _T_14 = or(_T_11, _T_13) @[GLBCluster.scala 271:68]
    _T <= _T_14 @[GLBCluster.scala 271:16]
    node _T_15 = eq(UInt<2>("h00"), _T_1) @[Conditional.scala 37:30]
    when _T_15 : @[Conditional.scala 40:58]
      when io.ctrlPath.doEn : @[GLBCluster.scala 274:31]
        _T_1 <= UInt<2>("h01") @[GLBCluster.scala 275:20]
        skip @[GLBCluster.scala 274:31]
      skip @[Conditional.scala 40:58]
    else : @[Conditional.scala 39:67]
      node _T_16 = eq(UInt<2>("h01"), _T_1) @[Conditional.scala 37:30]
      when _T_16 : @[Conditional.scala 39:67]
        when _T_3 : @[GLBCluster.scala 279:26]
          _T_1 <= UInt<2>("h03") @[GLBCluster.scala 280:20]
          skip @[GLBCluster.scala 279:26]
        else : @[GLBCluster.scala 281:34]
          when _T_4 : @[GLBCluster.scala 281:34]
            _T_1 <= UInt<2>("h02") @[GLBCluster.scala 282:20]
            skip @[GLBCluster.scala 281:34]
          else : @[GLBCluster.scala 283:20]
            _T_1 <= UInt<2>("h01") @[GLBCluster.scala 284:20]
            skip @[GLBCluster.scala 283:20]
        skip @[Conditional.scala 39:67]
      else : @[Conditional.scala 39:67]
        node _T_17 = eq(UInt<2>("h03"), _T_1) @[Conditional.scala 37:30]
        when _T_17 : @[Conditional.scala 39:67]
          when _T_4 : @[GLBCluster.scala 288:27]
            _T_1 <= UInt<2>("h00") @[GLBCluster.scala 289:20]
            skip @[GLBCluster.scala 288:27]
          skip @[Conditional.scala 39:67]
        else : @[Conditional.scala 39:67]
          node _T_18 = eq(UInt<2>("h02"), _T_1) @[Conditional.scala 37:30]
          when _T_18 : @[Conditional.scala 39:67]
            when _T_3 : @[GLBCluster.scala 293:26]
              _T_1 <= UInt<2>("h00") @[GLBCluster.scala 294:20]
              skip @[GLBCluster.scala 293:26]
            skip @[Conditional.scala 39:67]
    adrSRAM.io.dataPath.inIOs.data.bits <= io.dataPath.inIOs.adrIOs.data.bits @[GLBCluster.scala 299:29]
    adrSRAM.io.dataPath.inIOs.data.valid <= io.dataPath.inIOs.adrIOs.data.valid @[GLBCluster.scala 299:29]
    io.dataPath.inIOs.adrIOs.data.ready <= adrSRAM.io.dataPath.inIOs.data.ready @[GLBCluster.scala 299:29]
    io.dataPath.outIOs.adrIOs.data.bits <= adrSRAM.io.dataPath.outIOs.data.bits @[GLBCluster.scala 300:30]
    io.dataPath.outIOs.adrIOs.data.valid <= adrSRAM.io.dataPath.outIOs.data.valid @[GLBCluster.scala 300:30]
    adrSRAM.io.dataPath.outIOs.data.ready <= io.dataPath.outIOs.adrIOs.data.ready @[GLBCluster.scala 300:30]
    dataSRAM.io.dataPath.inIOs.data.bits <= io.dataPath.inIOs.dataIOs.data.bits @[GLBCluster.scala 301:30]
    dataSRAM.io.dataPath.inIOs.data.valid <= io.dataPath.inIOs.dataIOs.data.valid @[GLBCluster.scala 301:30]
    io.dataPath.inIOs.dataIOs.data.ready <= dataSRAM.io.dataPath.inIOs.data.ready @[GLBCluster.scala 301:30]
    io.dataPath.outIOs.dataIOs.data.bits <= dataSRAM.io.dataPath.outIOs.data.bits @[GLBCluster.scala 302:31]
    io.dataPath.outIOs.dataIOs.data.valid <= dataSRAM.io.dataPath.outIOs.data.valid @[GLBCluster.scala 302:31]
    dataSRAM.io.dataPath.outIOs.data.ready <= io.dataPath.outIOs.dataIOs.data.ready @[GLBCluster.scala 302:31]
    io.ctrlPath.done <= _T @[GLBCluster.scala 304:20]
    adrSRAM.io.ctrlPath.writeOrRead <= io.ctrlPath.writeOrRead @[GLBCluster.scala 306:19]
    dataSRAM.io.ctrlPath.writeOrRead <= io.ctrlPath.writeOrRead @[GLBCluster.scala 306:19]
    io.debugIO.theState <= _T_1 @[GLBCluster.scala 309:25]
    io.debugIO.adrDebug.subDone <= adrSRAM.io.ctrlPath.done @[GLBCluster.scala 311:21]
    io.debugIO.adrDebug.commonDebug.doReadWire <= adrSRAM.io.debugIO.doReadWire @[GLBCluster.scala 312:25]
    io.debugIO.adrDebug.commonDebug.waitForRead <= adrSRAM.io.debugIO.waitForRead @[GLBCluster.scala 312:25]
    io.debugIO.adrDebug.commonDebug.theState <= adrSRAM.io.debugIO.theState @[GLBCluster.scala 312:25]
    io.debugIO.adrDebug.commonDebug.meetOneZero <= adrSRAM.io.debugIO.meetOneZero @[GLBCluster.scala 312:25]
    io.debugIO.adrDebug.commonDebug.currentData <= adrSRAM.io.debugIO.currentData @[GLBCluster.scala 312:25]
    io.debugIO.adrDebug.commonDebug.idxCount <= adrSRAM.io.debugIO.idxCount @[GLBCluster.scala 312:25]
    io.debugIO.adrDebug.commonDebug.idxInc <= adrSRAM.io.debugIO.idxInc @[GLBCluster.scala 312:25]
    io.debugIO.adrDebug.commonDebug.idx <= adrSRAM.io.debugIO.idx @[GLBCluster.scala 312:25]
    io.debugIO.dataDebug.subDone <= dataSRAM.io.ctrlPath.done @[GLBCluster.scala 311:21]
    io.debugIO.dataDebug.commonDebug.doReadWire <= dataSRAM.io.debugIO.doReadWire @[GLBCluster.scala 312:25]
    io.debugIO.dataDebug.commonDebug.waitForRead <= dataSRAM.io.debugIO.waitForRead @[GLBCluster.scala 312:25]
    io.debugIO.dataDebug.commonDebug.theState <= dataSRAM.io.debugIO.theState @[GLBCluster.scala 312:25]
    io.debugIO.dataDebug.commonDebug.meetOneZero <= dataSRAM.io.debugIO.meetOneZero @[GLBCluster.scala 312:25]
    io.debugIO.dataDebug.commonDebug.currentData <= dataSRAM.io.debugIO.currentData @[GLBCluster.scala 312:25]
    io.debugIO.dataDebug.commonDebug.idxCount <= dataSRAM.io.debugIO.idxCount @[GLBCluster.scala 312:25]
    io.debugIO.dataDebug.commonDebug.idxInc <= dataSRAM.io.debugIO.idxInc @[GLBCluster.scala 312:25]
    io.debugIO.dataDebug.commonDebug.idx <= dataSRAM.io.debugIO.idx @[GLBCluster.scala 312:25]
    
