;buildInfoPackage: chisel3, version: 3.3-SNAPSHOT, scalaVersion: 2.12.10, sbtVersion: 1.3.2
circuit SPadDataModule : 
  module SPadDataModule : 
    input clock : Clock
    input reset : UInt<1>
    output io : {commonIO : {columnNum : UInt<4>, readOutData : UInt<12>, flip readEn : UInt<1>, flip writeEn : UInt<1>, writeIdx : UInt<4>, dataLenFinIO : {flip writeInDataIO : {flip ready : UInt<1>, valid : UInt<1>, bits : {data : UInt<12>}}, flip streamLen : UInt<4>, writeFin : UInt<1>}}, addrIO : {flip readInIdx : UInt<4>, flip indexInc : UInt<1>, flip readInIdxEn : UInt<1>}, dataIO : {flip readInIdx : UInt<4>, flip indexInc : UInt<1>, flip readInIdxEn : UInt<1>}}
    
    reg dataLenReg : UInt<4>, clock with : (reset => (reset, UInt<4>("h09"))) @[SPadModule.scala 79:33]
    wire dataWire : UInt<12> @[SPadModule.scala 80:28]
    dataLenReg <= io.commonIO.dataLenFinIO.streamLen @[SPadModule.scala 81:14]
    reg padWriteIndexReg : UInt<4>, clock with : (reset => (reset, UInt<4>("h00"))) @[SPadModule.scala 82:39]
    reg padReadIndexReg : UInt<4>, clock with : (reset => (reset, UInt<4>("h00"))) @[SPadModule.scala 83:38]
    wire writeWrapWire : UInt<1> @[SPadModule.scala 85:33]
    wire readWrapWire : UInt<1> @[SPadModule.scala 86:32]
    wire readIndexInc : UInt<1> @[SPadModule.scala 87:32]
    node _T = sub(dataLenReg, UInt<1>("h01")) @[SPadModule.scala 88:53]
    node _T_1 = tail(_T, 1) @[SPadModule.scala 88:53]
    node _T_2 = eq(padWriteIndexReg, _T_1) @[SPadModule.scala 88:37]
    writeWrapWire <= _T_2 @[SPadModule.scala 88:17]
    node _T_3 = sub(dataLenReg, UInt<1>("h01")) @[SPadModule.scala 89:51]
    node _T_4 = tail(_T_3, 1) @[SPadModule.scala 89:51]
    node _T_5 = eq(padReadIndexReg, _T_4) @[SPadModule.scala 89:35]
    readWrapWire <= _T_5 @[SPadModule.scala 89:16]
    node _T_6 = and(io.commonIO.dataLenFinIO.writeInDataIO.valid, io.commonIO.writeEn) @[SPadModule.scala 91:31]
    when _T_6 : @[SPadModule.scala 91:55]
      io.commonIO.dataLenFinIO.writeInDataIO.ready <= UInt<1>("h01") @[SPadModule.scala 92:27]
      node _T_7 = add(padWriteIndexReg, UInt<1>("h01")) @[SPadModule.scala 93:42]
      node _T_8 = tail(_T_7, 1) @[SPadModule.scala 93:42]
      padWriteIndexReg <= _T_8 @[SPadModule.scala 93:22]
      when writeWrapWire : @[SPadModule.scala 94:26]
        padWriteIndexReg <= UInt<1>("h00") @[SPadModule.scala 95:24]
        skip @[SPadModule.scala 94:26]
      skip @[SPadModule.scala 91:55]
    else : @[SPadModule.scala 97:15]
      io.commonIO.dataLenFinIO.writeInDataIO.ready <= UInt<1>("h00") @[SPadModule.scala 98:27]
      skip @[SPadModule.scala 97:15]
    io.commonIO.writeIdx <= padWriteIndexReg @[SPadModule.scala 101:24]
    node _T_9 = and(io.commonIO.dataLenFinIO.writeInDataIO.valid, writeWrapWire) @[SPadModule.scala 102:62]
    io.commonIO.dataLenFinIO.writeFin <= _T_9 @[SPadModule.scala 102:37]
    io.commonIO.columnNum <= padReadIndexReg @[SPadModule.scala 103:25]
    wire _T_10 : UInt<12>[16] @[SPadModule.scala 54:46]
    _T_10[0] <= UInt<12>("h00") @[SPadModule.scala 54:46]
    _T_10[1] <= UInt<12>("h00") @[SPadModule.scala 54:46]
    _T_10[2] <= UInt<12>("h00") @[SPadModule.scala 54:46]
    _T_10[3] <= UInt<12>("h00") @[SPadModule.scala 54:46]
    _T_10[4] <= UInt<12>("h00") @[SPadModule.scala 54:46]
    _T_10[5] <= UInt<12>("h00") @[SPadModule.scala 54:46]
    _T_10[6] <= UInt<12>("h00") @[SPadModule.scala 54:46]
    _T_10[7] <= UInt<12>("h00") @[SPadModule.scala 54:46]
    _T_10[8] <= UInt<12>("h00") @[SPadModule.scala 54:46]
    _T_10[9] <= UInt<12>("h00") @[SPadModule.scala 54:46]
    _T_10[10] <= UInt<12>("h00") @[SPadModule.scala 54:46]
    _T_10[11] <= UInt<12>("h00") @[SPadModule.scala 54:46]
    _T_10[12] <= UInt<12>("h00") @[SPadModule.scala 54:46]
    _T_10[13] <= UInt<12>("h00") @[SPadModule.scala 54:46]
    _T_10[14] <= UInt<12>("h00") @[SPadModule.scala 54:46]
    _T_10[15] <= UInt<12>("h00") @[SPadModule.scala 54:46]
    reg _T_11 : UInt<12>[16], clock with : (reset => (reset, _T_10)) @[SPadModule.scala 54:38]
    node _T_12 = and(io.commonIO.dataLenFinIO.writeInDataIO.valid, io.commonIO.writeEn) @[SPadModule.scala 55:33]
    when _T_12 : @[SPadModule.scala 55:57]
      _T_11[padWriteIndexReg] <= io.commonIO.dataLenFinIO.writeInDataIO.bits.data @[SPadModule.scala 56:34]
      skip @[SPadModule.scala 55:57]
    when readIndexInc : @[SPadModule.scala 59:25]
      node _T_13 = add(padReadIndexReg, UInt<1>("h01")) @[SPadModule.scala 60:42]
      node _T_14 = tail(_T_13, 1) @[SPadModule.scala 60:42]
      padReadIndexReg <= _T_14 @[SPadModule.scala 60:23]
      when readWrapWire : @[SPadModule.scala 61:27]
        padReadIndexReg <= UInt<1>("h00") @[SPadModule.scala 62:25]
        skip @[SPadModule.scala 61:27]
      skip @[SPadModule.scala 59:25]
    dataWire <= _T_11[padReadIndexReg] @[SPadModule.scala 66:14]
    readIndexInc <= io.dataIO.indexInc @[SPadModule.scala 68:16]
    io.commonIO.readOutData <= dataWire @[SPadModule.scala 69:27]
    
