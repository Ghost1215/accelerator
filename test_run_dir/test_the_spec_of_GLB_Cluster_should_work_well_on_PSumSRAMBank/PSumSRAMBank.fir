;buildInfoPackage: chisel3, version: 3.3-SNAPSHOT, scalaVersion: 2.12.10, sbtVersion: 1.3.2
circuit PSumSRAMBank : 
  module PSumSRAMBank : 
    input clock : Clock
    input reset : UInt<1>
    output io : {dataPath : {flip inIOs : {flip ready : UInt<1>, valid : UInt<1>, bits : UInt<20>}, outIOs : {flip ready : UInt<1>, valid : UInt<1>, bits : UInt<20>}}, ctrlPath : {flip writeOrRead : UInt<1>, flip doEn : UInt<1>, done : UInt<1>, flip startIdx : UInt<10>}, debugIO : {idx : UInt<10>, idxInc : UInt<1>, idxCount : UInt<10>, currentData : UInt<20>, meetOneZero : UInt<1>, theState : UInt<2>, waitForRead : UInt<1>, doReadWire : UInt<1>}}
    
    smem theSRAM : UInt<20>[768] @[GLBCluster.scala 55:57]
    wire writeOrRead : UInt<1> @[GLBCluster.scala 57:41]
    wire doEnWire : UInt<1> @[GLBCluster.scala 60:38]
    wire doReadWire : UInt<1> @[GLBCluster.scala 61:40]
    wire doWriteWire : UInt<1> @[GLBCluster.scala 62:41]
    wire writeInData : UInt<20> @[GLBCluster.scala 63:41]
    wire readOutData : UInt<20> @[GLBCluster.scala 64:41]
    reg waitForRead : UInt<1>, clock with : (reset => (reset, UInt<1>("h00"))) @[GLBCluster.scala 67:44]
    wire doIdxIncWire : UInt<1> @[GLBCluster.scala 68:42]
    wire nextValid : UInt<1> @[GLBCluster.scala 69:39]
    reg nextValidReg : UInt<1>, clock with : (reset => (reset, UInt<1>("h00"))) @[GLBCluster.scala 70:45]
    reg doDoneReg : UInt<1>, clock with : (reset => (reset, UInt<1>("h00"))) @[GLBCluster.scala 71:42]
    node _T = and(doReadWire, waitForRead) @[GLBCluster.scala 72:60]
    node _T_1 = mux(writeOrRead, doWriteWire, _T) @[GLBCluster.scala 72:22]
    doIdxIncWire <= _T_1 @[GLBCluster.scala 72:16]
    wire _T_2 : UInt<10> @[GLBCluster.scala 25:30]
    wire _T_3 : UInt<10> @[GLBCluster.scala 26:37]
    reg _T_4 : UInt<5>, clock with : (reset => (reset, UInt<5>("h00"))) @[Counter.scala 29:33]
    when doIdxIncWire : @[Counter.scala 71:17]
      node _T_5 = eq(_T_4, UInt<5>("h017")) @[Counter.scala 37:24]
      node _T_6 = add(_T_4, UInt<1>("h01")) @[Counter.scala 38:22]
      node _T_7 = tail(_T_6, 1) @[Counter.scala 38:22]
      _T_4 <= _T_7 @[Counter.scala 38:13]
      when _T_5 : @[Counter.scala 40:21]
        _T_4 <= UInt<1>("h00") @[Counter.scala 40:29]
        skip @[Counter.scala 40:21]
      skip @[Counter.scala 71:17]
    node _T_8 = and(doIdxIncWire, _T_5) @[Counter.scala 72:20]
    _T_2 <= io.ctrlPath.startIdx @[GLBCluster.scala 31:12]
    writeOrRead <= io.ctrlPath.writeOrRead @[GLBCluster.scala 32:15]
    io.ctrlPath.done <= doDoneReg @[GLBCluster.scala 33:20]
    doDoneReg <= _T_8 @[GLBCluster.scala 34:13]
    doEnWire <= io.ctrlPath.doEn @[GLBCluster.scala 36:12]
    node _T_9 = add(_T_2, _T_4) @[GLBCluster.scala 37:25]
    node _T_10 = tail(_T_9, 1) @[GLBCluster.scala 37:25]
    _T_3 <= _T_10 @[GLBCluster.scala 37:13]
    writeInData <= io.dataPath.inIOs.bits @[GLBCluster.scala 87:17]
    node _T_11 = and(doEnWire, io.dataPath.inIOs.valid) @[GLBCluster.scala 88:29]
    doWriteWire <= _T_11 @[GLBCluster.scala 88:17]
    io.dataPath.inIOs.ready <= doWriteWire @[GLBCluster.scala 89:21]
    when doIdxIncWire : @[GLBCluster.scala 90:24]
      write mport _T_12 = theSRAM[_T_3], clock
      _T_12 <= writeInData
      skip @[GLBCluster.scala 90:24]
    node _T_13 = eq(waitForRead, UInt<1>("h00")) @[GLBCluster.scala 75:56]
    node _T_14 = and(doEnWire, _T_13) @[GLBCluster.scala 75:53]
    node _T_15 = mux(writeOrRead, UInt<1>("h00"), _T_14) @[GLBCluster.scala 75:21]
    nextValid <= _T_15 @[GLBCluster.scala 75:15]
    node _T_16 = and(nextValid, io.dataPath.outIOs.ready) @[GLBCluster.scala 76:31]
    nextValidReg <= _T_16 @[GLBCluster.scala 76:18]
    node _T_17 = eq(_T_8, UInt<1>("h00")) @[GLBCluster.scala 79:24]
    node _T_18 = eq(doEnWire, UInt<1>("h00")) @[GLBCluster.scala 79:56]
    node _T_19 = or(writeOrRead, _T_18) @[GLBCluster.scala 79:53]
    node _T_20 = eq(waitForRead, UInt<1>("h00")) @[GLBCluster.scala 79:80]
    node _T_21 = mux(_T_19, waitForRead, _T_20) @[GLBCluster.scala 79:40]
    node _T_22 = mux(_T_17, _T_21, UInt<1>("h00")) @[GLBCluster.scala 79:23]
    waitForRead <= _T_22 @[GLBCluster.scala 79:17]
    io.dataPath.outIOs.valid <= nextValidReg @[GLBCluster.scala 80:21]
    node _T_23 = and(io.dataPath.outIOs.ready, nextValidReg) @[GLBCluster.scala 81:35]
    doReadWire <= _T_23 @[GLBCluster.scala 81:16]
    node _T_24 = eq(waitForRead, UInt<1>("h00")) @[GLBCluster.scala 82:54]
    node _T_25 = and(doReadWire, _T_24) @[GLBCluster.scala 82:51]
    wire _T_26 : UInt @[GLBCluster.scala 82:32]
    _T_26 is invalid @[GLBCluster.scala 82:32]
    when _T_25 : @[GLBCluster.scala 82:32]
      _T_26 <= _T_3 @[GLBCluster.scala 82:32]
      node _T_27 = or(_T_26, UInt<10>("h00")) @[GLBCluster.scala 82:32]
      node _T_28 = bits(_T_27, 9, 0) @[GLBCluster.scala 82:32]
      read mport _T_29 = theSRAM[_T_28], clock @[GLBCluster.scala 82:32]
      skip @[GLBCluster.scala 82:32]
    readOutData <= _T_29 @[GLBCluster.scala 82:17]
    node _T_30 = mux(waitForRead, readOutData, UInt<1>("h00")) @[GLBCluster.scala 83:26]
    io.dataPath.outIOs.bits <= _T_30 @[GLBCluster.scala 83:20]
    io.debugIO.idx <= _T_3 @[GLBCluster.scala 96:17]
    io.debugIO.idxInc <= doIdxIncWire @[GLBCluster.scala 97:20]
    io.debugIO.waitForRead <= waitForRead @[GLBCluster.scala 98:25]
    io.debugIO.doReadWire <= doReadWire @[GLBCluster.scala 99:24]
    io.debugIO.idxCount <= _T_4 @[GLBCluster.scala 45:25]
    io.debugIO.currentData is invalid @[GLBCluster.scala 46:28]
    io.debugIO.meetOneZero is invalid @[GLBCluster.scala 47:28]
    io.debugIO.theState is invalid @[GLBCluster.scala 48:25]
    
