;buildInfoPackage: chisel3, version: 3.3-SNAPSHOT, scalaVersion: 2.12.10, sbtVersion: 1.3.2
circuit SimplyCombineAddrDataSPad : 
  module SPadAddrModule : 
    input clock : Clock
    input reset : Reset
    output io : {commonIO : {columnNum : UInt<4>, readOutData : UInt<4>, flip readEn : UInt<1>, writeIdx : UInt<4>, dataLenFinIO : {flip writeInDataIO : {flip ready : UInt<1>, valid : UInt<1>, bits : {data : UInt<4>}}, flip streamLen : UInt<4>, writeFin : UInt<1>}}, addrIO : {flip readInIdx : UInt<4>, flip indexInc : UInt<1>}, dataIO : {flip readInIdx : UInt<4>, flip indexInc : UInt<1>}}
    
    reg dataLenReg : UInt<4>, clock with : (reset => (reset, UInt<4>("h09"))) @[ProcessingElement.scala 474:33]
    wire dataWire : UInt<4> @[ProcessingElement.scala 475:28]
    dataLenReg <= io.commonIO.dataLenFinIO.streamLen @[ProcessingElement.scala 476:14]
    reg padWriteIndexReg : UInt<4>, clock with : (reset => (reset, UInt<4>("h00"))) @[ProcessingElement.scala 477:39]
    reg padReadIndexReg : UInt<4>, clock with : (reset => (reset, UInt<4>("h00"))) @[ProcessingElement.scala 478:38]
    wire writeWrapWire : UInt<1> @[ProcessingElement.scala 480:33]
    wire readWrapWire : UInt<1> @[ProcessingElement.scala 481:32]
    wire readIndexInc : UInt<1> @[ProcessingElement.scala 482:32]
    node _T = sub(dataLenReg, UInt<1>("h01")) @[ProcessingElement.scala 483:53]
    node _T_1 = tail(_T, 1) @[ProcessingElement.scala 483:53]
    node _T_2 = eq(padWriteIndexReg, _T_1) @[ProcessingElement.scala 483:37]
    writeWrapWire <= _T_2 @[ProcessingElement.scala 483:17]
    node _T_3 = sub(dataLenReg, UInt<1>("h01")) @[ProcessingElement.scala 484:51]
    node _T_4 = tail(_T_3, 1) @[ProcessingElement.scala 484:51]
    node _T_5 = eq(padReadIndexReg, _T_4) @[ProcessingElement.scala 484:35]
    readWrapWire <= _T_5 @[ProcessingElement.scala 484:16]
    when io.commonIO.dataLenFinIO.writeInDataIO.valid : @[ProcessingElement.scala 486:32]
      io.commonIO.dataLenFinIO.writeInDataIO.ready <= UInt<1>("h01") @[ProcessingElement.scala 487:27]
      node _T_6 = add(padWriteIndexReg, UInt<1>("h01")) @[ProcessingElement.scala 488:42]
      node _T_7 = tail(_T_6, 1) @[ProcessingElement.scala 488:42]
      padWriteIndexReg <= _T_7 @[ProcessingElement.scala 488:22]
      when writeWrapWire : @[ProcessingElement.scala 489:26]
        padWriteIndexReg <= UInt<1>("h00") @[ProcessingElement.scala 490:24]
        skip @[ProcessingElement.scala 489:26]
      skip @[ProcessingElement.scala 486:32]
    else : @[ProcessingElement.scala 492:15]
      io.commonIO.dataLenFinIO.writeInDataIO.ready <= UInt<1>("h00") @[ProcessingElement.scala 493:27]
      skip @[ProcessingElement.scala 492:15]
    when readIndexInc : @[ProcessingElement.scala 496:23]
      node _T_8 = add(padReadIndexReg, UInt<1>("h01")) @[ProcessingElement.scala 497:40]
      node _T_9 = tail(_T_8, 1) @[ProcessingElement.scala 497:40]
      padReadIndexReg <= _T_9 @[ProcessingElement.scala 497:21]
      when readWrapWire : @[ProcessingElement.scala 498:25]
        padReadIndexReg <= UInt<1>("h00") @[ProcessingElement.scala 499:23]
        skip @[ProcessingElement.scala 498:25]
      skip @[ProcessingElement.scala 496:23]
    io.commonIO.writeIdx <= padWriteIndexReg @[ProcessingElement.scala 503:24]
    node _T_10 = and(io.commonIO.dataLenFinIO.writeInDataIO.valid, writeWrapWire) @[ProcessingElement.scala 504:62]
    io.commonIO.dataLenFinIO.writeFin <= _T_10 @[ProcessingElement.scala 504:37]
    io.commonIO.columnNum <= padReadIndexReg @[ProcessingElement.scala 505:25]
    wire _T_11 : UInt<4>[15] @[ProcessingElement.scala 433:44]
    _T_11[0] <= UInt<4>("h00") @[ProcessingElement.scala 433:44]
    _T_11[1] <= UInt<4>("h00") @[ProcessingElement.scala 433:44]
    _T_11[2] <= UInt<4>("h00") @[ProcessingElement.scala 433:44]
    _T_11[3] <= UInt<4>("h00") @[ProcessingElement.scala 433:44]
    _T_11[4] <= UInt<4>("h00") @[ProcessingElement.scala 433:44]
    _T_11[5] <= UInt<4>("h00") @[ProcessingElement.scala 433:44]
    _T_11[6] <= UInt<4>("h00") @[ProcessingElement.scala 433:44]
    _T_11[7] <= UInt<4>("h00") @[ProcessingElement.scala 433:44]
    _T_11[8] <= UInt<4>("h00") @[ProcessingElement.scala 433:44]
    _T_11[9] <= UInt<4>("h00") @[ProcessingElement.scala 433:44]
    _T_11[10] <= UInt<4>("h00") @[ProcessingElement.scala 433:44]
    _T_11[11] <= UInt<4>("h00") @[ProcessingElement.scala 433:44]
    _T_11[12] <= UInt<4>("h00") @[ProcessingElement.scala 433:44]
    _T_11[13] <= UInt<4>("h00") @[ProcessingElement.scala 433:44]
    _T_11[14] <= UInt<4>("h00") @[ProcessingElement.scala 433:44]
    reg addrSPad : UInt<4>[15], clock with : (reset => (reset, _T_11)) @[ProcessingElement.scala 433:36]
    when io.commonIO.dataLenFinIO.writeInDataIO.valid : @[ProcessingElement.scala 435:32]
      addrSPad[padWriteIndexReg] <= io.commonIO.dataLenFinIO.writeInDataIO.bits.data @[ProcessingElement.scala 436:32]
      skip @[ProcessingElement.scala 435:32]
    dataWire <= addrSPad[padReadIndexReg] @[ProcessingElement.scala 439:12]
    io.commonIO.readOutData <= dataWire @[ProcessingElement.scala 440:27]
    readIndexInc <= io.addrIO.indexInc @[ProcessingElement.scala 441:16]
    
  module SPadDataModule : 
    input clock : Clock
    input reset : Reset
    output io : {commonIO : {columnNum : UInt<4>, readOutData : UInt<12>, flip readEn : UInt<1>, writeIdx : UInt<4>, dataLenFinIO : {flip writeInDataIO : {flip ready : UInt<1>, valid : UInt<1>, bits : {data : UInt<12>}}, flip streamLen : UInt<4>, writeFin : UInt<1>}}, addrIO : {flip readInIdx : UInt<4>, flip indexInc : UInt<1>}, dataIO : {flip readInIdx : UInt<4>, flip indexInc : UInt<1>}}
    
    reg dataLenReg : UInt<4>, clock with : (reset => (reset, UInt<4>("h09"))) @[ProcessingElement.scala 474:33]
    wire dataWire : UInt<12> @[ProcessingElement.scala 475:28]
    dataLenReg <= io.commonIO.dataLenFinIO.streamLen @[ProcessingElement.scala 476:14]
    reg padWriteIndexReg : UInt<4>, clock with : (reset => (reset, UInt<4>("h00"))) @[ProcessingElement.scala 477:39]
    reg padReadIndexReg : UInt<4>, clock with : (reset => (reset, UInt<4>("h00"))) @[ProcessingElement.scala 478:38]
    wire writeWrapWire : UInt<1> @[ProcessingElement.scala 480:33]
    wire readWrapWire : UInt<1> @[ProcessingElement.scala 481:32]
    wire readIndexInc : UInt<1> @[ProcessingElement.scala 482:32]
    node _T = sub(dataLenReg, UInt<1>("h01")) @[ProcessingElement.scala 483:53]
    node _T_1 = tail(_T, 1) @[ProcessingElement.scala 483:53]
    node _T_2 = eq(padWriteIndexReg, _T_1) @[ProcessingElement.scala 483:37]
    writeWrapWire <= _T_2 @[ProcessingElement.scala 483:17]
    node _T_3 = sub(dataLenReg, UInt<1>("h01")) @[ProcessingElement.scala 484:51]
    node _T_4 = tail(_T_3, 1) @[ProcessingElement.scala 484:51]
    node _T_5 = eq(padReadIndexReg, _T_4) @[ProcessingElement.scala 484:35]
    readWrapWire <= _T_5 @[ProcessingElement.scala 484:16]
    when io.commonIO.dataLenFinIO.writeInDataIO.valid : @[ProcessingElement.scala 486:32]
      io.commonIO.dataLenFinIO.writeInDataIO.ready <= UInt<1>("h01") @[ProcessingElement.scala 487:27]
      node _T_6 = add(padWriteIndexReg, UInt<1>("h01")) @[ProcessingElement.scala 488:42]
      node _T_7 = tail(_T_6, 1) @[ProcessingElement.scala 488:42]
      padWriteIndexReg <= _T_7 @[ProcessingElement.scala 488:22]
      when writeWrapWire : @[ProcessingElement.scala 489:26]
        padWriteIndexReg <= UInt<1>("h00") @[ProcessingElement.scala 490:24]
        skip @[ProcessingElement.scala 489:26]
      skip @[ProcessingElement.scala 486:32]
    else : @[ProcessingElement.scala 492:15]
      io.commonIO.dataLenFinIO.writeInDataIO.ready <= UInt<1>("h00") @[ProcessingElement.scala 493:27]
      skip @[ProcessingElement.scala 492:15]
    when readIndexInc : @[ProcessingElement.scala 496:23]
      node _T_8 = add(padReadIndexReg, UInt<1>("h01")) @[ProcessingElement.scala 497:40]
      node _T_9 = tail(_T_8, 1) @[ProcessingElement.scala 497:40]
      padReadIndexReg <= _T_9 @[ProcessingElement.scala 497:21]
      when readWrapWire : @[ProcessingElement.scala 498:25]
        padReadIndexReg <= UInt<1>("h00") @[ProcessingElement.scala 499:23]
        skip @[ProcessingElement.scala 498:25]
      skip @[ProcessingElement.scala 496:23]
    io.commonIO.writeIdx <= padWriteIndexReg @[ProcessingElement.scala 503:24]
    node _T_10 = and(io.commonIO.dataLenFinIO.writeInDataIO.valid, writeWrapWire) @[ProcessingElement.scala 504:62]
    io.commonIO.dataLenFinIO.writeFin <= _T_10 @[ProcessingElement.scala 504:37]
    io.commonIO.columnNum <= padReadIndexReg @[ProcessingElement.scala 505:25]
    wire _T_11 : UInt<12>[16] @[ProcessingElement.scala 456:46]
    _T_11[0] <= UInt<12>("h00") @[ProcessingElement.scala 456:46]
    _T_11[1] <= UInt<12>("h00") @[ProcessingElement.scala 456:46]
    _T_11[2] <= UInt<12>("h00") @[ProcessingElement.scala 456:46]
    _T_11[3] <= UInt<12>("h00") @[ProcessingElement.scala 456:46]
    _T_11[4] <= UInt<12>("h00") @[ProcessingElement.scala 456:46]
    _T_11[5] <= UInt<12>("h00") @[ProcessingElement.scala 456:46]
    _T_11[6] <= UInt<12>("h00") @[ProcessingElement.scala 456:46]
    _T_11[7] <= UInt<12>("h00") @[ProcessingElement.scala 456:46]
    _T_11[8] <= UInt<12>("h00") @[ProcessingElement.scala 456:46]
    _T_11[9] <= UInt<12>("h00") @[ProcessingElement.scala 456:46]
    _T_11[10] <= UInt<12>("h00") @[ProcessingElement.scala 456:46]
    _T_11[11] <= UInt<12>("h00") @[ProcessingElement.scala 456:46]
    _T_11[12] <= UInt<12>("h00") @[ProcessingElement.scala 456:46]
    _T_11[13] <= UInt<12>("h00") @[ProcessingElement.scala 456:46]
    _T_11[14] <= UInt<12>("h00") @[ProcessingElement.scala 456:46]
    _T_11[15] <= UInt<12>("h00") @[ProcessingElement.scala 456:46]
    reg _T_12 : UInt<12>[16], clock with : (reset => (reset, _T_11)) @[ProcessingElement.scala 456:38]
    when io.commonIO.dataLenFinIO.writeInDataIO.valid : @[ProcessingElement.scala 457:34]
      _T_12[padWriteIndexReg] <= io.commonIO.dataLenFinIO.writeInDataIO.bits.data @[ProcessingElement.scala 458:34]
      skip @[ProcessingElement.scala 457:34]
    dataWire <= _T_12[padReadIndexReg] @[ProcessingElement.scala 461:14]
    readIndexInc <= io.dataIO.indexInc @[ProcessingElement.scala 463:16]
    io.commonIO.readOutData <= dataWire @[ProcessingElement.scala 464:27]
    
  module SimplyCombineAddrDataSPad : 
    input clock : Clock
    input reset : UInt<1>
    output io : {iactIOs : {dataIOs : {flip writeInDataIO : {flip ready : UInt<1>, valid : UInt<1>, bits : {data : UInt<12>}}, flip streamLen : UInt<4>, writeFin : UInt<1>}, addrIOs : {flip writeInDataIO : {flip ready : UInt<1>, valid : UInt<1>, bits : {data : UInt<4>}}, flip streamLen : UInt<4>, writeFin : UInt<1>}}, iactAddrWriteIdx : UInt<4>, flip iactDataReq : UInt<1>, iactMatrixColumn : UInt<4>, iactMatrixRow : UInt<4>, iactMatrixData : UInt<8>, iactMatrixDataBin : UInt<12>, iactAddrReadEn : UInt<1>, iactAddrReadData : UInt<4>, iactDataReadIndex : UInt<4>, iactDataWriteIdx : UInt<4>}
    
    inst iactAddrSPad of SPadAddrModule @[ProcessingElement.scala 328:44]
    iactAddrSPad.clock <= clock
    iactAddrSPad.reset <= reset
    inst iactDataSPad of SPadDataModule @[ProcessingElement.scala 329:44]
    iactDataSPad.clock <= clock
    iactDataSPad.reset <= reset
    reg sPad : UInt<2>, clock with : (reset => (reset, UInt<2>("h00"))) @[ProcessingElement.scala 332:27]
    wire iactAddrIndexWire : UInt<4> @[ProcessingElement.scala 333:37]
    wire iactAddrDataWire : UInt<4> @[ProcessingElement.scala 334:36]
    wire iactDataIndexWire : UInt<4> @[ProcessingElement.scala 335:37]
    reg iactSPadZeroColumnReg : UInt<1>, clock with : (reset => (reset, UInt<1>("h00"))) @[ProcessingElement.scala 336:44]
    reg iactAddrSPadReadEnReg : UInt<1>, clock with : (reset => (reset, UInt<1>("h00"))) @[ProcessingElement.scala 337:44]
    reg iactDataSPadReadEnReg : UInt<1>, clock with : (reset => (reset, UInt<1>("h00"))) @[ProcessingElement.scala 338:44]
    wire iactAddrSPadIdxIncWire : UInt<1> @[ProcessingElement.scala 339:42]
    wire iactDataSPadIdxIncWire : UInt<1> @[ProcessingElement.scala 340:42]
    reg iactMatrixColumnReg : UInt<4>, clock with : (reset => (reset, UInt<4>("h00"))) @[ProcessingElement.scala 341:42]
    reg iactZeroColumnNumber : UInt<4>, clock with : (reset => (reset, UInt<4>("h00"))) @[ProcessingElement.scala 342:43]
    reg iactDataSPadFirstReadReg : UInt<1>, clock with : (reset => (reset, UInt<1>("h01"))) @[ProcessingElement.scala 343:47]
    iactAddrSPad.io.addrIO.indexInc <= iactAddrSPadIdxIncWire @[ProcessingElement.scala 344:35]
    iactDataSPad.io.dataIO.indexInc <= iactDataSPadIdxIncWire @[ProcessingElement.scala 345:35]
    node _T = eq(sPad, UInt<2>("h02")) @[ProcessingElement.scala 346:36]
    node _T_1 = add(iactDataIndexWire, UInt<1>("h01")) @[ProcessingElement.scala 346:97]
    node _T_2 = tail(_T_1, 1) @[ProcessingElement.scala 346:97]
    node _T_3 = eq(iactAddrDataWire, _T_2) @[ProcessingElement.scala 346:74]
    node _T_4 = and(_T, _T_3) @[ProcessingElement.scala 346:53]
    node _T_5 = eq(sPad, UInt<2>("h01")) @[ProcessingElement.scala 346:116]
    node _T_6 = eq(iactAddrDataWire, UInt<4>("h0f")) @[ProcessingElement.scala 346:154]
    node _T_7 = and(_T_5, _T_6) @[ProcessingElement.scala 346:133]
    node _T_8 = or(_T_4, _T_7) @[ProcessingElement.scala 346:106]
    iactAddrSPadIdxIncWire <= _T_8 @[ProcessingElement.scala 346:26]
    node _T_9 = eq(sPad, UInt<2>("h01")) @[ProcessingElement.scala 347:36]
    node _T_10 = eq(iactSPadZeroColumnReg, UInt<1>("h00")) @[ProcessingElement.scala 347:56]
    node _T_11 = and(_T_9, _T_10) @[ProcessingElement.scala 347:53]
    node _T_12 = eq(iactDataSPadFirstReadReg, UInt<1>("h00")) @[ProcessingElement.scala 347:82]
    node _T_13 = and(_T_11, _T_12) @[ProcessingElement.scala 347:79]
    node _T_14 = eq(sPad, UInt<2>("h02")) @[ProcessingElement.scala 347:119]
    node _T_15 = eq(iactAddrSPadIdxIncWire, UInt<1>("h00")) @[ProcessingElement.scala 347:139]
    node _T_16 = and(_T_14, _T_15) @[ProcessingElement.scala 347:136]
    node _T_17 = or(_T_13, _T_16) @[ProcessingElement.scala 347:109]
    iactDataSPadIdxIncWire <= _T_17 @[ProcessingElement.scala 347:26]
    io.iactIOs.addrIOs.writeFin <= iactAddrSPad.io.commonIO.dataLenFinIO.writeFin @[ProcessingElement.scala 348:41]
    iactAddrSPad.io.commonIO.dataLenFinIO.streamLen <= io.iactIOs.addrIOs.streamLen @[ProcessingElement.scala 348:41]
    iactAddrSPad.io.commonIO.dataLenFinIO.writeInDataIO.bits.data <= io.iactIOs.addrIOs.writeInDataIO.bits.data @[ProcessingElement.scala 348:41]
    iactAddrSPad.io.commonIO.dataLenFinIO.writeInDataIO.valid <= io.iactIOs.addrIOs.writeInDataIO.valid @[ProcessingElement.scala 348:41]
    io.iactIOs.addrIOs.writeInDataIO.ready <= iactAddrSPad.io.commonIO.dataLenFinIO.writeInDataIO.ready @[ProcessingElement.scala 348:41]
    io.iactIOs.dataIOs.writeFin <= iactDataSPad.io.commonIO.dataLenFinIO.writeFin @[ProcessingElement.scala 349:41]
    iactDataSPad.io.commonIO.dataLenFinIO.streamLen <= io.iactIOs.dataIOs.streamLen @[ProcessingElement.scala 349:41]
    iactDataSPad.io.commonIO.dataLenFinIO.writeInDataIO.bits.data <= io.iactIOs.dataIOs.writeInDataIO.bits.data @[ProcessingElement.scala 349:41]
    iactDataSPad.io.commonIO.dataLenFinIO.writeInDataIO.valid <= io.iactIOs.dataIOs.writeInDataIO.valid @[ProcessingElement.scala 349:41]
    io.iactIOs.dataIOs.writeInDataIO.ready <= iactDataSPad.io.commonIO.dataLenFinIO.writeInDataIO.ready @[ProcessingElement.scala 349:41]
    io.iactAddrWriteIdx <= iactAddrSPad.io.commonIO.writeIdx @[ProcessingElement.scala 350:23]
    io.iactDataWriteIdx <= iactDataSPad.io.commonIO.writeIdx @[ProcessingElement.scala 351:23]
    iactAddrIndexWire <= iactAddrSPad.io.commonIO.columnNum @[ProcessingElement.scala 353:21]
    io.iactMatrixColumn <= iactMatrixColumnReg @[ProcessingElement.scala 354:23]
    iactAddrDataWire <= iactAddrSPad.io.commonIO.readOutData @[ProcessingElement.scala 355:20]
    io.iactAddrReadData <= iactAddrDataWire @[ProcessingElement.scala 356:23]
    iactAddrSPad.io.commonIO.readEn <= iactAddrSPadReadEnReg @[ProcessingElement.scala 357:35]
    io.iactAddrReadEn <= iactAddrSPadReadEnReg @[ProcessingElement.scala 358:21]
    iactAddrSPad.io.dataIO.indexInc is invalid @[ProcessingElement.scala 359:26]
    iactAddrSPad.io.dataIO.readInIdx is invalid @[ProcessingElement.scala 359:26]
    iactAddrSPad.io.addrIO.readInIdx is invalid @[ProcessingElement.scala 360:36]
    iactDataIndexWire <= iactDataSPad.io.commonIO.columnNum @[ProcessingElement.scala 362:21]
    io.iactDataReadIndex <= iactDataIndexWire @[ProcessingElement.scala 363:24]
    io.iactMatrixDataBin <= iactDataSPad.io.commonIO.readOutData @[ProcessingElement.scala 364:24]
    node iactDataCountVec_0 = bits(iactDataSPad.io.commonIO.readOutData, 0, 0) @[ProcessingElement.scala 365:74]
    node iactDataCountVec_1 = bits(iactDataSPad.io.commonIO.readOutData, 1, 1) @[ProcessingElement.scala 365:74]
    node iactDataCountVec_2 = bits(iactDataSPad.io.commonIO.readOutData, 2, 2) @[ProcessingElement.scala 365:74]
    node iactDataCountVec_3 = bits(iactDataSPad.io.commonIO.readOutData, 3, 3) @[ProcessingElement.scala 365:74]
    node iactDataCountVec_4 = bits(iactDataSPad.io.commonIO.readOutData, 4, 4) @[ProcessingElement.scala 365:74]
    node iactDataCountVec_5 = bits(iactDataSPad.io.commonIO.readOutData, 5, 5) @[ProcessingElement.scala 365:74]
    node iactDataCountVec_6 = bits(iactDataSPad.io.commonIO.readOutData, 6, 6) @[ProcessingElement.scala 365:74]
    node iactDataCountVec_7 = bits(iactDataSPad.io.commonIO.readOutData, 7, 7) @[ProcessingElement.scala 365:74]
    node iactDataCountVec_8 = bits(iactDataSPad.io.commonIO.readOutData, 8, 8) @[ProcessingElement.scala 365:74]
    node iactDataCountVec_9 = bits(iactDataSPad.io.commonIO.readOutData, 9, 9) @[ProcessingElement.scala 365:74]
    node iactDataCountVec_10 = bits(iactDataSPad.io.commonIO.readOutData, 10, 10) @[ProcessingElement.scala 365:74]
    node iactDataCountVec_11 = bits(iactDataSPad.io.commonIO.readOutData, 11, 11) @[ProcessingElement.scala 365:74]
    node _T_18 = cat(iactDataCountVec_5, iactDataCountVec_4) @[Cat.scala 29:58]
    node _T_19 = cat(iactDataCountVec_7, iactDataCountVec_6) @[Cat.scala 29:58]
    node _T_20 = cat(_T_19, _T_18) @[Cat.scala 29:58]
    node _T_21 = cat(iactDataCountVec_9, iactDataCountVec_8) @[Cat.scala 29:58]
    node _T_22 = cat(iactDataCountVec_11, iactDataCountVec_10) @[Cat.scala 29:58]
    node _T_23 = cat(_T_22, _T_21) @[Cat.scala 29:58]
    node _T_24 = cat(_T_23, _T_20) @[Cat.scala 29:58]
    io.iactMatrixData <= _T_24 @[ProcessingElement.scala 366:21]
    node _T_25 = cat(iactDataCountVec_1, iactDataCountVec_0) @[Cat.scala 29:58]
    node _T_26 = cat(iactDataCountVec_3, iactDataCountVec_2) @[Cat.scala 29:58]
    node _T_27 = cat(_T_26, _T_25) @[Cat.scala 29:58]
    io.iactMatrixRow <= _T_27 @[ProcessingElement.scala 367:20]
    iactDataSPad.io.commonIO.readEn <= iactDataSPadReadEnReg @[ProcessingElement.scala 368:35]
    iactDataSPad.io.dataIO.readInIdx is invalid @[ProcessingElement.scala 370:36]
    iactDataSPad.io.addrIO.indexInc is invalid @[ProcessingElement.scala 371:26]
    iactDataSPad.io.addrIO.readInIdx is invalid @[ProcessingElement.scala 371:26]
    node _T_28 = eq(UInt<2>("h00"), sPad) @[Conditional.scala 37:30]
    when _T_28 : @[Conditional.scala 40:58]
      when io.iactDataReq : @[ProcessingElement.scala 377:28]
        sPad <= UInt<2>("h01") @[ProcessingElement.scala 378:14]
        iactAddrSPadReadEnReg <= UInt<1>("h01") @[ProcessingElement.scala 379:31]
        iactDataSPadReadEnReg <= UInt<1>("h00") @[ProcessingElement.scala 380:31]
        iactDataSPadFirstReadReg <= UInt<1>("h01") @[ProcessingElement.scala 381:34]
        skip @[ProcessingElement.scala 377:28]
      skip @[Conditional.scala 40:58]
    else : @[Conditional.scala 39:67]
      node _T_29 = eq(UInt<2>("h01"), sPad) @[Conditional.scala 37:30]
      when _T_29 : @[Conditional.scala 39:67]
        node _T_30 = eq(iactAddrDataWire, UInt<4>("h0f")) @[ProcessingElement.scala 386:30]
        when _T_30 : @[ProcessingElement.scala 386:56]
          sPad <= UInt<2>("h01") @[ProcessingElement.scala 387:14]
          iactSPadZeroColumnReg <= UInt<1>("h01") @[ProcessingElement.scala 388:31]
          iactAddrSPadReadEnReg <= UInt<1>("h01") @[ProcessingElement.scala 389:31]
          iactDataSPadReadEnReg <= UInt<1>("h00") @[ProcessingElement.scala 390:31]
          node _T_31 = add(iactZeroColumnNumber, UInt<1>("h01")) @[ProcessingElement.scala 391:54]
          node _T_32 = tail(_T_31, 1) @[ProcessingElement.scala 391:54]
          iactZeroColumnNumber <= _T_32 @[ProcessingElement.scala 391:30]
          skip @[ProcessingElement.scala 386:56]
        else : @[ProcessingElement.scala 392:19]
          sPad <= UInt<2>("h02") @[ProcessingElement.scala 393:14]
          iactAddrSPadReadEnReg <= UInt<1>("h00") @[ProcessingElement.scala 394:31]
          iactDataSPadReadEnReg <= UInt<1>("h01") @[ProcessingElement.scala 395:31]
          skip @[ProcessingElement.scala 392:19]
        skip @[Conditional.scala 39:67]
      else : @[Conditional.scala 39:67]
        node _T_33 = eq(UInt<2>("h02"), sPad) @[Conditional.scala 37:30]
        when _T_33 : @[Conditional.scala 39:67]
          iactDataSPadFirstReadReg <= UInt<1>("h00") @[ProcessingElement.scala 399:32]
          node _T_34 = sub(io.iactIOs.dataIOs.streamLen, UInt<1>("h01")) @[ProcessingElement.scala 400:64]
          node _T_35 = tail(_T_34, 1) @[ProcessingElement.scala 400:64]
          node _T_36 = eq(iactDataIndexWire, _T_35) @[ProcessingElement.scala 400:31]
          when _T_36 : @[ProcessingElement.scala 400:71]
            sPad <= UInt<2>("h00") @[ProcessingElement.scala 401:14]
            iactDataSPadReadEnReg <= UInt<1>("h00") @[ProcessingElement.scala 402:31]
            iactSPadZeroColumnReg <= UInt<1>("h00") @[ProcessingElement.scala 403:31]
            skip @[ProcessingElement.scala 400:71]
          when iactAddrSPadIdxIncWire : @[ProcessingElement.scala 405:37]
            sPad <= UInt<2>("h01") @[ProcessingElement.scala 406:14]
            iactSPadZeroColumnReg <= UInt<1>("h00") @[ProcessingElement.scala 407:31]
            iactAddrSPadReadEnReg <= UInt<1>("h01") @[ProcessingElement.scala 409:31]
            iactDataSPadReadEnReg <= UInt<1>("h00") @[ProcessingElement.scala 410:31]
            when iactSPadZeroColumnReg : @[ProcessingElement.scala 411:38]
              node _T_37 = add(iactMatrixColumnReg, UInt<1>("h01")) @[ProcessingElement.scala 412:54]
              node _T_38 = tail(_T_37, 1) @[ProcessingElement.scala 412:54]
              node _T_39 = add(_T_38, iactZeroColumnNumber) @[ProcessingElement.scala 412:60]
              node _T_40 = tail(_T_39, 1) @[ProcessingElement.scala 412:60]
              iactMatrixColumnReg <= _T_40 @[ProcessingElement.scala 412:31]
              iactZeroColumnNumber <= UInt<1>("h00") @[ProcessingElement.scala 414:32]
              skip @[ProcessingElement.scala 411:38]
            else : @[ProcessingElement.scala 415:22]
              node _T_41 = add(iactMatrixColumnReg, UInt<1>("h01")) @[ProcessingElement.scala 416:54]
              node _T_42 = tail(_T_41, 1) @[ProcessingElement.scala 416:54]
              iactMatrixColumnReg <= _T_42 @[ProcessingElement.scala 416:31]
              skip @[ProcessingElement.scala 415:22]
            skip @[ProcessingElement.scala 405:37]
          else : @[ProcessingElement.scala 418:20]
            sPad <= UInt<2>("h02") @[ProcessingElement.scala 419:14]
            iactAddrSPadReadEnReg <= UInt<1>("h00") @[ProcessingElement.scala 420:31]
            iactDataSPadReadEnReg <= UInt<1>("h01") @[ProcessingElement.scala 421:31]
            skip @[ProcessingElement.scala 418:20]
          skip @[Conditional.scala 39:67]
    
