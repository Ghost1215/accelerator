;buildInfoPackage: chisel3, version: 3.3-SNAPSHOT, scalaVersion: 2.12.10, sbtVersion: 1.3.2
circuit SimplyCombineAddrDataSPad : 
  module SPadAddrModule : 
    input clock : Clock
    input reset : Reset
    output io : {commonIO : {columnNum : UInt<4>, readOutData : UInt<4>, flip readEn : UInt<1>, writeIdx : UInt<4>, dataLenFinIO : {flip writeInDataIO : {flip ready : UInt<1>, valid : UInt<1>, bits : {data : UInt<4>}}, flip streamLen : UInt<4>, writeFin : UInt<1>}}, addrIO : {flip readInIdx : UInt<4>, flip indexInc : UInt<1>}, dataIO : {flip readInIdx : UInt<4>, flip indexInc : UInt<1>, flip readInIdxEn : UInt<1>}}
    
    reg dataLenReg : UInt<4>, clock with : (reset => (reset, UInt<4>("h09"))) @[ProcessingElement.scala 534:33]
    wire dataWire : UInt<4> @[ProcessingElement.scala 535:28]
    dataLenReg <= io.commonIO.dataLenFinIO.streamLen @[ProcessingElement.scala 536:14]
    reg padWriteIndexReg : UInt<4>, clock with : (reset => (reset, UInt<4>("h00"))) @[ProcessingElement.scala 537:39]
    reg padReadIndexReg : UInt<4>, clock with : (reset => (reset, UInt<4>("h00"))) @[ProcessingElement.scala 538:38]
    wire writeWrapWire : UInt<1> @[ProcessingElement.scala 540:33]
    wire readWrapWire : UInt<1> @[ProcessingElement.scala 541:32]
    wire readIndexInc : UInt<1> @[ProcessingElement.scala 542:32]
    node _T = sub(dataLenReg, UInt<1>("h01")) @[ProcessingElement.scala 543:53]
    node _T_1 = tail(_T, 1) @[ProcessingElement.scala 543:53]
    node _T_2 = eq(padWriteIndexReg, _T_1) @[ProcessingElement.scala 543:37]
    writeWrapWire <= _T_2 @[ProcessingElement.scala 543:17]
    node _T_3 = sub(dataLenReg, UInt<1>("h01")) @[ProcessingElement.scala 544:51]
    node _T_4 = tail(_T_3, 1) @[ProcessingElement.scala 544:51]
    node _T_5 = eq(padReadIndexReg, _T_4) @[ProcessingElement.scala 544:35]
    readWrapWire <= _T_5 @[ProcessingElement.scala 544:16]
    when io.commonIO.dataLenFinIO.writeInDataIO.valid : @[ProcessingElement.scala 546:32]
      io.commonIO.dataLenFinIO.writeInDataIO.ready <= UInt<1>("h01") @[ProcessingElement.scala 547:27]
      node _T_6 = add(padWriteIndexReg, UInt<1>("h01")) @[ProcessingElement.scala 548:42]
      node _T_7 = tail(_T_6, 1) @[ProcessingElement.scala 548:42]
      padWriteIndexReg <= _T_7 @[ProcessingElement.scala 548:22]
      when writeWrapWire : @[ProcessingElement.scala 549:26]
        padWriteIndexReg <= UInt<1>("h00") @[ProcessingElement.scala 550:24]
        skip @[ProcessingElement.scala 549:26]
      skip @[ProcessingElement.scala 546:32]
    else : @[ProcessingElement.scala 552:15]
      io.commonIO.dataLenFinIO.writeInDataIO.ready <= UInt<1>("h00") @[ProcessingElement.scala 553:27]
      skip @[ProcessingElement.scala 552:15]
    io.commonIO.writeIdx <= padWriteIndexReg @[ProcessingElement.scala 556:24]
    node _T_8 = and(io.commonIO.dataLenFinIO.writeInDataIO.valid, writeWrapWire) @[ProcessingElement.scala 557:62]
    io.commonIO.dataLenFinIO.writeFin <= _T_8 @[ProcessingElement.scala 557:37]
    io.commonIO.columnNum <= padReadIndexReg @[ProcessingElement.scala 558:25]
    wire _T_9 : UInt<4>[9] @[ProcessingElement.scala 469:44]
    _T_9[0] <= UInt<4>("h00") @[ProcessingElement.scala 469:44]
    _T_9[1] <= UInt<4>("h00") @[ProcessingElement.scala 469:44]
    _T_9[2] <= UInt<4>("h00") @[ProcessingElement.scala 469:44]
    _T_9[3] <= UInt<4>("h00") @[ProcessingElement.scala 469:44]
    _T_9[4] <= UInt<4>("h00") @[ProcessingElement.scala 469:44]
    _T_9[5] <= UInt<4>("h00") @[ProcessingElement.scala 469:44]
    _T_9[6] <= UInt<4>("h00") @[ProcessingElement.scala 469:44]
    _T_9[7] <= UInt<4>("h00") @[ProcessingElement.scala 469:44]
    _T_9[8] <= UInt<4>("h00") @[ProcessingElement.scala 469:44]
    reg addrSPad : UInt<4>[9], clock with : (reset => (reset, _T_9)) @[ProcessingElement.scala 469:36]
    when io.commonIO.dataLenFinIO.writeInDataIO.valid : @[ProcessingElement.scala 471:32]
      addrSPad[padWriteIndexReg] <= io.commonIO.dataLenFinIO.writeInDataIO.bits.data @[ProcessingElement.scala 472:32]
      skip @[ProcessingElement.scala 471:32]
    when readIndexInc : @[ProcessingElement.scala 475:23]
      node _T_10 = add(padReadIndexReg, UInt<1>("h01")) @[ProcessingElement.scala 476:40]
      node _T_11 = tail(_T_10, 1) @[ProcessingElement.scala 476:40]
      padReadIndexReg <= _T_11 @[ProcessingElement.scala 476:21]
      when readWrapWire : @[ProcessingElement.scala 477:25]
        padReadIndexReg <= UInt<1>("h00") @[ProcessingElement.scala 478:23]
        skip @[ProcessingElement.scala 477:25]
      skip @[ProcessingElement.scala 475:23]
    dataWire <= addrSPad[padReadIndexReg] @[ProcessingElement.scala 482:12]
    io.commonIO.readOutData <= dataWire @[ProcessingElement.scala 483:27]
    readIndexInc <= io.addrIO.indexInc @[ProcessingElement.scala 484:16]
    
  module SPadDataModule : 
    input clock : Clock
    input reset : Reset
    output io : {commonIO : {columnNum : UInt<4>, readOutData : UInt<12>, flip readEn : UInt<1>, writeIdx : UInt<4>, dataLenFinIO : {flip writeInDataIO : {flip ready : UInt<1>, valid : UInt<1>, bits : {data : UInt<12>}}, flip streamLen : UInt<4>, writeFin : UInt<1>}}, addrIO : {flip readInIdx : UInt<4>, flip indexInc : UInt<1>}, dataIO : {flip readInIdx : UInt<4>, flip indexInc : UInt<1>, flip readInIdxEn : UInt<1>}}
    
    reg dataLenReg : UInt<4>, clock with : (reset => (reset, UInt<4>("h09"))) @[ProcessingElement.scala 534:33]
    wire dataWire : UInt<12> @[ProcessingElement.scala 535:28]
    dataLenReg <= io.commonIO.dataLenFinIO.streamLen @[ProcessingElement.scala 536:14]
    reg padWriteIndexReg : UInt<4>, clock with : (reset => (reset, UInt<4>("h00"))) @[ProcessingElement.scala 537:39]
    reg padReadIndexReg : UInt<4>, clock with : (reset => (reset, UInt<4>("h00"))) @[ProcessingElement.scala 538:38]
    wire writeWrapWire : UInt<1> @[ProcessingElement.scala 540:33]
    wire readWrapWire : UInt<1> @[ProcessingElement.scala 541:32]
    wire readIndexInc : UInt<1> @[ProcessingElement.scala 542:32]
    node _T = sub(dataLenReg, UInt<1>("h01")) @[ProcessingElement.scala 543:53]
    node _T_1 = tail(_T, 1) @[ProcessingElement.scala 543:53]
    node _T_2 = eq(padWriteIndexReg, _T_1) @[ProcessingElement.scala 543:37]
    writeWrapWire <= _T_2 @[ProcessingElement.scala 543:17]
    node _T_3 = sub(dataLenReg, UInt<1>("h01")) @[ProcessingElement.scala 544:51]
    node _T_4 = tail(_T_3, 1) @[ProcessingElement.scala 544:51]
    node _T_5 = eq(padReadIndexReg, _T_4) @[ProcessingElement.scala 544:35]
    readWrapWire <= _T_5 @[ProcessingElement.scala 544:16]
    when io.commonIO.dataLenFinIO.writeInDataIO.valid : @[ProcessingElement.scala 546:32]
      io.commonIO.dataLenFinIO.writeInDataIO.ready <= UInt<1>("h01") @[ProcessingElement.scala 547:27]
      node _T_6 = add(padWriteIndexReg, UInt<1>("h01")) @[ProcessingElement.scala 548:42]
      node _T_7 = tail(_T_6, 1) @[ProcessingElement.scala 548:42]
      padWriteIndexReg <= _T_7 @[ProcessingElement.scala 548:22]
      when writeWrapWire : @[ProcessingElement.scala 549:26]
        padWriteIndexReg <= UInt<1>("h00") @[ProcessingElement.scala 550:24]
        skip @[ProcessingElement.scala 549:26]
      skip @[ProcessingElement.scala 546:32]
    else : @[ProcessingElement.scala 552:15]
      io.commonIO.dataLenFinIO.writeInDataIO.ready <= UInt<1>("h00") @[ProcessingElement.scala 553:27]
      skip @[ProcessingElement.scala 552:15]
    io.commonIO.writeIdx <= padWriteIndexReg @[ProcessingElement.scala 556:24]
    node _T_8 = and(io.commonIO.dataLenFinIO.writeInDataIO.valid, writeWrapWire) @[ProcessingElement.scala 557:62]
    io.commonIO.dataLenFinIO.writeFin <= _T_8 @[ProcessingElement.scala 557:37]
    io.commonIO.columnNum <= padReadIndexReg @[ProcessingElement.scala 558:25]
    wire _T_9 : UInt<12>[16] @[ProcessingElement.scala 509:46]
    _T_9[0] <= UInt<12>("h00") @[ProcessingElement.scala 509:46]
    _T_9[1] <= UInt<12>("h00") @[ProcessingElement.scala 509:46]
    _T_9[2] <= UInt<12>("h00") @[ProcessingElement.scala 509:46]
    _T_9[3] <= UInt<12>("h00") @[ProcessingElement.scala 509:46]
    _T_9[4] <= UInt<12>("h00") @[ProcessingElement.scala 509:46]
    _T_9[5] <= UInt<12>("h00") @[ProcessingElement.scala 509:46]
    _T_9[6] <= UInt<12>("h00") @[ProcessingElement.scala 509:46]
    _T_9[7] <= UInt<12>("h00") @[ProcessingElement.scala 509:46]
    _T_9[8] <= UInt<12>("h00") @[ProcessingElement.scala 509:46]
    _T_9[9] <= UInt<12>("h00") @[ProcessingElement.scala 509:46]
    _T_9[10] <= UInt<12>("h00") @[ProcessingElement.scala 509:46]
    _T_9[11] <= UInt<12>("h00") @[ProcessingElement.scala 509:46]
    _T_9[12] <= UInt<12>("h00") @[ProcessingElement.scala 509:46]
    _T_9[13] <= UInt<12>("h00") @[ProcessingElement.scala 509:46]
    _T_9[14] <= UInt<12>("h00") @[ProcessingElement.scala 509:46]
    _T_9[15] <= UInt<12>("h00") @[ProcessingElement.scala 509:46]
    reg _T_10 : UInt<12>[16], clock with : (reset => (reset, _T_9)) @[ProcessingElement.scala 509:38]
    when io.commonIO.dataLenFinIO.writeInDataIO.valid : @[ProcessingElement.scala 510:34]
      _T_10[padWriteIndexReg] <= io.commonIO.dataLenFinIO.writeInDataIO.bits.data @[ProcessingElement.scala 511:34]
      skip @[ProcessingElement.scala 510:34]
    when readIndexInc : @[ProcessingElement.scala 514:25]
      node _T_11 = add(padReadIndexReg, UInt<1>("h01")) @[ProcessingElement.scala 515:42]
      node _T_12 = tail(_T_11, 1) @[ProcessingElement.scala 515:42]
      padReadIndexReg <= _T_12 @[ProcessingElement.scala 515:23]
      when readWrapWire : @[ProcessingElement.scala 516:27]
        padReadIndexReg <= UInt<1>("h00") @[ProcessingElement.scala 517:25]
        skip @[ProcessingElement.scala 516:27]
      skip @[ProcessingElement.scala 514:25]
    dataWire <= _T_10[padReadIndexReg] @[ProcessingElement.scala 521:14]
    readIndexInc <= io.dataIO.indexInc @[ProcessingElement.scala 523:16]
    io.commonIO.readOutData <= dataWire @[ProcessingElement.scala 524:27]
    
  module SimplyCombineAddrDataSPad : 
    input clock : Clock
    input reset : UInt<1>
    output io : {iactIOs : {dataIOs : {flip writeInDataIO : {flip ready : UInt<1>, valid : UInt<1>, bits : {data : UInt<12>}}, flip streamLen : UInt<4>, writeFin : UInt<1>}, addrIOs : {flip writeInDataIO : {flip ready : UInt<1>, valid : UInt<1>, bits : {data : UInt<4>}}, flip streamLen : UInt<4>, writeFin : UInt<1>}}, iactAddrWriteIdx : UInt<4>, flip iactDataReq : UInt<1>, iactMatrixColumn : UInt<4>, iactMatrixRow : UInt<4>, iactMatrixData : UInt<8>, iactMatrixDataBin : UInt<12>, iactAddrReadEn : UInt<1>, iactAddrReadData : UInt<4>, iactDataReadIndex : UInt<4>, iactDataWriteIdx : UInt<4>}
    
    inst iactAddrSPad of SPadAddrModule @[ProcessingElement.scala 363:44]
    iactAddrSPad.clock <= clock
    iactAddrSPad.reset <= reset
    inst iactDataSPad of SPadDataModule @[ProcessingElement.scala 364:44]
    iactDataSPad.clock <= clock
    iactDataSPad.reset <= reset
    reg sPad : UInt<2>, clock with : (reset => (reset, UInt<2>("h00"))) @[ProcessingElement.scala 367:27]
    wire iactAddrIndexWire : UInt<4> @[ProcessingElement.scala 368:37]
    wire iactAddrDataWire : UInt<4> @[ProcessingElement.scala 369:36]
    wire iactDataIndexWire : UInt<4> @[ProcessingElement.scala 370:37]
    reg iactSPadZeroColumnReg : UInt<1>, clock with : (reset => (reset, UInt<1>("h00"))) @[ProcessingElement.scala 371:44]
    reg iactAddrSPadReadEnReg : UInt<1>, clock with : (reset => (reset, UInt<1>("h00"))) @[ProcessingElement.scala 372:44]
    reg iactDataSPadReadEnReg : UInt<1>, clock with : (reset => (reset, UInt<1>("h00"))) @[ProcessingElement.scala 373:44]
    wire iactAddrSPadIdxIncWire : UInt<1> @[ProcessingElement.scala 374:42]
    wire iactDataSPadIdxIncWire : UInt<1> @[ProcessingElement.scala 375:42]
    reg iactMatrixColumnReg : UInt<4>, clock with : (reset => (reset, UInt<4>("h00"))) @[ProcessingElement.scala 376:42]
    reg iactZeroColumnNumber : UInt<4>, clock with : (reset => (reset, UInt<4>("h00"))) @[ProcessingElement.scala 377:43]
    reg iactDataSPadFirstReadReg : UInt<1>, clock with : (reset => (reset, UInt<1>("h01"))) @[ProcessingElement.scala 378:47]
    iactAddrSPad.io.addrIO.indexInc <= iactAddrSPadIdxIncWire @[ProcessingElement.scala 379:35]
    iactDataSPad.io.dataIO.indexInc <= iactDataSPadIdxIncWire @[ProcessingElement.scala 380:35]
    node _T = eq(sPad, UInt<2>("h02")) @[ProcessingElement.scala 381:36]
    node _T_1 = add(iactDataIndexWire, UInt<1>("h01")) @[ProcessingElement.scala 381:97]
    node _T_2 = tail(_T_1, 1) @[ProcessingElement.scala 381:97]
    node _T_3 = eq(iactAddrDataWire, _T_2) @[ProcessingElement.scala 381:74]
    node _T_4 = and(_T, _T_3) @[ProcessingElement.scala 381:53]
    node _T_5 = eq(sPad, UInt<2>("h01")) @[ProcessingElement.scala 381:116]
    node _T_6 = eq(iactAddrDataWire, UInt<4>("h0f")) @[ProcessingElement.scala 381:154]
    node _T_7 = and(_T_5, _T_6) @[ProcessingElement.scala 381:133]
    node _T_8 = or(_T_4, _T_7) @[ProcessingElement.scala 381:106]
    iactAddrSPadIdxIncWire <= _T_8 @[ProcessingElement.scala 381:26]
    node _T_9 = eq(sPad, UInt<2>("h01")) @[ProcessingElement.scala 382:36]
    node _T_10 = eq(iactSPadZeroColumnReg, UInt<1>("h00")) @[ProcessingElement.scala 382:56]
    node _T_11 = and(_T_9, _T_10) @[ProcessingElement.scala 382:53]
    node _T_12 = eq(iactDataSPadFirstReadReg, UInt<1>("h00")) @[ProcessingElement.scala 382:82]
    node _T_13 = and(_T_11, _T_12) @[ProcessingElement.scala 382:79]
    node _T_14 = eq(sPad, UInt<2>("h02")) @[ProcessingElement.scala 382:119]
    node _T_15 = eq(iactAddrSPadIdxIncWire, UInt<1>("h00")) @[ProcessingElement.scala 382:139]
    node _T_16 = and(_T_14, _T_15) @[ProcessingElement.scala 382:136]
    node _T_17 = or(_T_13, _T_16) @[ProcessingElement.scala 382:109]
    iactDataSPadIdxIncWire <= _T_17 @[ProcessingElement.scala 382:26]
    io.iactIOs.addrIOs.writeFin <= iactAddrSPad.io.commonIO.dataLenFinIO.writeFin @[ProcessingElement.scala 383:41]
    iactAddrSPad.io.commonIO.dataLenFinIO.streamLen <= io.iactIOs.addrIOs.streamLen @[ProcessingElement.scala 383:41]
    iactAddrSPad.io.commonIO.dataLenFinIO.writeInDataIO.bits.data <= io.iactIOs.addrIOs.writeInDataIO.bits.data @[ProcessingElement.scala 383:41]
    iactAddrSPad.io.commonIO.dataLenFinIO.writeInDataIO.valid <= io.iactIOs.addrIOs.writeInDataIO.valid @[ProcessingElement.scala 383:41]
    io.iactIOs.addrIOs.writeInDataIO.ready <= iactAddrSPad.io.commonIO.dataLenFinIO.writeInDataIO.ready @[ProcessingElement.scala 383:41]
    io.iactIOs.dataIOs.writeFin <= iactDataSPad.io.commonIO.dataLenFinIO.writeFin @[ProcessingElement.scala 384:41]
    iactDataSPad.io.commonIO.dataLenFinIO.streamLen <= io.iactIOs.dataIOs.streamLen @[ProcessingElement.scala 384:41]
    iactDataSPad.io.commonIO.dataLenFinIO.writeInDataIO.bits.data <= io.iactIOs.dataIOs.writeInDataIO.bits.data @[ProcessingElement.scala 384:41]
    iactDataSPad.io.commonIO.dataLenFinIO.writeInDataIO.valid <= io.iactIOs.dataIOs.writeInDataIO.valid @[ProcessingElement.scala 384:41]
    io.iactIOs.dataIOs.writeInDataIO.ready <= iactDataSPad.io.commonIO.dataLenFinIO.writeInDataIO.ready @[ProcessingElement.scala 384:41]
    io.iactAddrWriteIdx <= iactAddrSPad.io.commonIO.writeIdx @[ProcessingElement.scala 385:23]
    io.iactDataWriteIdx <= iactDataSPad.io.commonIO.writeIdx @[ProcessingElement.scala 386:23]
    iactAddrIndexWire <= iactAddrSPad.io.commonIO.columnNum @[ProcessingElement.scala 388:21]
    io.iactMatrixColumn <= iactMatrixColumnReg @[ProcessingElement.scala 389:23]
    iactAddrDataWire <= iactAddrSPad.io.commonIO.readOutData @[ProcessingElement.scala 390:20]
    io.iactAddrReadData <= iactAddrDataWire @[ProcessingElement.scala 391:23]
    iactAddrSPad.io.commonIO.readEn <= iactAddrSPadReadEnReg @[ProcessingElement.scala 392:35]
    io.iactAddrReadEn <= iactAddrSPadReadEnReg @[ProcessingElement.scala 393:21]
    iactAddrSPad.io.dataIO.readInIdxEn is invalid @[ProcessingElement.scala 394:26]
    iactAddrSPad.io.dataIO.indexInc is invalid @[ProcessingElement.scala 394:26]
    iactAddrSPad.io.dataIO.readInIdx is invalid @[ProcessingElement.scala 394:26]
    iactAddrSPad.io.addrIO.readInIdx is invalid @[ProcessingElement.scala 395:36]
    iactDataIndexWire <= iactDataSPad.io.commonIO.columnNum @[ProcessingElement.scala 397:21]
    io.iactDataReadIndex <= iactDataIndexWire @[ProcessingElement.scala 398:24]
    io.iactMatrixDataBin <= iactDataSPad.io.commonIO.readOutData @[ProcessingElement.scala 399:24]
    node iactDataCountVec_0 = bits(iactDataSPad.io.commonIO.readOutData, 0, 0) @[ProcessingElement.scala 400:74]
    node iactDataCountVec_1 = bits(iactDataSPad.io.commonIO.readOutData, 1, 1) @[ProcessingElement.scala 400:74]
    node iactDataCountVec_2 = bits(iactDataSPad.io.commonIO.readOutData, 2, 2) @[ProcessingElement.scala 400:74]
    node iactDataCountVec_3 = bits(iactDataSPad.io.commonIO.readOutData, 3, 3) @[ProcessingElement.scala 400:74]
    node iactDataCountVec_4 = bits(iactDataSPad.io.commonIO.readOutData, 4, 4) @[ProcessingElement.scala 400:74]
    node iactDataCountVec_5 = bits(iactDataSPad.io.commonIO.readOutData, 5, 5) @[ProcessingElement.scala 400:74]
    node iactDataCountVec_6 = bits(iactDataSPad.io.commonIO.readOutData, 6, 6) @[ProcessingElement.scala 400:74]
    node iactDataCountVec_7 = bits(iactDataSPad.io.commonIO.readOutData, 7, 7) @[ProcessingElement.scala 400:74]
    node iactDataCountVec_8 = bits(iactDataSPad.io.commonIO.readOutData, 8, 8) @[ProcessingElement.scala 400:74]
    node iactDataCountVec_9 = bits(iactDataSPad.io.commonIO.readOutData, 9, 9) @[ProcessingElement.scala 400:74]
    node iactDataCountVec_10 = bits(iactDataSPad.io.commonIO.readOutData, 10, 10) @[ProcessingElement.scala 400:74]
    node iactDataCountVec_11 = bits(iactDataSPad.io.commonIO.readOutData, 11, 11) @[ProcessingElement.scala 400:74]
    node _T_18 = cat(iactDataCountVec_5, iactDataCountVec_4) @[Cat.scala 29:58]
    node _T_19 = cat(iactDataCountVec_7, iactDataCountVec_6) @[Cat.scala 29:58]
    node _T_20 = cat(_T_19, _T_18) @[Cat.scala 29:58]
    node _T_21 = cat(iactDataCountVec_9, iactDataCountVec_8) @[Cat.scala 29:58]
    node _T_22 = cat(iactDataCountVec_11, iactDataCountVec_10) @[Cat.scala 29:58]
    node _T_23 = cat(_T_22, _T_21) @[Cat.scala 29:58]
    node _T_24 = cat(_T_23, _T_20) @[Cat.scala 29:58]
    io.iactMatrixData <= _T_24 @[ProcessingElement.scala 401:21]
    node _T_25 = cat(iactDataCountVec_1, iactDataCountVec_0) @[Cat.scala 29:58]
    node _T_26 = cat(iactDataCountVec_3, iactDataCountVec_2) @[Cat.scala 29:58]
    node _T_27 = cat(_T_26, _T_25) @[Cat.scala 29:58]
    io.iactMatrixRow <= _T_27 @[ProcessingElement.scala 402:20]
    iactDataSPad.io.commonIO.readEn <= iactDataSPadReadEnReg @[ProcessingElement.scala 403:35]
    iactDataSPad.io.dataIO.readInIdx is invalid @[ProcessingElement.scala 405:36]
    iactDataSPad.io.dataIO.readInIdxEn is invalid @[ProcessingElement.scala 406:38]
    iactDataSPad.io.addrIO.indexInc is invalid @[ProcessingElement.scala 407:26]
    iactDataSPad.io.addrIO.readInIdx is invalid @[ProcessingElement.scala 407:26]
    node _T_28 = eq(UInt<2>("h00"), sPad) @[Conditional.scala 37:30]
    when _T_28 : @[Conditional.scala 40:58]
      when io.iactDataReq : @[ProcessingElement.scala 413:28]
        sPad <= UInt<2>("h01") @[ProcessingElement.scala 414:14]
        iactAddrSPadReadEnReg <= UInt<1>("h01") @[ProcessingElement.scala 415:31]
        iactDataSPadReadEnReg <= UInt<1>("h00") @[ProcessingElement.scala 416:31]
        iactDataSPadFirstReadReg <= UInt<1>("h01") @[ProcessingElement.scala 417:34]
        skip @[ProcessingElement.scala 413:28]
      skip @[Conditional.scala 40:58]
    else : @[Conditional.scala 39:67]
      node _T_29 = eq(UInt<2>("h01"), sPad) @[Conditional.scala 37:30]
      when _T_29 : @[Conditional.scala 39:67]
        node _T_30 = eq(iactAddrDataWire, UInt<4>("h0f")) @[ProcessingElement.scala 422:30]
        when _T_30 : @[ProcessingElement.scala 422:56]
          sPad <= UInt<2>("h01") @[ProcessingElement.scala 423:14]
          iactSPadZeroColumnReg <= UInt<1>("h01") @[ProcessingElement.scala 424:31]
          iactAddrSPadReadEnReg <= UInt<1>("h01") @[ProcessingElement.scala 425:31]
          iactDataSPadReadEnReg <= UInt<1>("h00") @[ProcessingElement.scala 426:31]
          node _T_31 = add(iactZeroColumnNumber, UInt<1>("h01")) @[ProcessingElement.scala 427:54]
          node _T_32 = tail(_T_31, 1) @[ProcessingElement.scala 427:54]
          iactZeroColumnNumber <= _T_32 @[ProcessingElement.scala 427:30]
          skip @[ProcessingElement.scala 422:56]
        else : @[ProcessingElement.scala 428:19]
          sPad <= UInt<2>("h02") @[ProcessingElement.scala 429:14]
          iactAddrSPadReadEnReg <= UInt<1>("h00") @[ProcessingElement.scala 430:31]
          iactDataSPadReadEnReg <= UInt<1>("h01") @[ProcessingElement.scala 431:31]
          skip @[ProcessingElement.scala 428:19]
        skip @[Conditional.scala 39:67]
      else : @[Conditional.scala 39:67]
        node _T_33 = eq(UInt<2>("h02"), sPad) @[Conditional.scala 37:30]
        when _T_33 : @[Conditional.scala 39:67]
          iactDataSPadFirstReadReg <= UInt<1>("h00") @[ProcessingElement.scala 435:32]
          node _T_34 = sub(io.iactIOs.dataIOs.streamLen, UInt<1>("h01")) @[ProcessingElement.scala 436:64]
          node _T_35 = tail(_T_34, 1) @[ProcessingElement.scala 436:64]
          node _T_36 = eq(iactDataIndexWire, _T_35) @[ProcessingElement.scala 436:31]
          when _T_36 : @[ProcessingElement.scala 436:71]
            sPad <= UInt<2>("h00") @[ProcessingElement.scala 437:14]
            iactDataSPadReadEnReg <= UInt<1>("h00") @[ProcessingElement.scala 438:31]
            iactSPadZeroColumnReg <= UInt<1>("h00") @[ProcessingElement.scala 439:31]
            skip @[ProcessingElement.scala 436:71]
          when iactAddrSPadIdxIncWire : @[ProcessingElement.scala 441:37]
            sPad <= UInt<2>("h01") @[ProcessingElement.scala 442:14]
            iactSPadZeroColumnReg <= UInt<1>("h00") @[ProcessingElement.scala 443:31]
            iactAddrSPadReadEnReg <= UInt<1>("h01") @[ProcessingElement.scala 445:31]
            iactDataSPadReadEnReg <= UInt<1>("h00") @[ProcessingElement.scala 446:31]
            when iactSPadZeroColumnReg : @[ProcessingElement.scala 447:38]
              node _T_37 = add(iactMatrixColumnReg, UInt<1>("h01")) @[ProcessingElement.scala 448:54]
              node _T_38 = tail(_T_37, 1) @[ProcessingElement.scala 448:54]
              node _T_39 = add(_T_38, iactZeroColumnNumber) @[ProcessingElement.scala 448:60]
              node _T_40 = tail(_T_39, 1) @[ProcessingElement.scala 448:60]
              iactMatrixColumnReg <= _T_40 @[ProcessingElement.scala 448:31]
              iactZeroColumnNumber <= UInt<1>("h00") @[ProcessingElement.scala 450:32]
              skip @[ProcessingElement.scala 447:38]
            else : @[ProcessingElement.scala 451:22]
              node _T_41 = add(iactMatrixColumnReg, UInt<1>("h01")) @[ProcessingElement.scala 452:54]
              node _T_42 = tail(_T_41, 1) @[ProcessingElement.scala 452:54]
              iactMatrixColumnReg <= _T_42 @[ProcessingElement.scala 452:31]
              skip @[ProcessingElement.scala 451:22]
            skip @[ProcessingElement.scala 441:37]
          else : @[ProcessingElement.scala 454:20]
            sPad <= UInt<2>("h02") @[ProcessingElement.scala 455:14]
            iactAddrSPadReadEnReg <= UInt<1>("h00") @[ProcessingElement.scala 456:31]
            iactDataSPadReadEnReg <= UInt<1>("h01") @[ProcessingElement.scala 457:31]
            skip @[ProcessingElement.scala 454:20]
          skip @[Conditional.scala 39:67]
    
