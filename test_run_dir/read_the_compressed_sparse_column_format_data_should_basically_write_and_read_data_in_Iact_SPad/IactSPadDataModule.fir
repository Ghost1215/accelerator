;buildInfoPackage: chisel3, version: 3.3-SNAPSHOT, scalaVersion: 2.12.10, sbtVersion: 1.3.2
circuit IactSPadDataModule : 
  module IactSPadDataModule : 
    input clock : Clock
    input reset : UInt<1>
    output io : {commonIO : {columnNum : UInt<4>, readOutData : UInt<12>, flip readEn : UInt<1>, writeIdx : UInt<4>, dataLenFinIO : {flip streamDecoupledDataIO : {flip ready : UInt<1>, valid : UInt<1>, bits : {data : UInt<12>}}, flip streamLen : UInt<4>, writeFin : UInt<1>}}, addrIO : {flip readInIdx : UInt<4>, nextReadOutData : UInt<12>}, dataIO : {flip readInIdx : UInt<4>}}
    
    reg dataLenReg : UInt<4>, clock with : (reset => (reset, UInt<4>("h09"))) @[ProcessingElement.scala 257:33]
    wire dataWire : UInt<12> @[ProcessingElement.scala 258:28]
    dataLenReg <= io.commonIO.dataLenFinIO.streamLen @[ProcessingElement.scala 259:14]
    reg padWriteIndexReg : UInt<4>, clock with : (reset => (reset, UInt<4>("h00"))) @[ProcessingElement.scala 260:39]
    reg padReadIndexReg : UInt<4>, clock with : (reset => (reset, UInt<4>("h00"))) @[ProcessingElement.scala 261:38]
    wire writeWrapWire : UInt<1> @[ProcessingElement.scala 263:33]
    wire readWrapWire : UInt<1> @[ProcessingElement.scala 264:32]
    node _T = sub(dataLenReg, UInt<1>("h01")) @[ProcessingElement.scala 265:53]
    node _T_1 = tail(_T, 1) @[ProcessingElement.scala 265:53]
    node _T_2 = eq(padWriteIndexReg, _T_1) @[ProcessingElement.scala 265:37]
    writeWrapWire <= _T_2 @[ProcessingElement.scala 265:17]
    node _T_3 = sub(dataLenReg, UInt<1>("h01")) @[ProcessingElement.scala 266:51]
    node _T_4 = tail(_T_3, 1) @[ProcessingElement.scala 266:51]
    node _T_5 = eq(padReadIndexReg, _T_4) @[ProcessingElement.scala 266:35]
    readWrapWire <= _T_5 @[ProcessingElement.scala 266:16]
    when io.commonIO.dataLenFinIO.streamDecoupledDataIO.valid : @[ProcessingElement.scala 268:32]
      io.commonIO.dataLenFinIO.streamDecoupledDataIO.ready <= UInt<1>("h01") @[ProcessingElement.scala 269:27]
      node _T_6 = add(padWriteIndexReg, UInt<1>("h01")) @[ProcessingElement.scala 270:42]
      node _T_7 = tail(_T_6, 1) @[ProcessingElement.scala 270:42]
      padWriteIndexReg <= _T_7 @[ProcessingElement.scala 270:22]
      when writeWrapWire : @[ProcessingElement.scala 271:26]
        padWriteIndexReg <= UInt<1>("h00") @[ProcessingElement.scala 272:24]
        skip @[ProcessingElement.scala 271:26]
      skip @[ProcessingElement.scala 268:32]
    else : @[ProcessingElement.scala 274:15]
      io.commonIO.dataLenFinIO.streamDecoupledDataIO.ready <= UInt<1>("h00") @[ProcessingElement.scala 275:27]
      skip @[ProcessingElement.scala 274:15]
    when io.commonIO.readEn : @[ProcessingElement.scala 278:29]
      node _T_8 = add(padReadIndexReg, UInt<1>("h01")) @[ProcessingElement.scala 279:40]
      node _T_9 = tail(_T_8, 1) @[ProcessingElement.scala 279:40]
      padReadIndexReg <= _T_9 @[ProcessingElement.scala 279:21]
      when readWrapWire : @[ProcessingElement.scala 280:25]
        padReadIndexReg <= UInt<1>("h00") @[ProcessingElement.scala 281:23]
        skip @[ProcessingElement.scala 280:25]
      skip @[ProcessingElement.scala 278:29]
    io.commonIO.writeIdx <= padWriteIndexReg @[ProcessingElement.scala 285:24]
    node _T_10 = and(io.commonIO.dataLenFinIO.streamDecoupledDataIO.valid, writeWrapWire) @[ProcessingElement.scala 286:62]
    io.commonIO.dataLenFinIO.writeFin <= _T_10 @[ProcessingElement.scala 286:37]
    io.commonIO.columnNum <= padReadIndexReg @[ProcessingElement.scala 287:25]
    wire _T_11 : UInt<12>[16] @[ProcessingElement.scala 208:48]
    _T_11[0] <= UInt<12>("h00") @[ProcessingElement.scala 208:48]
    _T_11[1] <= UInt<12>("h00") @[ProcessingElement.scala 208:48]
    _T_11[2] <= UInt<12>("h00") @[ProcessingElement.scala 208:48]
    _T_11[3] <= UInt<12>("h00") @[ProcessingElement.scala 208:48]
    _T_11[4] <= UInt<12>("h00") @[ProcessingElement.scala 208:48]
    _T_11[5] <= UInt<12>("h00") @[ProcessingElement.scala 208:48]
    _T_11[6] <= UInt<12>("h00") @[ProcessingElement.scala 208:48]
    _T_11[7] <= UInt<12>("h00") @[ProcessingElement.scala 208:48]
    _T_11[8] <= UInt<12>("h00") @[ProcessingElement.scala 208:48]
    _T_11[9] <= UInt<12>("h00") @[ProcessingElement.scala 208:48]
    _T_11[10] <= UInt<12>("h00") @[ProcessingElement.scala 208:48]
    _T_11[11] <= UInt<12>("h00") @[ProcessingElement.scala 208:48]
    _T_11[12] <= UInt<12>("h00") @[ProcessingElement.scala 208:48]
    _T_11[13] <= UInt<12>("h00") @[ProcessingElement.scala 208:48]
    _T_11[14] <= UInt<12>("h00") @[ProcessingElement.scala 208:48]
    _T_11[15] <= UInt<12>("h00") @[ProcessingElement.scala 208:48]
    reg iactDataSPad : UInt<12>[16], clock with : (reset => (reset, _T_11)) @[ProcessingElement.scala 208:40]
    when io.commonIO.dataLenFinIO.streamDecoupledDataIO.valid : @[ProcessingElement.scala 210:32]
      iactDataSPad[padWriteIndexReg] <= io.commonIO.dataLenFinIO.streamDecoupledDataIO.bits.data @[ProcessingElement.scala 211:36]
      skip @[ProcessingElement.scala 210:32]
    dataWire <= iactDataSPad[padReadIndexReg] @[ProcessingElement.scala 214:12]
    io.commonIO.readOutData <= dataWire @[ProcessingElement.scala 215:27]
    io.addrIO.nextReadOutData is invalid @[ProcessingElement.scala 216:29]
    
