;buildInfoPackage: chisel3, version: 3.3-SNAPSHOT, scalaVersion: 2.12.10, sbtVersion: 1.3.2
circuit ProcessingElementPad : 
  module SPadAddrModule : 
    input clock : Clock
    input reset : Reset
    output io : {commonIO : {columnNum : UInt<4>, readOutData : UInt<4>, flip readEn : UInt<1>, flip writeEn : UInt<1>, writeIdx : UInt<4>, dataLenFinIO : {flip writeInDataIO : {flip ready : UInt<1>, valid : UInt<1>, bits : {data : UInt<4>}}, flip streamLen : UInt<4>, writeFin : UInt<1>}}, addrIO : {flip readInIdx : UInt<4>, flip indexInc : UInt<1>, flip readInIdxEn : UInt<1>}, dataIO : {flip readInIdx : UInt<4>, flip indexInc : UInt<1>, flip readInIdxEn : UInt<1>}}
    
    reg dataLenReg : UInt<4>, clock with : (reset => (reset, UInt<4>("h09"))) @[SPadModule.scala 79:33]
    wire dataWire : UInt<4> @[SPadModule.scala 80:28]
    dataLenReg <= io.commonIO.dataLenFinIO.streamLen @[SPadModule.scala 81:14]
    reg padWriteIndexReg : UInt<4>, clock with : (reset => (reset, UInt<4>("h00"))) @[SPadModule.scala 82:39]
    reg padReadIndexReg : UInt<4>, clock with : (reset => (reset, UInt<4>("h00"))) @[SPadModule.scala 83:38]
    wire writeWrapWire : UInt<1> @[SPadModule.scala 85:33]
    wire readWrapWire : UInt<1> @[SPadModule.scala 86:32]
    wire readIndexInc : UInt<1> @[SPadModule.scala 87:32]
    node _T = sub(dataLenReg, UInt<1>("h01")) @[SPadModule.scala 88:53]
    node _T_1 = tail(_T, 1) @[SPadModule.scala 88:53]
    node _T_2 = eq(padWriteIndexReg, _T_1) @[SPadModule.scala 88:37]
    writeWrapWire <= _T_2 @[SPadModule.scala 88:17]
    node _T_3 = sub(dataLenReg, UInt<1>("h01")) @[SPadModule.scala 89:51]
    node _T_4 = tail(_T_3, 1) @[SPadModule.scala 89:51]
    node _T_5 = eq(padReadIndexReg, _T_4) @[SPadModule.scala 89:35]
    readWrapWire <= _T_5 @[SPadModule.scala 89:16]
    node _T_6 = and(io.commonIO.dataLenFinIO.writeInDataIO.valid, io.commonIO.writeEn) @[SPadModule.scala 91:31]
    when _T_6 : @[SPadModule.scala 91:55]
      io.commonIO.dataLenFinIO.writeInDataIO.ready <= UInt<1>("h01") @[SPadModule.scala 92:27]
      node _T_7 = add(padWriteIndexReg, UInt<1>("h01")) @[SPadModule.scala 93:42]
      node _T_8 = tail(_T_7, 1) @[SPadModule.scala 93:42]
      padWriteIndexReg <= _T_8 @[SPadModule.scala 93:22]
      when writeWrapWire : @[SPadModule.scala 94:26]
        padWriteIndexReg <= UInt<1>("h00") @[SPadModule.scala 95:24]
        skip @[SPadModule.scala 94:26]
      skip @[SPadModule.scala 91:55]
    else : @[SPadModule.scala 97:15]
      io.commonIO.dataLenFinIO.writeInDataIO.ready <= UInt<1>("h00") @[SPadModule.scala 98:27]
      skip @[SPadModule.scala 97:15]
    io.commonIO.writeIdx <= padWriteIndexReg @[SPadModule.scala 101:24]
    node _T_9 = and(io.commonIO.dataLenFinIO.writeInDataIO.valid, writeWrapWire) @[SPadModule.scala 102:62]
    io.commonIO.dataLenFinIO.writeFin <= _T_9 @[SPadModule.scala 102:37]
    io.commonIO.columnNum <= padReadIndexReg @[SPadModule.scala 103:25]
    wire _T_10 : UInt<4>[9] @[SPadModule.scala 14:44]
    _T_10[0] <= UInt<4>("h00") @[SPadModule.scala 14:44]
    _T_10[1] <= UInt<4>("h00") @[SPadModule.scala 14:44]
    _T_10[2] <= UInt<4>("h00") @[SPadModule.scala 14:44]
    _T_10[3] <= UInt<4>("h00") @[SPadModule.scala 14:44]
    _T_10[4] <= UInt<4>("h00") @[SPadModule.scala 14:44]
    _T_10[5] <= UInt<4>("h00") @[SPadModule.scala 14:44]
    _T_10[6] <= UInt<4>("h00") @[SPadModule.scala 14:44]
    _T_10[7] <= UInt<4>("h00") @[SPadModule.scala 14:44]
    _T_10[8] <= UInt<4>("h00") @[SPadModule.scala 14:44]
    reg addrSPad : UInt<4>[9], clock with : (reset => (reset, _T_10)) @[SPadModule.scala 14:36]
    node _T_11 = and(io.commonIO.dataLenFinIO.writeInDataIO.valid, io.commonIO.writeEn) @[SPadModule.scala 16:31]
    when _T_11 : @[SPadModule.scala 16:55]
      addrSPad[padWriteIndexReg] <= io.commonIO.dataLenFinIO.writeInDataIO.bits.data @[SPadModule.scala 17:32]
      skip @[SPadModule.scala 16:55]
    when readIndexInc : @[SPadModule.scala 20:23]
      node _T_12 = add(padReadIndexReg, UInt<1>("h01")) @[SPadModule.scala 21:40]
      node _T_13 = tail(_T_12, 1) @[SPadModule.scala 21:40]
      padReadIndexReg <= _T_13 @[SPadModule.scala 21:21]
      when readWrapWire : @[SPadModule.scala 22:25]
        padReadIndexReg <= UInt<1>("h00") @[SPadModule.scala 23:23]
        skip @[SPadModule.scala 22:25]
      skip @[SPadModule.scala 20:23]
    dataWire <= addrSPad[padReadIndexReg] @[SPadModule.scala 27:12]
    io.commonIO.readOutData <= dataWire @[SPadModule.scala 28:27]
    readIndexInc <= io.addrIO.indexInc @[SPadModule.scala 29:16]
    
  module SPadDataModule : 
    input clock : Clock
    input reset : Reset
    output io : {commonIO : {columnNum : UInt<4>, readOutData : UInt<12>, flip readEn : UInt<1>, flip writeEn : UInt<1>, writeIdx : UInt<4>, dataLenFinIO : {flip writeInDataIO : {flip ready : UInt<1>, valid : UInt<1>, bits : {data : UInt<12>}}, flip streamLen : UInt<4>, writeFin : UInt<1>}}, addrIO : {flip readInIdx : UInt<4>, flip indexInc : UInt<1>, flip readInIdxEn : UInt<1>}, dataIO : {flip readInIdx : UInt<4>, flip indexInc : UInt<1>, flip readInIdxEn : UInt<1>}}
    
    reg dataLenReg : UInt<4>, clock with : (reset => (reset, UInt<4>("h09"))) @[SPadModule.scala 79:33]
    wire dataWire : UInt<12> @[SPadModule.scala 80:28]
    dataLenReg <= io.commonIO.dataLenFinIO.streamLen @[SPadModule.scala 81:14]
    reg padWriteIndexReg : UInt<4>, clock with : (reset => (reset, UInt<4>("h00"))) @[SPadModule.scala 82:39]
    reg padReadIndexReg : UInt<4>, clock with : (reset => (reset, UInt<4>("h00"))) @[SPadModule.scala 83:38]
    wire writeWrapWire : UInt<1> @[SPadModule.scala 85:33]
    wire readWrapWire : UInt<1> @[SPadModule.scala 86:32]
    wire readIndexInc : UInt<1> @[SPadModule.scala 87:32]
    node _T = sub(dataLenReg, UInt<1>("h01")) @[SPadModule.scala 88:53]
    node _T_1 = tail(_T, 1) @[SPadModule.scala 88:53]
    node _T_2 = eq(padWriteIndexReg, _T_1) @[SPadModule.scala 88:37]
    writeWrapWire <= _T_2 @[SPadModule.scala 88:17]
    node _T_3 = sub(dataLenReg, UInt<1>("h01")) @[SPadModule.scala 89:51]
    node _T_4 = tail(_T_3, 1) @[SPadModule.scala 89:51]
    node _T_5 = eq(padReadIndexReg, _T_4) @[SPadModule.scala 89:35]
    readWrapWire <= _T_5 @[SPadModule.scala 89:16]
    node _T_6 = and(io.commonIO.dataLenFinIO.writeInDataIO.valid, io.commonIO.writeEn) @[SPadModule.scala 91:31]
    when _T_6 : @[SPadModule.scala 91:55]
      io.commonIO.dataLenFinIO.writeInDataIO.ready <= UInt<1>("h01") @[SPadModule.scala 92:27]
      node _T_7 = add(padWriteIndexReg, UInt<1>("h01")) @[SPadModule.scala 93:42]
      node _T_8 = tail(_T_7, 1) @[SPadModule.scala 93:42]
      padWriteIndexReg <= _T_8 @[SPadModule.scala 93:22]
      when writeWrapWire : @[SPadModule.scala 94:26]
        padWriteIndexReg <= UInt<1>("h00") @[SPadModule.scala 95:24]
        skip @[SPadModule.scala 94:26]
      skip @[SPadModule.scala 91:55]
    else : @[SPadModule.scala 97:15]
      io.commonIO.dataLenFinIO.writeInDataIO.ready <= UInt<1>("h00") @[SPadModule.scala 98:27]
      skip @[SPadModule.scala 97:15]
    io.commonIO.writeIdx <= padWriteIndexReg @[SPadModule.scala 101:24]
    node _T_9 = and(io.commonIO.dataLenFinIO.writeInDataIO.valid, writeWrapWire) @[SPadModule.scala 102:62]
    io.commonIO.dataLenFinIO.writeFin <= _T_9 @[SPadModule.scala 102:37]
    io.commonIO.columnNum <= padReadIndexReg @[SPadModule.scala 103:25]
    wire _T_10 : UInt<12>[16] @[SPadModule.scala 54:46]
    _T_10[0] <= UInt<12>("h00") @[SPadModule.scala 54:46]
    _T_10[1] <= UInt<12>("h00") @[SPadModule.scala 54:46]
    _T_10[2] <= UInt<12>("h00") @[SPadModule.scala 54:46]
    _T_10[3] <= UInt<12>("h00") @[SPadModule.scala 54:46]
    _T_10[4] <= UInt<12>("h00") @[SPadModule.scala 54:46]
    _T_10[5] <= UInt<12>("h00") @[SPadModule.scala 54:46]
    _T_10[6] <= UInt<12>("h00") @[SPadModule.scala 54:46]
    _T_10[7] <= UInt<12>("h00") @[SPadModule.scala 54:46]
    _T_10[8] <= UInt<12>("h00") @[SPadModule.scala 54:46]
    _T_10[9] <= UInt<12>("h00") @[SPadModule.scala 54:46]
    _T_10[10] <= UInt<12>("h00") @[SPadModule.scala 54:46]
    _T_10[11] <= UInt<12>("h00") @[SPadModule.scala 54:46]
    _T_10[12] <= UInt<12>("h00") @[SPadModule.scala 54:46]
    _T_10[13] <= UInt<12>("h00") @[SPadModule.scala 54:46]
    _T_10[14] <= UInt<12>("h00") @[SPadModule.scala 54:46]
    _T_10[15] <= UInt<12>("h00") @[SPadModule.scala 54:46]
    reg _T_11 : UInt<12>[16], clock with : (reset => (reset, _T_10)) @[SPadModule.scala 54:38]
    node _T_12 = and(io.commonIO.dataLenFinIO.writeInDataIO.valid, io.commonIO.writeEn) @[SPadModule.scala 55:33]
    when _T_12 : @[SPadModule.scala 55:57]
      _T_11[padWriteIndexReg] <= io.commonIO.dataLenFinIO.writeInDataIO.bits.data @[SPadModule.scala 56:34]
      skip @[SPadModule.scala 55:57]
    when readIndexInc : @[SPadModule.scala 59:25]
      node _T_13 = add(padReadIndexReg, UInt<1>("h01")) @[SPadModule.scala 60:42]
      node _T_14 = tail(_T_13, 1) @[SPadModule.scala 60:42]
      padReadIndexReg <= _T_14 @[SPadModule.scala 60:23]
      when readWrapWire : @[SPadModule.scala 61:27]
        padReadIndexReg <= UInt<1>("h00") @[SPadModule.scala 62:25]
        skip @[SPadModule.scala 61:27]
      skip @[SPadModule.scala 59:25]
    dataWire <= _T_11[padReadIndexReg] @[SPadModule.scala 66:14]
    readIndexInc <= io.dataIO.indexInc @[SPadModule.scala 68:16]
    io.commonIO.readOutData <= dataWire @[SPadModule.scala 69:27]
    
  module WeightSPadAddrModule : 
    input clock : Clock
    input reset : Reset
    output io : {commonIO : {columnNum : UInt<4>, readOutData : UInt<7>, flip readEn : UInt<1>, flip writeEn : UInt<1>, writeIdx : UInt<4>, dataLenFinIO : {flip writeInDataIO : {flip ready : UInt<1>, valid : UInt<1>, bits : {data : UInt<7>}}, flip streamLen : UInt<4>, writeFin : UInt<1>}}, addrIO : {flip readInIdx : UInt<4>, flip indexInc : UInt<1>, flip readInIdxEn : UInt<1>}, dataIO : {flip readInIdx : UInt<4>, flip indexInc : UInt<1>, flip readInIdxEn : UInt<1>}}
    
    reg dataLenReg : UInt<4>, clock with : (reset => (reset, UInt<4>("h09"))) @[SPadModule.scala 79:33]
    wire dataWire : UInt<7> @[SPadModule.scala 80:28]
    dataLenReg <= io.commonIO.dataLenFinIO.streamLen @[SPadModule.scala 81:14]
    reg padWriteIndexReg : UInt<4>, clock with : (reset => (reset, UInt<4>("h00"))) @[SPadModule.scala 82:39]
    reg padReadIndexReg : UInt<4>, clock with : (reset => (reset, UInt<4>("h00"))) @[SPadModule.scala 83:38]
    wire writeWrapWire : UInt<1> @[SPadModule.scala 85:33]
    wire readWrapWire : UInt<1> @[SPadModule.scala 86:32]
    wire readIndexInc : UInt<1> @[SPadModule.scala 87:32]
    node _T = sub(dataLenReg, UInt<1>("h01")) @[SPadModule.scala 88:53]
    node _T_1 = tail(_T, 1) @[SPadModule.scala 88:53]
    node _T_2 = eq(padWriteIndexReg, _T_1) @[SPadModule.scala 88:37]
    writeWrapWire <= _T_2 @[SPadModule.scala 88:17]
    node _T_3 = sub(dataLenReg, UInt<1>("h01")) @[SPadModule.scala 89:51]
    node _T_4 = tail(_T_3, 1) @[SPadModule.scala 89:51]
    node _T_5 = eq(padReadIndexReg, _T_4) @[SPadModule.scala 89:35]
    readWrapWire <= _T_5 @[SPadModule.scala 89:16]
    node _T_6 = and(io.commonIO.dataLenFinIO.writeInDataIO.valid, io.commonIO.writeEn) @[SPadModule.scala 91:31]
    when _T_6 : @[SPadModule.scala 91:55]
      io.commonIO.dataLenFinIO.writeInDataIO.ready <= UInt<1>("h01") @[SPadModule.scala 92:27]
      node _T_7 = add(padWriteIndexReg, UInt<1>("h01")) @[SPadModule.scala 93:42]
      node _T_8 = tail(_T_7, 1) @[SPadModule.scala 93:42]
      padWriteIndexReg <= _T_8 @[SPadModule.scala 93:22]
      when writeWrapWire : @[SPadModule.scala 94:26]
        padWriteIndexReg <= UInt<1>("h00") @[SPadModule.scala 95:24]
        skip @[SPadModule.scala 94:26]
      skip @[SPadModule.scala 91:55]
    else : @[SPadModule.scala 97:15]
      io.commonIO.dataLenFinIO.writeInDataIO.ready <= UInt<1>("h00") @[SPadModule.scala 98:27]
      skip @[SPadModule.scala 97:15]
    io.commonIO.writeIdx <= padWriteIndexReg @[SPadModule.scala 101:24]
    node _T_9 = and(io.commonIO.dataLenFinIO.writeInDataIO.valid, writeWrapWire) @[SPadModule.scala 102:62]
    io.commonIO.dataLenFinIO.writeFin <= _T_9 @[SPadModule.scala 102:37]
    io.commonIO.columnNum <= padReadIndexReg @[SPadModule.scala 103:25]
    wire _T_10 : UInt<7>[16] @[SPadModule.scala 14:44]
    _T_10[0] <= UInt<7>("h00") @[SPadModule.scala 14:44]
    _T_10[1] <= UInt<7>("h00") @[SPadModule.scala 14:44]
    _T_10[2] <= UInt<7>("h00") @[SPadModule.scala 14:44]
    _T_10[3] <= UInt<7>("h00") @[SPadModule.scala 14:44]
    _T_10[4] <= UInt<7>("h00") @[SPadModule.scala 14:44]
    _T_10[5] <= UInt<7>("h00") @[SPadModule.scala 14:44]
    _T_10[6] <= UInt<7>("h00") @[SPadModule.scala 14:44]
    _T_10[7] <= UInt<7>("h00") @[SPadModule.scala 14:44]
    _T_10[8] <= UInt<7>("h00") @[SPadModule.scala 14:44]
    _T_10[9] <= UInt<7>("h00") @[SPadModule.scala 14:44]
    _T_10[10] <= UInt<7>("h00") @[SPadModule.scala 14:44]
    _T_10[11] <= UInt<7>("h00") @[SPadModule.scala 14:44]
    _T_10[12] <= UInt<7>("h00") @[SPadModule.scala 14:44]
    _T_10[13] <= UInt<7>("h00") @[SPadModule.scala 14:44]
    _T_10[14] <= UInt<7>("h00") @[SPadModule.scala 14:44]
    _T_10[15] <= UInt<7>("h00") @[SPadModule.scala 14:44]
    reg addrSPad : UInt<7>[16], clock with : (reset => (reset, _T_10)) @[SPadModule.scala 14:36]
    node _T_11 = and(io.commonIO.dataLenFinIO.writeInDataIO.valid, io.commonIO.writeEn) @[SPadModule.scala 16:31]
    when _T_11 : @[SPadModule.scala 16:55]
      addrSPad[padWriteIndexReg] <= io.commonIO.dataLenFinIO.writeInDataIO.bits.data @[SPadModule.scala 17:32]
      skip @[SPadModule.scala 16:55]
    when readIndexInc : @[SPadModule.scala 20:23]
      node _T_12 = add(padReadIndexReg, UInt<1>("h01")) @[SPadModule.scala 21:40]
      node _T_13 = tail(_T_12, 1) @[SPadModule.scala 21:40]
      padReadIndexReg <= _T_13 @[SPadModule.scala 21:21]
      when readWrapWire : @[SPadModule.scala 22:25]
        padReadIndexReg <= UInt<1>("h00") @[SPadModule.scala 23:23]
        skip @[SPadModule.scala 22:25]
      skip @[SPadModule.scala 20:23]
    dataWire <= addrSPad[padReadIndexReg] @[SPadModule.scala 27:12]
    io.commonIO.readOutData <= dataWire @[SPadModule.scala 28:27]
    readIndexInc <= io.addrIO.indexInc @[SPadModule.scala 29:16]
    when io.addrIO.readInIdxEn : @[SPadModule.scala 7:32]
      padReadIndexReg <= io.addrIO.readInIdx @[SPadModule.scala 8:21]
      skip @[SPadModule.scala 7:32]
    
  module SPadDataModule_1 : 
    input clock : Clock
    input reset : Reset
    output io : {commonIO : {columnNum : UInt<8>, readOutData : UInt<12>, flip readEn : UInt<1>, flip writeEn : UInt<1>, writeIdx : UInt<8>, dataLenFinIO : {flip writeInDataIO : {flip ready : UInt<1>, valid : UInt<1>, bits : {data : UInt<12>}}, flip streamLen : UInt<8>, writeFin : UInt<1>}}, addrIO : {flip readInIdx : UInt<8>, flip indexInc : UInt<1>, flip readInIdxEn : UInt<1>}, dataIO : {flip readInIdx : UInt<8>, flip indexInc : UInt<1>, flip readInIdxEn : UInt<1>}}
    
    reg dataLenReg : UInt<8>, clock with : (reset => (reset, UInt<8>("h09"))) @[SPadModule.scala 79:33]
    wire dataWire : UInt<12> @[SPadModule.scala 80:28]
    dataLenReg <= io.commonIO.dataLenFinIO.streamLen @[SPadModule.scala 81:14]
    reg padWriteIndexReg : UInt<8>, clock with : (reset => (reset, UInt<8>("h00"))) @[SPadModule.scala 82:39]
    reg padReadIndexReg : UInt<8>, clock with : (reset => (reset, UInt<8>("h00"))) @[SPadModule.scala 83:38]
    wire writeWrapWire : UInt<1> @[SPadModule.scala 85:33]
    wire readWrapWire : UInt<1> @[SPadModule.scala 86:32]
    wire readIndexInc : UInt<1> @[SPadModule.scala 87:32]
    node _T = sub(dataLenReg, UInt<1>("h01")) @[SPadModule.scala 88:53]
    node _T_1 = tail(_T, 1) @[SPadModule.scala 88:53]
    node _T_2 = eq(padWriteIndexReg, _T_1) @[SPadModule.scala 88:37]
    writeWrapWire <= _T_2 @[SPadModule.scala 88:17]
    node _T_3 = sub(dataLenReg, UInt<1>("h01")) @[SPadModule.scala 89:51]
    node _T_4 = tail(_T_3, 1) @[SPadModule.scala 89:51]
    node _T_5 = eq(padReadIndexReg, _T_4) @[SPadModule.scala 89:35]
    readWrapWire <= _T_5 @[SPadModule.scala 89:16]
    node _T_6 = and(io.commonIO.dataLenFinIO.writeInDataIO.valid, io.commonIO.writeEn) @[SPadModule.scala 91:31]
    when _T_6 : @[SPadModule.scala 91:55]
      io.commonIO.dataLenFinIO.writeInDataIO.ready <= UInt<1>("h01") @[SPadModule.scala 92:27]
      node _T_7 = add(padWriteIndexReg, UInt<1>("h01")) @[SPadModule.scala 93:42]
      node _T_8 = tail(_T_7, 1) @[SPadModule.scala 93:42]
      padWriteIndexReg <= _T_8 @[SPadModule.scala 93:22]
      when writeWrapWire : @[SPadModule.scala 94:26]
        padWriteIndexReg <= UInt<1>("h00") @[SPadModule.scala 95:24]
        skip @[SPadModule.scala 94:26]
      skip @[SPadModule.scala 91:55]
    else : @[SPadModule.scala 97:15]
      io.commonIO.dataLenFinIO.writeInDataIO.ready <= UInt<1>("h00") @[SPadModule.scala 98:27]
      skip @[SPadModule.scala 97:15]
    io.commonIO.writeIdx <= padWriteIndexReg @[SPadModule.scala 101:24]
    node _T_9 = and(io.commonIO.dataLenFinIO.writeInDataIO.valid, writeWrapWire) @[SPadModule.scala 102:62]
    io.commonIO.dataLenFinIO.writeFin <= _T_9 @[SPadModule.scala 102:37]
    io.commonIO.columnNum <= padReadIndexReg @[SPadModule.scala 103:25]
    smem _T_10 : UInt<12>[192] @[SPadModule.scala 35:50]
    node _T_11 = and(io.commonIO.dataLenFinIO.writeInDataIO.valid, io.commonIO.writeEn) @[SPadModule.scala 37:33]
    when _T_11 : @[SPadModule.scala 37:57]
      write mport _T_12 = _T_10[padWriteIndexReg], clock
      _T_12 <= io.commonIO.dataLenFinIO.writeInDataIO.bits.data
      skip @[SPadModule.scala 37:57]
    when io.dataIO.readInIdxEn : @[SPadModule.scala 41:34]
      padReadIndexReg <= io.dataIO.readInIdx @[SPadModule.scala 42:23]
      skip @[SPadModule.scala 41:34]
    else : @[SPadModule.scala 43:18]
      when readIndexInc : @[SPadModule.scala 44:27]
        node _T_13 = add(padReadIndexReg, UInt<1>("h01")) @[SPadModule.scala 45:44]
        node _T_14 = tail(_T_13, 1) @[SPadModule.scala 45:44]
        padReadIndexReg <= _T_14 @[SPadModule.scala 45:25]
        when readWrapWire : @[SPadModule.scala 46:29]
          padReadIndexReg <= UInt<1>("h00") @[SPadModule.scala 47:27]
          skip @[SPadModule.scala 46:29]
        skip @[SPadModule.scala 44:27]
      skip @[SPadModule.scala 43:18]
    wire _T_15 : UInt @[SPadModule.scala 52:30]
    _T_15 is invalid @[SPadModule.scala 52:30]
    when io.commonIO.readEn : @[SPadModule.scala 52:30]
      _T_15 <= padReadIndexReg @[SPadModule.scala 52:30]
      node _T_16 = or(_T_15, UInt<8>("h00")) @[SPadModule.scala 52:30]
      node _T_17 = bits(_T_16, 7, 0) @[SPadModule.scala 52:30]
      read mport _T_18 = _T_10[_T_17], clock @[SPadModule.scala 52:30]
      skip @[SPadModule.scala 52:30]
    dataWire <= _T_18 @[SPadModule.scala 52:14]
    readIndexInc <= io.dataIO.indexInc @[SPadModule.scala 68:16]
    io.commonIO.readOutData <= dataWire @[SPadModule.scala 69:27]
    
  module ProcessingElementPad : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip padCtrl : {pSumEnqOrProduct : {flip ready : UInt<1>, valid : UInt<1>, bits : UInt<1>}, doLoadEn : UInt<1>, flip writeFinish : UInt<1>, flip calFinish : UInt<1>, doMACEn : UInt<1>}, dataStream : {flip ipsIO : {flip ready : UInt<1>, valid : UInt<1>, bits : UInt<20>}, opsIO : {flip ready : UInt<1>, valid : UInt<1>, bits : UInt<20>}, iactIOs : {dataIOs : {flip writeInDataIO : {flip ready : UInt<1>, valid : UInt<1>, bits : {data : UInt<12>}}, flip streamLen : UInt<4>, writeFin : UInt<1>}, addrIOs : {flip writeInDataIO : {flip ready : UInt<1>, valid : UInt<1>, bits : {data : UInt<4>}}, flip streamLen : UInt<4>, writeFin : UInt<1>}}, weightIOs : {dataIOs : {flip writeInDataIO : {flip ready : UInt<1>, valid : UInt<1>, bits : {data : UInt<12>}}, flip streamLen : UInt<8>, writeFin : UInt<1>}, addrIOs : {flip writeInDataIO : {flip ready : UInt<1>, valid : UInt<1>, bits : {data : UInt<7>}}, flip streamLen : UInt<4>, writeFin : UInt<1>}}}, debugIO : {iactMatrixData : UInt<8>, iactMatrixRow : UInt<4>, iactMatrixColumn : UInt<4>, iactAddrInc : UInt<1>, iactDataInc : UInt<1>, iactAddrIdx : UInt<4>, weightAddrSPadReadOut : UInt<7>, weightMatrixData : UInt<8>, weightMatrixRow : UInt<4>, productResult : UInt<20>, pSumResult : UInt<20>, pSumLoad : UInt<20>, weightAddrInIdx : UInt<4>, sPadState : UInt<3>}}
    
    wire _T : UInt<20>[32] @[ProcessingElement.scala 115:46]
    _T[0] <= UInt<20>("h00") @[ProcessingElement.scala 115:46]
    _T[1] <= UInt<20>("h00") @[ProcessingElement.scala 115:46]
    _T[2] <= UInt<20>("h00") @[ProcessingElement.scala 115:46]
    _T[3] <= UInt<20>("h00") @[ProcessingElement.scala 115:46]
    _T[4] <= UInt<20>("h00") @[ProcessingElement.scala 115:46]
    _T[5] <= UInt<20>("h00") @[ProcessingElement.scala 115:46]
    _T[6] <= UInt<20>("h00") @[ProcessingElement.scala 115:46]
    _T[7] <= UInt<20>("h00") @[ProcessingElement.scala 115:46]
    _T[8] <= UInt<20>("h00") @[ProcessingElement.scala 115:46]
    _T[9] <= UInt<20>("h00") @[ProcessingElement.scala 115:46]
    _T[10] <= UInt<20>("h00") @[ProcessingElement.scala 115:46]
    _T[11] <= UInt<20>("h00") @[ProcessingElement.scala 115:46]
    _T[12] <= UInt<20>("h00") @[ProcessingElement.scala 115:46]
    _T[13] <= UInt<20>("h00") @[ProcessingElement.scala 115:46]
    _T[14] <= UInt<20>("h00") @[ProcessingElement.scala 115:46]
    _T[15] <= UInt<20>("h00") @[ProcessingElement.scala 115:46]
    _T[16] <= UInt<20>("h00") @[ProcessingElement.scala 115:46]
    _T[17] <= UInt<20>("h00") @[ProcessingElement.scala 115:46]
    _T[18] <= UInt<20>("h00") @[ProcessingElement.scala 115:46]
    _T[19] <= UInt<20>("h00") @[ProcessingElement.scala 115:46]
    _T[20] <= UInt<20>("h00") @[ProcessingElement.scala 115:46]
    _T[21] <= UInt<20>("h00") @[ProcessingElement.scala 115:46]
    _T[22] <= UInt<20>("h00") @[ProcessingElement.scala 115:46]
    _T[23] <= UInt<20>("h00") @[ProcessingElement.scala 115:46]
    _T[24] <= UInt<20>("h00") @[ProcessingElement.scala 115:46]
    _T[25] <= UInt<20>("h00") @[ProcessingElement.scala 115:46]
    _T[26] <= UInt<20>("h00") @[ProcessingElement.scala 115:46]
    _T[27] <= UInt<20>("h00") @[ProcessingElement.scala 115:46]
    _T[28] <= UInt<20>("h00") @[ProcessingElement.scala 115:46]
    _T[29] <= UInt<20>("h00") @[ProcessingElement.scala 115:46]
    _T[30] <= UInt<20>("h00") @[ProcessingElement.scala 115:46]
    _T[31] <= UInt<20>("h00") @[ProcessingElement.scala 115:46]
    reg psDataSPad : UInt<20>[32], clock with : (reset => (reset, _T)) @[ProcessingElement.scala 115:38]
    inst iactAddrSPad of SPadAddrModule @[ProcessingElement.scala 116:44]
    iactAddrSPad.clock <= clock
    iactAddrSPad.reset <= reset
    inst iactDataSPad of SPadDataModule @[ProcessingElement.scala 117:44]
    iactDataSPad.clock <= clock
    iactDataSPad.reset <= reset
    inst weightAddrSPad of WeightSPadAddrModule @[ProcessingElement.scala 118:46]
    weightAddrSPad.clock <= clock
    weightAddrSPad.reset <= reset
    inst weightDataSPad of SPadDataModule_1 @[ProcessingElement.scala 119:46]
    weightDataSPad.clock <= clock
    weightDataSPad.reset <= reset
    wire iactAddrIndexWire : UInt<4> @[ProcessingElement.scala 121:37]
    wire iactAddrDataWire : UInt<4> @[ProcessingElement.scala 122:36]
    wire iactDataIndexWire : UInt<4> @[ProcessingElement.scala 123:37]
    reg iactAddrSPadReadEnReg : UInt<1>, clock with : (reset => (reset, UInt<1>("h00"))) @[ProcessingElement.scala 124:44]
    reg iactDataSPadReadEnReg : UInt<1>, clock with : (reset => (reset, UInt<1>("h00"))) @[ProcessingElement.scala 125:44]
    wire iactAddrSPadIdxIncWire : UInt<1> @[ProcessingElement.scala 126:42]
    wire iactDataSPadIdxIncWire : UInt<1> @[ProcessingElement.scala 127:42]
    reg iactMatrixColumnReg : UInt<4>, clock with : (reset => (reset, UInt<4>("h00"))) @[ProcessingElement.scala 128:42]
    reg iactZeroColumnNumber : UInt<4>, clock with : (reset => (reset, UInt<4>("h00"))) @[ProcessingElement.scala 129:43]
    reg iactDataSPadFirstReadReg : UInt<1>, clock with : (reset => (reset, UInt<1>("h01"))) @[ProcessingElement.scala 130:47]
    wire iactMatrixRowWire : UInt<4> @[ProcessingElement.scala 131:37]
    wire iactMatrixDataWire : UInt<8> @[ProcessingElement.scala 132:38]
    wire weightAddrIndexWire : UInt<4> @[ProcessingElement.scala 134:39]
    wire weightAddrDataWire : UInt<7> @[ProcessingElement.scala 135:38]
    wire weightDataIndexWire : UInt<4> @[ProcessingElement.scala 136:39]
    reg weightAddrSPadReadEnReg : UInt<1>, clock with : (reset => (reset, UInt<1>("h00"))) @[ProcessingElement.scala 137:46]
    reg weightDataSPadReadEnReg : UInt<1>, clock with : (reset => (reset, UInt<1>("h00"))) @[ProcessingElement.scala 138:46]
    wire weightAddrSPadIdxIncWire : UInt<1> @[ProcessingElement.scala 139:44]
    wire weightDataSPadIdxIncWire : UInt<1> @[ProcessingElement.scala 140:44]
    wire weightMatrixDataReg : UInt<8> @[ProcessingElement.scala 141:39]
    reg weightDataSPadFirstRead : UInt<1>, clock with : (reset => (reset, UInt<1>("h01"))) @[ProcessingElement.scala 143:46]
    wire weightDataIdxMuxWire : UInt<1> @[ProcessingElement.scala 144:40]
    wire weightAddrSPadReadIdxWire : UInt<4> @[ProcessingElement.scala 145:45]
    wire weightDataIdxEnWire : UInt<1> @[ProcessingElement.scala 146:39]
    wire weightAddrIdxEnWire : UInt<1> @[ProcessingElement.scala 147:39]
    wire weightMatrixReadFirstColumn : UInt<1> @[ProcessingElement.scala 148:47]
    reg productReg : UInt<20>, clock with : (reset => (reset, UInt<20>("h00"))) @[ProcessingElement.scala 150:33]
    reg pSumSPadLoadReg : UInt<20>, clock with : (reset => (reset, UInt<20>("h00"))) @[ProcessingElement.scala 151:38]
    wire pSumResultWire : UInt<20> @[ProcessingElement.scala 152:34]
    reg sPad : UInt<3>, clock with : (reset => (reset, UInt<3>("h00"))) @[ProcessingElement.scala 163:27]
    wire padEqIA : UInt<1> @[ProcessingElement.scala 164:27]
    wire padEqID : UInt<1> @[ProcessingElement.scala 165:27]
    wire padEqWA : UInt<1> @[ProcessingElement.scala 166:27]
    wire padEqMpy : UInt<1> @[ProcessingElement.scala 167:28]
    wire padEqWB : UInt<1> @[ProcessingElement.scala 168:27]
    node _T_1 = eq(sPad, UInt<3>("h01")) @[ProcessingElement.scala 169:19]
    padEqIA <= _T_1 @[ProcessingElement.scala 169:11]
    node _T_2 = eq(sPad, UInt<3>("h06")) @[ProcessingElement.scala 170:20]
    padEqMpy <= _T_2 @[ProcessingElement.scala 170:12]
    node _T_3 = eq(sPad, UInt<3>("h07")) @[ProcessingElement.scala 171:19]
    padEqWB <= _T_3 @[ProcessingElement.scala 171:11]
    node _T_4 = eq(sPad, UInt<3>("h03")) @[ProcessingElement.scala 172:19]
    padEqWA <= _T_4 @[ProcessingElement.scala 172:11]
    node _T_5 = eq(sPad, UInt<3>("h02")) @[ProcessingElement.scala 173:19]
    padEqID <= _T_5 @[ProcessingElement.scala 173:11]
    node _T_6 = eq(iactMatrixRowWire, UInt<1>("h00")) @[ProcessingElement.scala 174:52]
    weightMatrixReadFirstColumn <= _T_6 @[ProcessingElement.scala 174:31]
    wire weightMatrixRowReg : UInt<4> @[ProcessingElement.scala 175:38]
    iactAddrSPad.io.commonIO.writeEn <= io.padCtrl.doLoadEn @[ProcessingElement.scala 178:93]
    iactDataSPad.io.commonIO.writeEn <= io.padCtrl.doLoadEn @[ProcessingElement.scala 178:93]
    weightAddrSPad.io.commonIO.writeEn <= io.padCtrl.doLoadEn @[ProcessingElement.scala 178:93]
    weightDataSPad.io.commonIO.writeEn <= io.padCtrl.doLoadEn @[ProcessingElement.scala 178:93]
    io.dataStream.iactIOs.addrIOs.writeFin <= iactAddrSPad.io.commonIO.dataLenFinIO.writeFin @[ProcessingElement.scala 180:41]
    iactAddrSPad.io.commonIO.dataLenFinIO.streamLen <= io.dataStream.iactIOs.addrIOs.streamLen @[ProcessingElement.scala 180:41]
    iactAddrSPad.io.commonIO.dataLenFinIO.writeInDataIO.bits.data <= io.dataStream.iactIOs.addrIOs.writeInDataIO.bits.data @[ProcessingElement.scala 180:41]
    iactAddrSPad.io.commonIO.dataLenFinIO.writeInDataIO.valid <= io.dataStream.iactIOs.addrIOs.writeInDataIO.valid @[ProcessingElement.scala 180:41]
    io.dataStream.iactIOs.addrIOs.writeInDataIO.ready <= iactAddrSPad.io.commonIO.dataLenFinIO.writeInDataIO.ready @[ProcessingElement.scala 180:41]
    iactAddrIndexWire <= iactAddrSPad.io.commonIO.columnNum @[ProcessingElement.scala 181:21]
    iactAddrDataWire <= iactAddrSPad.io.commonIO.readOutData @[ProcessingElement.scala 182:20]
    iactAddrSPad.io.commonIO.readEn <= iactAddrSPadReadEnReg @[ProcessingElement.scala 183:35]
    iactAddrSPad.io.addrIO.indexInc <= iactAddrSPadIdxIncWire @[ProcessingElement.scala 184:35]
    iactAddrSPad.io.addrIO.readInIdx is invalid @[ProcessingElement.scala 185:36]
    iactAddrSPad.io.addrIO.readInIdxEn is invalid @[ProcessingElement.scala 186:38]
    iactAddrSPad.io.dataIO.readInIdxEn is invalid @[ProcessingElement.scala 187:26]
    iactAddrSPad.io.dataIO.indexInc is invalid @[ProcessingElement.scala 187:26]
    iactAddrSPad.io.dataIO.readInIdx is invalid @[ProcessingElement.scala 187:26]
    io.dataStream.iactIOs.dataIOs.writeFin <= iactDataSPad.io.commonIO.dataLenFinIO.writeFin @[ProcessingElement.scala 189:41]
    iactDataSPad.io.commonIO.dataLenFinIO.streamLen <= io.dataStream.iactIOs.dataIOs.streamLen @[ProcessingElement.scala 189:41]
    iactDataSPad.io.commonIO.dataLenFinIO.writeInDataIO.bits.data <= io.dataStream.iactIOs.dataIOs.writeInDataIO.bits.data @[ProcessingElement.scala 189:41]
    iactDataSPad.io.commonIO.dataLenFinIO.writeInDataIO.valid <= io.dataStream.iactIOs.dataIOs.writeInDataIO.valid @[ProcessingElement.scala 189:41]
    io.dataStream.iactIOs.dataIOs.writeInDataIO.ready <= iactDataSPad.io.commonIO.dataLenFinIO.writeInDataIO.ready @[ProcessingElement.scala 189:41]
    iactDataIndexWire <= iactDataSPad.io.commonIO.columnNum @[ProcessingElement.scala 190:21]
    node iactDataCountVec_0 = bits(iactDataSPad.io.commonIO.readOutData, 0, 0) @[ProcessingElement.scala 191:74]
    node iactDataCountVec_1 = bits(iactDataSPad.io.commonIO.readOutData, 1, 1) @[ProcessingElement.scala 191:74]
    node iactDataCountVec_2 = bits(iactDataSPad.io.commonIO.readOutData, 2, 2) @[ProcessingElement.scala 191:74]
    node iactDataCountVec_3 = bits(iactDataSPad.io.commonIO.readOutData, 3, 3) @[ProcessingElement.scala 191:74]
    node iactDataCountVec_4 = bits(iactDataSPad.io.commonIO.readOutData, 4, 4) @[ProcessingElement.scala 191:74]
    node iactDataCountVec_5 = bits(iactDataSPad.io.commonIO.readOutData, 5, 5) @[ProcessingElement.scala 191:74]
    node iactDataCountVec_6 = bits(iactDataSPad.io.commonIO.readOutData, 6, 6) @[ProcessingElement.scala 191:74]
    node iactDataCountVec_7 = bits(iactDataSPad.io.commonIO.readOutData, 7, 7) @[ProcessingElement.scala 191:74]
    node iactDataCountVec_8 = bits(iactDataSPad.io.commonIO.readOutData, 8, 8) @[ProcessingElement.scala 191:74]
    node iactDataCountVec_9 = bits(iactDataSPad.io.commonIO.readOutData, 9, 9) @[ProcessingElement.scala 191:74]
    node iactDataCountVec_10 = bits(iactDataSPad.io.commonIO.readOutData, 10, 10) @[ProcessingElement.scala 191:74]
    node iactDataCountVec_11 = bits(iactDataSPad.io.commonIO.readOutData, 11, 11) @[ProcessingElement.scala 191:74]
    node _T_7 = cat(iactDataCountVec_5, iactDataCountVec_4) @[Cat.scala 29:58]
    node _T_8 = cat(iactDataCountVec_7, iactDataCountVec_6) @[Cat.scala 29:58]
    node _T_9 = cat(_T_8, _T_7) @[Cat.scala 29:58]
    node _T_10 = cat(iactDataCountVec_9, iactDataCountVec_8) @[Cat.scala 29:58]
    node _T_11 = cat(iactDataCountVec_11, iactDataCountVec_10) @[Cat.scala 29:58]
    node _T_12 = cat(_T_11, _T_10) @[Cat.scala 29:58]
    node _T_13 = cat(_T_12, _T_9) @[Cat.scala 29:58]
    iactMatrixDataWire <= _T_13 @[ProcessingElement.scala 192:22]
    node _T_14 = cat(iactDataCountVec_1, iactDataCountVec_0) @[Cat.scala 29:58]
    node _T_15 = cat(iactDataCountVec_3, iactDataCountVec_2) @[Cat.scala 29:58]
    node _T_16 = cat(_T_15, _T_14) @[Cat.scala 29:58]
    iactMatrixRowWire <= _T_16 @[ProcessingElement.scala 193:21]
    iactDataSPad.io.commonIO.readEn <= iactDataSPadReadEnReg @[ProcessingElement.scala 194:35]
    iactDataSPad.io.dataIO.indexInc <= iactDataSPadIdxIncWire @[ProcessingElement.scala 195:35]
    iactDataSPad.io.dataIO.readInIdx <= iactAddrDataWire @[ProcessingElement.scala 196:36]
    iactDataSPad.io.dataIO.readInIdxEn is invalid @[ProcessingElement.scala 197:38]
    iactDataSPad.io.addrIO.readInIdxEn is invalid @[ProcessingElement.scala 198:26]
    iactDataSPad.io.addrIO.indexInc is invalid @[ProcessingElement.scala 198:26]
    iactDataSPad.io.addrIO.readInIdx is invalid @[ProcessingElement.scala 198:26]
    io.dataStream.weightIOs.addrIOs.writeFin <= weightAddrSPad.io.commonIO.dataLenFinIO.writeFin @[ProcessingElement.scala 200:43]
    weightAddrSPad.io.commonIO.dataLenFinIO.streamLen <= io.dataStream.weightIOs.addrIOs.streamLen @[ProcessingElement.scala 200:43]
    weightAddrSPad.io.commonIO.dataLenFinIO.writeInDataIO.bits.data <= io.dataStream.weightIOs.addrIOs.writeInDataIO.bits.data @[ProcessingElement.scala 200:43]
    weightAddrSPad.io.commonIO.dataLenFinIO.writeInDataIO.valid <= io.dataStream.weightIOs.addrIOs.writeInDataIO.valid @[ProcessingElement.scala 200:43]
    io.dataStream.weightIOs.addrIOs.writeInDataIO.ready <= weightAddrSPad.io.commonIO.dataLenFinIO.writeInDataIO.ready @[ProcessingElement.scala 200:43]
    weightAddrIndexWire <= weightAddrSPad.io.commonIO.columnNum @[ProcessingElement.scala 201:23]
    weightAddrDataWire <= weightAddrSPad.io.commonIO.readOutData @[ProcessingElement.scala 202:22]
    weightAddrSPad.io.commonIO.readEn <= weightAddrSPadReadEnReg @[ProcessingElement.scala 203:37]
    weightAddrSPad.io.addrIO.readInIdx <= weightAddrSPadReadIdxWire @[ProcessingElement.scala 204:38]
    weightAddrSPad.io.addrIO.indexInc <= weightAddrSPadIdxIncWire @[ProcessingElement.scala 207:37]
    weightAddrSPad.io.addrIO.readInIdxEn <= weightAddrIdxEnWire @[ProcessingElement.scala 208:40]
    weightAddrSPad.io.dataIO.readInIdxEn is invalid @[ProcessingElement.scala 209:28]
    weightAddrSPad.io.dataIO.indexInc is invalid @[ProcessingElement.scala 209:28]
    weightAddrSPad.io.dataIO.readInIdx is invalid @[ProcessingElement.scala 209:28]
    io.dataStream.weightIOs.dataIOs.writeFin <= weightDataSPad.io.commonIO.dataLenFinIO.writeFin @[ProcessingElement.scala 211:43]
    weightDataSPad.io.commonIO.dataLenFinIO.streamLen <= io.dataStream.weightIOs.dataIOs.streamLen @[ProcessingElement.scala 211:43]
    weightDataSPad.io.commonIO.dataLenFinIO.writeInDataIO.bits.data <= io.dataStream.weightIOs.dataIOs.writeInDataIO.bits.data @[ProcessingElement.scala 211:43]
    weightDataSPad.io.commonIO.dataLenFinIO.writeInDataIO.valid <= io.dataStream.weightIOs.dataIOs.writeInDataIO.valid @[ProcessingElement.scala 211:43]
    io.dataStream.weightIOs.dataIOs.writeInDataIO.ready <= weightDataSPad.io.commonIO.dataLenFinIO.writeInDataIO.ready @[ProcessingElement.scala 211:43]
    weightDataIndexWire <= weightDataSPad.io.commonIO.columnNum @[ProcessingElement.scala 212:23]
    node weightDataCountVec_0 = bits(weightDataSPad.io.commonIO.readOutData, 0, 0) @[ProcessingElement.scala 213:78]
    node weightDataCountVec_1 = bits(weightDataSPad.io.commonIO.readOutData, 1, 1) @[ProcessingElement.scala 213:78]
    node weightDataCountVec_2 = bits(weightDataSPad.io.commonIO.readOutData, 2, 2) @[ProcessingElement.scala 213:78]
    node weightDataCountVec_3 = bits(weightDataSPad.io.commonIO.readOutData, 3, 3) @[ProcessingElement.scala 213:78]
    node weightDataCountVec_4 = bits(weightDataSPad.io.commonIO.readOutData, 4, 4) @[ProcessingElement.scala 213:78]
    node weightDataCountVec_5 = bits(weightDataSPad.io.commonIO.readOutData, 5, 5) @[ProcessingElement.scala 213:78]
    node weightDataCountVec_6 = bits(weightDataSPad.io.commonIO.readOutData, 6, 6) @[ProcessingElement.scala 213:78]
    node weightDataCountVec_7 = bits(weightDataSPad.io.commonIO.readOutData, 7, 7) @[ProcessingElement.scala 213:78]
    node weightDataCountVec_8 = bits(weightDataSPad.io.commonIO.readOutData, 8, 8) @[ProcessingElement.scala 213:78]
    node weightDataCountVec_9 = bits(weightDataSPad.io.commonIO.readOutData, 9, 9) @[ProcessingElement.scala 213:78]
    node weightDataCountVec_10 = bits(weightDataSPad.io.commonIO.readOutData, 10, 10) @[ProcessingElement.scala 213:78]
    node weightDataCountVec_11 = bits(weightDataSPad.io.commonIO.readOutData, 11, 11) @[ProcessingElement.scala 213:78]
    node _T_17 = cat(weightDataCountVec_5, weightDataCountVec_4) @[Cat.scala 29:58]
    node _T_18 = cat(weightDataCountVec_7, weightDataCountVec_6) @[Cat.scala 29:58]
    node _T_19 = cat(_T_18, _T_17) @[Cat.scala 29:58]
    node _T_20 = cat(weightDataCountVec_9, weightDataCountVec_8) @[Cat.scala 29:58]
    node _T_21 = cat(weightDataCountVec_11, weightDataCountVec_10) @[Cat.scala 29:58]
    node _T_22 = cat(_T_21, _T_20) @[Cat.scala 29:58]
    node _T_23 = cat(_T_22, _T_19) @[Cat.scala 29:58]
    weightMatrixDataReg <= _T_23 @[ProcessingElement.scala 214:23]
    node _T_24 = cat(weightDataCountVec_1, weightDataCountVec_0) @[Cat.scala 29:58]
    node _T_25 = cat(weightDataCountVec_3, weightDataCountVec_2) @[Cat.scala 29:58]
    node _T_26 = cat(_T_25, _T_24) @[Cat.scala 29:58]
    weightMatrixRowReg <= _T_26 @[ProcessingElement.scala 215:22]
    weightDataSPad.io.commonIO.readEn <= iactDataSPadReadEnReg @[ProcessingElement.scala 216:37]
    node _T_27 = mux(weightMatrixReadFirstColumn, UInt<1>("h00"), weightAddrDataWire) @[ProcessingElement.scala 217:44]
    weightDataSPad.io.dataIO.readInIdx <= _T_27 @[ProcessingElement.scala 217:38]
    weightDataSPad.io.dataIO.indexInc <= weightDataSPadIdxIncWire @[ProcessingElement.scala 218:37]
    weightDataSPad.io.dataIO.readInIdxEn <= weightDataIdxEnWire @[ProcessingElement.scala 219:40]
    weightDataSPad.io.addrIO.readInIdxEn is invalid @[ProcessingElement.scala 220:28]
    weightDataSPad.io.addrIO.indexInc is invalid @[ProcessingElement.scala 220:28]
    weightDataSPad.io.addrIO.readInIdx is invalid @[ProcessingElement.scala 220:28]
    node _T_28 = and(padEqMpy, io.padCtrl.pSumEnqOrProduct.bits) @[ProcessingElement.scala 222:41]
    io.dataStream.ipsIO.ready <= _T_28 @[ProcessingElement.scala 222:29]
    io.dataStream.opsIO.bits <= pSumResultWire @[ProcessingElement.scala 223:28]
    io.dataStream.opsIO.valid <= padEqWB @[ProcessingElement.scala 224:29]
    io.padCtrl.pSumEnqOrProduct.ready <= padEqMpy @[ProcessingElement.scala 226:37]
    node _T_29 = and(iactAddrSPad.io.commonIO.dataLenFinIO.writeFin, iactDataSPad.io.commonIO.dataLenFinIO.writeFin) @[ProcessingElement.scala 227:143]
    node _T_30 = and(_T_29, weightAddrSPad.io.commonIO.dataLenFinIO.writeFin) @[ProcessingElement.scala 227:143]
    node _T_31 = and(_T_30, weightDataSPad.io.commonIO.dataLenFinIO.writeFin) @[ProcessingElement.scala 227:143]
    io.padCtrl.writeFinish <= _T_31 @[ProcessingElement.scala 227:26]
    node _T_32 = add(pSumSPadLoadReg, productReg) @[ProcessingElement.scala 228:50]
    node _T_33 = tail(_T_32, 1) @[ProcessingElement.scala 228:50]
    node _T_34 = mux(padEqWB, _T_33, UInt<1>("h00")) @[ProcessingElement.scala 228:24]
    pSumResultWire <= _T_34 @[ProcessingElement.scala 228:18]
    wire _T_35 : UInt<3>[6] @[ProcessingElement.scala 230:45]
    _T_35[0] <= UInt<3>("h00") @[ProcessingElement.scala 230:45]
    _T_35[1] <= UInt<3>("h00") @[ProcessingElement.scala 230:45]
    _T_35[2] <= UInt<3>("h00") @[ProcessingElement.scala 230:45]
    _T_35[3] <= UInt<3>("h00") @[ProcessingElement.scala 230:45]
    _T_35[4] <= UInt<3>("h00") @[ProcessingElement.scala 230:45]
    _T_35[5] <= UInt<3>("h00") @[ProcessingElement.scala 230:45]
    reg mcrenfReg : UInt<3>[6], clock with : (reset => (reset, _T_35)) @[ProcessingElement.scala 230:37]
    node when_carry_0 = eq(mcrenfReg[0], UInt<3>("h05")) @[ProcessingElement.scala 231:96]
    node when_carry_1 = eq(mcrenfReg[1], UInt<2>("h02")) @[ProcessingElement.scala 231:96]
    node when_carry_2 = eq(mcrenfReg[2], UInt<1>("h01")) @[ProcessingElement.scala 231:96]
    node when_carry_3 = eq(mcrenfReg[3], UInt<1>("h01")) @[ProcessingElement.scala 231:96]
    node when_carry_4 = eq(mcrenfReg[4], UInt<1>("h01")) @[ProcessingElement.scala 231:96]
    node when_carry_5 = eq(mcrenfReg[5], UInt<1>("h01")) @[ProcessingElement.scala 231:96]
    reg pSumResultIdxReg : UInt<20>, clock with : (reset => (reset, UInt<20>("h00"))) @[ProcessingElement.scala 234:39]
    wire mightIactZeroColumnWire : UInt<1> @[ProcessingElement.scala 236:43]
    reg iactSPadZeroColumnReg : UInt<1>, clock with : (reset => (reset, UInt<1>("h00"))) @[ProcessingElement.scala 237:44]
    wire mightIactIdxIncWire : UInt<1> @[ProcessingElement.scala 238:39]
    wire mightWeightZeroColumnWire : UInt<1> @[ProcessingElement.scala 239:45]
    wire mightWeightIdxIncWire : UInt<1> @[ProcessingElement.scala 240:41]
    wire mightIactReadFinish : UInt<1> @[ProcessingElement.scala 241:39]
    wire mightWeightReadFinish : UInt<1> @[ProcessingElement.scala 242:41]
    node _T_36 = eq(iactAddrDataWire, UInt<4>("h0f")) @[ProcessingElement.scala 243:47]
    mightIactZeroColumnWire <= _T_36 @[ProcessingElement.scala 243:27]
    node _T_37 = eq(weightAddrDataWire, UInt<7>("h07f")) @[ProcessingElement.scala 244:51]
    mightWeightZeroColumnWire <= _T_37 @[ProcessingElement.scala 244:29]
    node _T_38 = add(iactDataIndexWire, UInt<1>("h01")) @[ProcessingElement.scala 245:66]
    node _T_39 = tail(_T_38, 1) @[ProcessingElement.scala 245:66]
    node _T_40 = eq(iactAddrDataWire, _T_39) @[ProcessingElement.scala 245:43]
    mightIactIdxIncWire <= _T_40 @[ProcessingElement.scala 245:23]
    node _T_41 = add(weightDataIndexWire, UInt<1>("h01")) @[ProcessingElement.scala 246:72]
    node _T_42 = tail(_T_41, 1) @[ProcessingElement.scala 246:72]
    node _T_43 = eq(weightAddrDataWire, _T_42) @[ProcessingElement.scala 246:47]
    mightWeightIdxIncWire <= _T_43 @[ProcessingElement.scala 246:25]
    node _T_44 = add(iactDataIndexWire, UInt<1>("h01")) @[ProcessingElement.scala 247:45]
    node _T_45 = tail(_T_44, 1) @[ProcessingElement.scala 247:45]
    node _T_46 = eq(_T_45, io.dataStream.iactIOs.dataIOs.streamLen) @[ProcessingElement.scala 247:52]
    mightIactReadFinish <= _T_46 @[ProcessingElement.scala 247:23]
    node _T_47 = add(weightDataIndexWire, UInt<1>("h01")) @[ProcessingElement.scala 248:49]
    node _T_48 = tail(_T_47, 1) @[ProcessingElement.scala 248:49]
    node _T_49 = eq(_T_48, io.dataStream.weightIOs.dataIOs.streamLen) @[ProcessingElement.scala 248:56]
    mightWeightReadFinish <= _T_49 @[ProcessingElement.scala 248:25]
    node _T_50 = and(padEqIA, mightIactZeroColumnWire) @[ProcessingElement.scala 249:38]
    node _T_51 = and(padEqWA, mightWeightZeroColumnWire) @[ProcessingElement.scala 249:80]
    node _T_52 = and(padEqWB, mightWeightIdxIncWire) @[ProcessingElement.scala 249:122]
    node _T_53 = or(_T_51, _T_52) @[ProcessingElement.scala 249:110]
    node _T_54 = and(_T_53, mightIactIdxIncWire) @[ProcessingElement.scala 249:149]
    node _T_55 = or(_T_50, _T_54) @[ProcessingElement.scala 249:66]
    iactAddrSPadIdxIncWire <= _T_55 @[ProcessingElement.scala 249:26]
    node _T_56 = eq(sPad, UInt<3>("h04")) @[ProcessingElement.scala 250:49]
    node _T_57 = or(padEqMpy, _T_56) @[ProcessingElement.scala 250:41]
    node _T_58 = and(_T_57, mightWeightZeroColumnWire) @[ProcessingElement.scala 250:69]
    weightAddrSPadIdxIncWire <= _T_58 @[ProcessingElement.scala 250:28]
    node _T_59 = eq(mightIactZeroColumnWire, UInt<1>("h00")) @[ProcessingElement.scala 251:41]
    node _T_60 = and(padEqIA, _T_59) @[ProcessingElement.scala 251:38]
    node _T_61 = eq(iactDataSPadFirstReadReg, UInt<1>("h00")) @[ProcessingElement.scala 251:69]
    node _T_62 = and(_T_60, _T_61) @[ProcessingElement.scala 251:66]
    node _T_63 = and(padEqWA, mightWeightZeroColumnWire) @[ProcessingElement.scala 251:110]
    node _T_64 = and(padEqWB, mightWeightIdxIncWire) @[ProcessingElement.scala 251:152]
    node _T_65 = or(_T_63, _T_64) @[ProcessingElement.scala 251:140]
    node _T_66 = eq(mightIactIdxIncWire, UInt<1>("h00")) @[ProcessingElement.scala 251:182]
    node _T_67 = and(_T_65, _T_66) @[ProcessingElement.scala 251:179]
    node _T_68 = or(_T_62, _T_67) @[ProcessingElement.scala 251:96]
    iactDataSPadIdxIncWire <= _T_68 @[ProcessingElement.scala 251:26]
    node _T_69 = eq(mightWeightZeroColumnWire, UInt<1>("h00")) @[ProcessingElement.scala 252:43]
    node _T_70 = and(padEqWA, _T_69) @[ProcessingElement.scala 252:40]
    node _T_71 = eq(weightDataSPadFirstRead, UInt<1>("h00")) @[ProcessingElement.scala 252:73]
    node _T_72 = and(_T_70, _T_71) @[ProcessingElement.scala 252:70]
    node _T_73 = eq(mightWeightIdxIncWire, UInt<1>("h00")) @[ProcessingElement.scala 252:114]
    node _T_74 = and(padEqWB, _T_73) @[ProcessingElement.scala 252:111]
    node _T_75 = or(_T_72, _T_74) @[ProcessingElement.scala 252:99]
    weightDataSPadIdxIncWire <= _T_75 @[ProcessingElement.scala 252:28]
    node _T_76 = or(padEqID, padEqWA) @[ProcessingElement.scala 253:35]
    node _T_77 = and(_T_76, weightDataSPadFirstRead) @[ProcessingElement.scala 253:47]
    weightAddrIdxEnWire <= _T_77 @[ProcessingElement.scala 253:23]
    node _T_78 = and(padEqID, weightDataSPadFirstRead) @[ProcessingElement.scala 254:35]
    node _T_79 = eq(weightMatrixReadFirstColumn, UInt<1>("h00")) @[ProcessingElement.scala 254:65]
    node _T_80 = and(_T_78, _T_79) @[ProcessingElement.scala 254:62]
    weightDataIdxMuxWire <= _T_80 @[ProcessingElement.scala 254:24]
    node _T_81 = sub(iactMatrixRowWire, UInt<1>("h01")) @[ProcessingElement.scala 255:76]
    node _T_82 = tail(_T_81, 1) @[ProcessingElement.scala 255:76]
    node _T_83 = mux(weightDataIdxMuxWire, _T_82, iactMatrixRowWire) @[ProcessingElement.scala 255:35]
    weightAddrSPadReadIdxWire <= _T_83 @[ProcessingElement.scala 255:29]
    node _T_84 = and(padEqWA, weightDataSPadFirstRead) @[ProcessingElement.scala 256:34]
    node _T_85 = eq(mightWeightZeroColumnWire, UInt<1>("h00")) @[ProcessingElement.scala 256:64]
    node _T_86 = and(_T_84, _T_85) @[ProcessingElement.scala 256:61]
    weightDataIdxEnWire <= _T_86 @[ProcessingElement.scala 256:23]
    node _T_87 = and(padEqWB, mightIactReadFinish) @[ProcessingElement.scala 257:35]
    node _T_88 = and(_T_87, mightWeightReadFinish) @[ProcessingElement.scala 257:58]
    io.padCtrl.calFinish <= _T_88 @[ProcessingElement.scala 257:24]
    node _T_89 = eq(UInt<3>("h00"), sPad) @[Conditional.scala 37:30]
    when _T_89 : @[Conditional.scala 40:58]
      when io.padCtrl.doMACEn : @[ProcessingElement.scala 260:32]
        sPad <= UInt<3>("h01") @[ProcessingElement.scala 80:10]
        iactAddrSPadReadEnReg <= UInt<1>("h01") @[ProcessingElement.scala 81:27]
        iactDataSPadReadEnReg <= UInt<1>("h00") @[ProcessingElement.scala 82:27]
        weightAddrSPadReadEnReg <= UInt<1>("h00") @[ProcessingElement.scala 83:29]
        weightDataSPadReadEnReg <= UInt<1>("h00") @[ProcessingElement.scala 84:29]
        weightDataSPadFirstRead <= UInt<1>("h01") @[ProcessingElement.scala 85:29]
        iactDataSPadFirstReadReg <= UInt<1>("h01") @[ProcessingElement.scala 262:34]
        skip @[ProcessingElement.scala 260:32]
      skip @[Conditional.scala 40:58]
    else : @[Conditional.scala 39:67]
      node _T_90 = eq(UInt<3>("h01"), sPad) @[Conditional.scala 37:30]
      when _T_90 : @[Conditional.scala 39:67]
        when mightIactZeroColumnWire : @[ProcessingElement.scala 266:38]
          sPad <= UInt<3>("h01") @[ProcessingElement.scala 80:10]
          iactAddrSPadReadEnReg <= UInt<1>("h01") @[ProcessingElement.scala 81:27]
          iactDataSPadReadEnReg <= UInt<1>("h00") @[ProcessingElement.scala 82:27]
          weightAddrSPadReadEnReg <= UInt<1>("h00") @[ProcessingElement.scala 83:29]
          weightDataSPadReadEnReg <= UInt<1>("h00") @[ProcessingElement.scala 84:29]
          weightDataSPadFirstRead <= UInt<1>("h01") @[ProcessingElement.scala 85:29]
          iactSPadZeroColumnReg <= UInt<1>("h01") @[ProcessingElement.scala 268:31]
          node _T_91 = add(iactZeroColumnNumber, UInt<1>("h01")) @[ProcessingElement.scala 269:54]
          node _T_92 = tail(_T_91, 1) @[ProcessingElement.scala 269:54]
          iactZeroColumnNumber <= _T_92 @[ProcessingElement.scala 269:30]
          skip @[ProcessingElement.scala 266:38]
        else : @[ProcessingElement.scala 270:20]
          sPad <= UInt<3>("h02") @[ProcessingElement.scala 88:10]
          iactAddrSPadReadEnReg <= UInt<1>("h00") @[ProcessingElement.scala 89:27]
          iactDataSPadReadEnReg <= UInt<1>("h01") @[ProcessingElement.scala 90:27]
          weightAddrSPadReadEnReg <= UInt<1>("h00") @[ProcessingElement.scala 91:29]
          weightDataSPadReadEnReg <= UInt<1>("h00") @[ProcessingElement.scala 92:29]
          weightDataSPadFirstRead <= UInt<1>("h01") @[ProcessingElement.scala 93:29]
          skip @[ProcessingElement.scala 270:20]
        skip @[Conditional.scala 39:67]
      else : @[Conditional.scala 39:67]
        node _T_93 = eq(UInt<3>("h02"), sPad) @[Conditional.scala 37:30]
        when _T_93 : @[Conditional.scala 39:67]
          sPad <= UInt<3>("h03") @[ProcessingElement.scala 96:10]
          iactAddrSPadReadEnReg <= UInt<1>("h00") @[ProcessingElement.scala 97:27]
          iactDataSPadReadEnReg <= UInt<1>("h00") @[ProcessingElement.scala 98:27]
          weightAddrSPadReadEnReg <= UInt<1>("h01") @[ProcessingElement.scala 99:29]
          weightDataSPadReadEnReg <= UInt<1>("h00") @[ProcessingElement.scala 100:29]
          iactDataSPadFirstReadReg <= UInt<1>("h00") @[ProcessingElement.scala 276:32]
          skip @[Conditional.scala 39:67]
        else : @[Conditional.scala 39:67]
          node _T_94 = eq(UInt<3>("h03"), sPad) @[Conditional.scala 37:30]
          when _T_94 : @[Conditional.scala 39:67]
            when mightWeightZeroColumnWire : @[ProcessingElement.scala 279:40]
              when mightIactIdxIncWire : @[ProcessingElement.scala 280:36]
                sPad <= UInt<3>("h01") @[ProcessingElement.scala 80:10]
                iactAddrSPadReadEnReg <= UInt<1>("h01") @[ProcessingElement.scala 81:27]
                iactDataSPadReadEnReg <= UInt<1>("h00") @[ProcessingElement.scala 82:27]
                weightAddrSPadReadEnReg <= UInt<1>("h00") @[ProcessingElement.scala 83:29]
                weightDataSPadReadEnReg <= UInt<1>("h00") @[ProcessingElement.scala 84:29]
                weightDataSPadFirstRead <= UInt<1>("h01") @[ProcessingElement.scala 85:29]
                when iactSPadZeroColumnReg : @[ProcessingElement.scala 282:40]
                  iactSPadZeroColumnReg <= UInt<1>("h00") @[ProcessingElement.scala 283:35]
                  node _T_95 = add(iactMatrixColumnReg, UInt<1>("h01")) @[ProcessingElement.scala 284:56]
                  node _T_96 = tail(_T_95, 1) @[ProcessingElement.scala 284:56]
                  node _T_97 = add(_T_96, iactZeroColumnNumber) @[ProcessingElement.scala 284:62]
                  node _T_98 = tail(_T_97, 1) @[ProcessingElement.scala 284:62]
                  iactMatrixColumnReg <= _T_98 @[ProcessingElement.scala 284:33]
                  iactZeroColumnNumber <= UInt<1>("h00") @[ProcessingElement.scala 285:34]
                  skip @[ProcessingElement.scala 282:40]
                else : @[ProcessingElement.scala 286:24]
                  node _T_99 = add(iactMatrixColumnReg, UInt<1>("h01")) @[ProcessingElement.scala 287:56]
                  node _T_100 = tail(_T_99, 1) @[ProcessingElement.scala 287:56]
                  iactMatrixColumnReg <= _T_100 @[ProcessingElement.scala 287:33]
                  skip @[ProcessingElement.scala 286:24]
                skip @[ProcessingElement.scala 280:36]
              else : @[ProcessingElement.scala 289:22]
                sPad <= UInt<3>("h02") @[ProcessingElement.scala 88:10]
                iactAddrSPadReadEnReg <= UInt<1>("h00") @[ProcessingElement.scala 89:27]
                iactDataSPadReadEnReg <= UInt<1>("h01") @[ProcessingElement.scala 90:27]
                weightAddrSPadReadEnReg <= UInt<1>("h00") @[ProcessingElement.scala 91:29]
                weightDataSPadReadEnReg <= UInt<1>("h00") @[ProcessingElement.scala 92:29]
                weightDataSPadFirstRead <= UInt<1>("h01") @[ProcessingElement.scala 93:29]
                skip @[ProcessingElement.scala 289:22]
              skip @[ProcessingElement.scala 279:40]
            else : @[ProcessingElement.scala 292:20]
              sPad <= UInt<3>("h04") @[ProcessingElement.scala 103:10]
              iactAddrSPadReadEnReg <= UInt<1>("h00") @[ProcessingElement.scala 104:27]
              iactDataSPadReadEnReg <= UInt<1>("h00") @[ProcessingElement.scala 105:27]
              weightAddrSPadReadEnReg <= UInt<1>("h00") @[ProcessingElement.scala 106:29]
              weightDataSPadReadEnReg <= UInt<1>("h01") @[ProcessingElement.scala 107:29]
              skip @[ProcessingElement.scala 292:20]
            skip @[Conditional.scala 39:67]
          else : @[Conditional.scala 39:67]
            node _T_101 = eq(UInt<3>("h04"), sPad) @[Conditional.scala 37:30]
            when _T_101 : @[Conditional.scala 39:67]
              sPad <= UInt<3>("h05") @[ProcessingElement.scala 297:12]
              skip @[Conditional.scala 39:67]
            else : @[Conditional.scala 39:67]
              node _T_102 = eq(UInt<3>("h05"), sPad) @[Conditional.scala 37:30]
              when _T_102 : @[Conditional.scala 39:67]
                sPad <= UInt<3>("h06") @[ProcessingElement.scala 300:12]
                iactAddrSPadReadEnReg <= UInt<1>("h00") @[ProcessingElement.scala 110:27]
                iactDataSPadReadEnReg <= UInt<1>("h00") @[ProcessingElement.scala 111:27]
                weightAddrSPadReadEnReg <= UInt<1>("h00") @[ProcessingElement.scala 112:29]
                weightDataSPadReadEnReg <= UInt<1>("h00") @[ProcessingElement.scala 113:29]
                skip @[Conditional.scala 39:67]
              else : @[Conditional.scala 39:67]
                node _T_103 = eq(UInt<3>("h06"), sPad) @[Conditional.scala 37:30]
                when _T_103 : @[Conditional.scala 39:67]
                  when io.padCtrl.pSumEnqOrProduct.bits : @[ProcessingElement.scala 304:47]
                    when io.dataStream.ipsIO.valid : @[ProcessingElement.scala 305:42]
                      sPad <= UInt<3>("h07") @[ProcessingElement.scala 306:16]
                      productReg <= io.dataStream.ipsIO.bits @[ProcessingElement.scala 307:22]
                      io.dataStream.ipsIO.ready <= UInt<1>("h01") @[ProcessingElement.scala 308:37]
                      pSumSPadLoadReg <= psDataSPad[weightMatrixRowReg] @[ProcessingElement.scala 309:27]
                      skip @[ProcessingElement.scala 305:42]
                    skip @[ProcessingElement.scala 304:47]
                  else : @[ProcessingElement.scala 311:20]
                    sPad <= UInt<3>("h07") @[ProcessingElement.scala 312:14]
                    node _T_104 = mul(weightMatrixDataReg, iactMatrixDataWire) @[ProcessingElement.scala 313:44]
                    productReg <= _T_104 @[ProcessingElement.scala 313:20]
                    pSumSPadLoadReg <= psDataSPad[weightMatrixRowReg] @[ProcessingElement.scala 314:25]
                    skip @[ProcessingElement.scala 311:20]
                  skip @[Conditional.scala 39:67]
                else : @[Conditional.scala 39:67]
                  node _T_105 = eq(UInt<3>("h07"), sPad) @[Conditional.scala 37:30]
                  when _T_105 : @[Conditional.scala 39:67]
                    psDataSPad[weightMatrixRowReg] <= pSumResultWire @[ProcessingElement.scala 318:38]
                    node _T_106 = and(mightIactReadFinish, mightWeightReadFinish) @[ProcessingElement.scala 319:33]
                    when _T_106 : @[ProcessingElement.scala 319:59]
                      sPad <= UInt<3>("h00") @[ProcessingElement.scala 320:14]
                      iactMatrixColumnReg <= UInt<1>("h00") @[ProcessingElement.scala 321:29]
                      skip @[ProcessingElement.scala 319:59]
                    else : @[ProcessingElement.scala 322:20]
                      when mightWeightIdxIncWire : @[ProcessingElement.scala 323:38]
                        when mightIactIdxIncWire : @[ProcessingElement.scala 324:38]
                          sPad <= UInt<3>("h01") @[ProcessingElement.scala 80:10]
                          iactAddrSPadReadEnReg <= UInt<1>("h01") @[ProcessingElement.scala 81:27]
                          iactDataSPadReadEnReg <= UInt<1>("h00") @[ProcessingElement.scala 82:27]
                          weightAddrSPadReadEnReg <= UInt<1>("h00") @[ProcessingElement.scala 83:29]
                          weightDataSPadReadEnReg <= UInt<1>("h00") @[ProcessingElement.scala 84:29]
                          weightDataSPadFirstRead <= UInt<1>("h01") @[ProcessingElement.scala 85:29]
                          when iactSPadZeroColumnReg : @[ProcessingElement.scala 326:42]
                            iactSPadZeroColumnReg <= UInt<1>("h00") @[ProcessingElement.scala 327:37]
                            node _T_107 = add(iactMatrixColumnReg, UInt<1>("h01")) @[ProcessingElement.scala 328:58]
                            node _T_108 = tail(_T_107, 1) @[ProcessingElement.scala 328:58]
                            node _T_109 = add(_T_108, iactZeroColumnNumber) @[ProcessingElement.scala 328:64]
                            node _T_110 = tail(_T_109, 1) @[ProcessingElement.scala 328:64]
                            iactMatrixColumnReg <= _T_110 @[ProcessingElement.scala 328:35]
                            iactZeroColumnNumber <= UInt<1>("h00") @[ProcessingElement.scala 329:36]
                            skip @[ProcessingElement.scala 326:42]
                          else : @[ProcessingElement.scala 330:26]
                            node _T_111 = add(iactMatrixColumnReg, UInt<1>("h01")) @[ProcessingElement.scala 331:58]
                            node _T_112 = tail(_T_111, 1) @[ProcessingElement.scala 331:58]
                            iactMatrixColumnReg <= _T_112 @[ProcessingElement.scala 331:35]
                            skip @[ProcessingElement.scala 330:26]
                          skip @[ProcessingElement.scala 324:38]
                        else : @[ProcessingElement.scala 333:24]
                          sPad <= UInt<3>("h02") @[ProcessingElement.scala 88:10]
                          iactAddrSPadReadEnReg <= UInt<1>("h00") @[ProcessingElement.scala 89:27]
                          iactDataSPadReadEnReg <= UInt<1>("h01") @[ProcessingElement.scala 90:27]
                          weightAddrSPadReadEnReg <= UInt<1>("h00") @[ProcessingElement.scala 91:29]
                          weightDataSPadReadEnReg <= UInt<1>("h00") @[ProcessingElement.scala 92:29]
                          weightDataSPadFirstRead <= UInt<1>("h01") @[ProcessingElement.scala 93:29]
                          skip @[ProcessingElement.scala 333:24]
                        skip @[ProcessingElement.scala 323:38]
                      else : @[ProcessingElement.scala 336:22]
                        sPad <= UInt<3>("h04") @[ProcessingElement.scala 103:10]
                        iactAddrSPadReadEnReg <= UInt<1>("h00") @[ProcessingElement.scala 104:27]
                        iactDataSPadReadEnReg <= UInt<1>("h00") @[ProcessingElement.scala 105:27]
                        weightAddrSPadReadEnReg <= UInt<1>("h00") @[ProcessingElement.scala 106:29]
                        weightDataSPadReadEnReg <= UInt<1>("h01") @[ProcessingElement.scala 107:29]
                        weightDataSPadFirstRead <= UInt<1>("h00") @[ProcessingElement.scala 338:35]
                        skip @[ProcessingElement.scala 336:22]
                      skip @[ProcessingElement.scala 322:20]
                    skip @[Conditional.scala 39:67]
    io.debugIO.iactMatrixColumn <= iactMatrixColumnReg @[ProcessingElement.scala 344:33]
    io.debugIO.iactMatrixData <= iactMatrixDataWire @[ProcessingElement.scala 345:31]
    io.debugIO.iactMatrixRow <= iactMatrixRowWire @[ProcessingElement.scala 346:30]
    io.debugIO.iactAddrIdx <= iactAddrIndexWire @[ProcessingElement.scala 347:28]
    io.debugIO.iactAddrInc <= iactAddrSPadIdxIncWire @[ProcessingElement.scala 348:28]
    io.debugIO.iactDataInc <= iactDataSPadIdxIncWire @[ProcessingElement.scala 349:28]
    io.debugIO.weightMatrixData <= weightMatrixDataReg @[ProcessingElement.scala 350:33]
    io.debugIO.weightMatrixRow <= weightMatrixRowReg @[ProcessingElement.scala 351:32]
    io.debugIO.weightAddrSPadReadOut <= weightAddrDataWire @[ProcessingElement.scala 352:38]
    io.debugIO.productResult <= productReg @[ProcessingElement.scala 353:30]
    io.debugIO.pSumResult <= pSumResultWire @[ProcessingElement.scala 354:27]
    io.debugIO.pSumLoad <= pSumSPadLoadReg @[ProcessingElement.scala 355:25]
    io.debugIO.weightAddrInIdx <= weightAddrSPadReadIdxWire @[ProcessingElement.scala 356:32]
    io.debugIO.sPadState <= sPad @[ProcessingElement.scala 357:26]
    
