;buildInfoPackage: chisel3, version: 3.3-SNAPSHOT, scalaVersion: 2.12.10, sbtVersion: 1.3.2
circuit ProcessingElementPad : 
  module SPadAddrModule : 
    input clock : Clock
    input reset : Reset
    output io : {commonIO : {columnNum : UInt<4>, readOutData : UInt<4>, flip readEn : UInt<1>, flip writeEn : UInt<1>, writeIdx : UInt<4>, dataLenFinIO : {flip writeInDataIO : {flip ready : UInt<1>, valid : UInt<1>, bits : {data : UInt<4>}}, writeFin : UInt<1>}}, addrIO : {flip readInIdx : UInt<4>, flip indexInc : UInt<1>, flip readInIdxEn : UInt<1>}, dataIO : {flip readInIdx : UInt<4>, flip indexInc : UInt<1>, flip readInIdxEn : UInt<1>}}
    
    wire dataWire : UInt<4> @[SPadModule.scala 79:28]
    reg padWriteIndexReg : UInt<4>, clock with : (reset => (reset, UInt<4>("h00"))) @[SPadModule.scala 80:39]
    reg padReadIndexReg : UInt<4>, clock with : (reset => (reset, UInt<4>("h00"))) @[SPadModule.scala 81:38]
    wire writeWrapWire : UInt<1> @[SPadModule.scala 83:33]
    wire readWrapWire : UInt<1> @[SPadModule.scala 84:32]
    wire readIndexInc : UInt<1> @[SPadModule.scala 85:32]
    node _T = eq(io.commonIO.dataLenFinIO.writeInDataIO.bits.data, UInt<1>("h00")) @[SPadModule.scala 86:46]
    node _T_1 = and(_T, io.commonIO.writeEn) @[SPadModule.scala 86:54]
    writeWrapWire <= _T_1 @[SPadModule.scala 86:17]
    node _T_2 = eq(dataWire, UInt<1>("h00")) @[SPadModule.scala 87:28]
    node _T_3 = and(_T_2, readIndexInc) @[SPadModule.scala 87:36]
    readWrapWire <= _T_3 @[SPadModule.scala 87:16]
    node _T_4 = and(io.commonIO.dataLenFinIO.writeInDataIO.valid, io.commonIO.writeEn) @[SPadModule.scala 89:31]
    when _T_4 : @[SPadModule.scala 89:55]
      io.commonIO.dataLenFinIO.writeInDataIO.ready <= UInt<1>("h01") @[SPadModule.scala 90:27]
      node _T_5 = add(padWriteIndexReg, UInt<1>("h01")) @[SPadModule.scala 91:42]
      node _T_6 = tail(_T_5, 1) @[SPadModule.scala 91:42]
      padWriteIndexReg <= _T_6 @[SPadModule.scala 91:22]
      when writeWrapWire : @[SPadModule.scala 92:26]
        padWriteIndexReg <= UInt<1>("h00") @[SPadModule.scala 93:24]
        skip @[SPadModule.scala 92:26]
      skip @[SPadModule.scala 89:55]
    else : @[SPadModule.scala 95:15]
      io.commonIO.dataLenFinIO.writeInDataIO.ready <= UInt<1>("h00") @[SPadModule.scala 96:27]
      skip @[SPadModule.scala 95:15]
    io.commonIO.writeIdx <= padWriteIndexReg @[SPadModule.scala 99:24]
    io.commonIO.dataLenFinIO.writeFin <= writeWrapWire @[SPadModule.scala 100:37]
    io.commonIO.columnNum <= padReadIndexReg @[SPadModule.scala 101:25]
    wire _T_7 : UInt<4>[9] @[SPadModule.scala 14:44]
    _T_7[0] <= UInt<4>("h00") @[SPadModule.scala 14:44]
    _T_7[1] <= UInt<4>("h00") @[SPadModule.scala 14:44]
    _T_7[2] <= UInt<4>("h00") @[SPadModule.scala 14:44]
    _T_7[3] <= UInt<4>("h00") @[SPadModule.scala 14:44]
    _T_7[4] <= UInt<4>("h00") @[SPadModule.scala 14:44]
    _T_7[5] <= UInt<4>("h00") @[SPadModule.scala 14:44]
    _T_7[6] <= UInt<4>("h00") @[SPadModule.scala 14:44]
    _T_7[7] <= UInt<4>("h00") @[SPadModule.scala 14:44]
    _T_7[8] <= UInt<4>("h00") @[SPadModule.scala 14:44]
    reg addrSPad : UInt<4>[9], clock with : (reset => (reset, _T_7)) @[SPadModule.scala 14:36]
    node _T_8 = and(io.commonIO.dataLenFinIO.writeInDataIO.valid, io.commonIO.writeEn) @[SPadModule.scala 16:31]
    when _T_8 : @[SPadModule.scala 16:55]
      addrSPad[padWriteIndexReg] <= io.commonIO.dataLenFinIO.writeInDataIO.bits.data @[SPadModule.scala 17:32]
      skip @[SPadModule.scala 16:55]
    when readIndexInc : @[SPadModule.scala 20:23]
      node _T_9 = add(padReadIndexReg, UInt<1>("h01")) @[SPadModule.scala 21:40]
      node _T_10 = tail(_T_9, 1) @[SPadModule.scala 21:40]
      padReadIndexReg <= _T_10 @[SPadModule.scala 21:21]
      when readWrapWire : @[SPadModule.scala 22:25]
        padReadIndexReg <= UInt<1>("h00") @[SPadModule.scala 23:23]
        skip @[SPadModule.scala 22:25]
      skip @[SPadModule.scala 20:23]
    dataWire <= addrSPad[padReadIndexReg] @[SPadModule.scala 27:12]
    io.commonIO.readOutData <= dataWire @[SPadModule.scala 28:27]
    readIndexInc <= io.addrIO.indexInc @[SPadModule.scala 29:16]
    
  module SPadDataModule : 
    input clock : Clock
    input reset : Reset
    output io : {commonIO : {columnNum : UInt<4>, readOutData : UInt<12>, flip readEn : UInt<1>, flip writeEn : UInt<1>, writeIdx : UInt<4>, dataLenFinIO : {flip writeInDataIO : {flip ready : UInt<1>, valid : UInt<1>, bits : {data : UInt<12>}}, writeFin : UInt<1>}}, addrIO : {flip readInIdx : UInt<4>, flip indexInc : UInt<1>, flip readInIdxEn : UInt<1>}, dataIO : {flip readInIdx : UInt<4>, flip indexInc : UInt<1>, flip readInIdxEn : UInt<1>}}
    
    wire dataWire : UInt<12> @[SPadModule.scala 79:28]
    reg padWriteIndexReg : UInt<4>, clock with : (reset => (reset, UInt<4>("h00"))) @[SPadModule.scala 80:39]
    reg padReadIndexReg : UInt<4>, clock with : (reset => (reset, UInt<4>("h00"))) @[SPadModule.scala 81:38]
    wire writeWrapWire : UInt<1> @[SPadModule.scala 83:33]
    wire readWrapWire : UInt<1> @[SPadModule.scala 84:32]
    wire readIndexInc : UInt<1> @[SPadModule.scala 85:32]
    node _T = eq(io.commonIO.dataLenFinIO.writeInDataIO.bits.data, UInt<1>("h00")) @[SPadModule.scala 86:46]
    node _T_1 = and(_T, io.commonIO.writeEn) @[SPadModule.scala 86:54]
    writeWrapWire <= _T_1 @[SPadModule.scala 86:17]
    node _T_2 = eq(dataWire, UInt<1>("h00")) @[SPadModule.scala 87:28]
    node _T_3 = and(_T_2, readIndexInc) @[SPadModule.scala 87:36]
    readWrapWire <= _T_3 @[SPadModule.scala 87:16]
    node _T_4 = and(io.commonIO.dataLenFinIO.writeInDataIO.valid, io.commonIO.writeEn) @[SPadModule.scala 89:31]
    when _T_4 : @[SPadModule.scala 89:55]
      io.commonIO.dataLenFinIO.writeInDataIO.ready <= UInt<1>("h01") @[SPadModule.scala 90:27]
      node _T_5 = add(padWriteIndexReg, UInt<1>("h01")) @[SPadModule.scala 91:42]
      node _T_6 = tail(_T_5, 1) @[SPadModule.scala 91:42]
      padWriteIndexReg <= _T_6 @[SPadModule.scala 91:22]
      when writeWrapWire : @[SPadModule.scala 92:26]
        padWriteIndexReg <= UInt<1>("h00") @[SPadModule.scala 93:24]
        skip @[SPadModule.scala 92:26]
      skip @[SPadModule.scala 89:55]
    else : @[SPadModule.scala 95:15]
      io.commonIO.dataLenFinIO.writeInDataIO.ready <= UInt<1>("h00") @[SPadModule.scala 96:27]
      skip @[SPadModule.scala 95:15]
    io.commonIO.writeIdx <= padWriteIndexReg @[SPadModule.scala 99:24]
    io.commonIO.dataLenFinIO.writeFin <= writeWrapWire @[SPadModule.scala 100:37]
    io.commonIO.columnNum <= padReadIndexReg @[SPadModule.scala 101:25]
    wire _T_7 : UInt<12>[16] @[SPadModule.scala 54:46]
    _T_7[0] <= UInt<12>("h00") @[SPadModule.scala 54:46]
    _T_7[1] <= UInt<12>("h00") @[SPadModule.scala 54:46]
    _T_7[2] <= UInt<12>("h00") @[SPadModule.scala 54:46]
    _T_7[3] <= UInt<12>("h00") @[SPadModule.scala 54:46]
    _T_7[4] <= UInt<12>("h00") @[SPadModule.scala 54:46]
    _T_7[5] <= UInt<12>("h00") @[SPadModule.scala 54:46]
    _T_7[6] <= UInt<12>("h00") @[SPadModule.scala 54:46]
    _T_7[7] <= UInt<12>("h00") @[SPadModule.scala 54:46]
    _T_7[8] <= UInt<12>("h00") @[SPadModule.scala 54:46]
    _T_7[9] <= UInt<12>("h00") @[SPadModule.scala 54:46]
    _T_7[10] <= UInt<12>("h00") @[SPadModule.scala 54:46]
    _T_7[11] <= UInt<12>("h00") @[SPadModule.scala 54:46]
    _T_7[12] <= UInt<12>("h00") @[SPadModule.scala 54:46]
    _T_7[13] <= UInt<12>("h00") @[SPadModule.scala 54:46]
    _T_7[14] <= UInt<12>("h00") @[SPadModule.scala 54:46]
    _T_7[15] <= UInt<12>("h00") @[SPadModule.scala 54:46]
    reg _T_8 : UInt<12>[16], clock with : (reset => (reset, _T_7)) @[SPadModule.scala 54:38]
    node _T_9 = and(io.commonIO.dataLenFinIO.writeInDataIO.valid, io.commonIO.writeEn) @[SPadModule.scala 55:33]
    when _T_9 : @[SPadModule.scala 55:57]
      _T_8[padWriteIndexReg] <= io.commonIO.dataLenFinIO.writeInDataIO.bits.data @[SPadModule.scala 56:34]
      skip @[SPadModule.scala 55:57]
    when readIndexInc : @[SPadModule.scala 59:25]
      node _T_10 = add(padReadIndexReg, UInt<1>("h01")) @[SPadModule.scala 60:42]
      node _T_11 = tail(_T_10, 1) @[SPadModule.scala 60:42]
      padReadIndexReg <= _T_11 @[SPadModule.scala 60:23]
      when readWrapWire : @[SPadModule.scala 61:27]
        padReadIndexReg <= UInt<1>("h00") @[SPadModule.scala 62:25]
        skip @[SPadModule.scala 61:27]
      skip @[SPadModule.scala 59:25]
    dataWire <= _T_8[padReadIndexReg] @[SPadModule.scala 66:14]
    readIndexInc <= io.dataIO.indexInc @[SPadModule.scala 68:16]
    io.commonIO.readOutData <= dataWire @[SPadModule.scala 69:27]
    
  module WeightSPadAddrModule : 
    input clock : Clock
    input reset : Reset
    output io : {commonIO : {columnNum : UInt<4>, readOutData : UInt<7>, flip readEn : UInt<1>, flip writeEn : UInt<1>, writeIdx : UInt<4>, dataLenFinIO : {flip writeInDataIO : {flip ready : UInt<1>, valid : UInt<1>, bits : {data : UInt<7>}}, writeFin : UInt<1>}}, addrIO : {flip readInIdx : UInt<4>, flip indexInc : UInt<1>, flip readInIdxEn : UInt<1>}, dataIO : {flip readInIdx : UInt<4>, flip indexInc : UInt<1>, flip readInIdxEn : UInt<1>}}
    
    wire dataWire : UInt<7> @[SPadModule.scala 79:28]
    reg padWriteIndexReg : UInt<4>, clock with : (reset => (reset, UInt<4>("h00"))) @[SPadModule.scala 80:39]
    reg padReadIndexReg : UInt<4>, clock with : (reset => (reset, UInt<4>("h00"))) @[SPadModule.scala 81:38]
    wire writeWrapWire : UInt<1> @[SPadModule.scala 83:33]
    wire readWrapWire : UInt<1> @[SPadModule.scala 84:32]
    wire readIndexInc : UInt<1> @[SPadModule.scala 85:32]
    node _T = eq(io.commonIO.dataLenFinIO.writeInDataIO.bits.data, UInt<1>("h00")) @[SPadModule.scala 86:46]
    node _T_1 = and(_T, io.commonIO.writeEn) @[SPadModule.scala 86:54]
    writeWrapWire <= _T_1 @[SPadModule.scala 86:17]
    node _T_2 = eq(dataWire, UInt<1>("h00")) @[SPadModule.scala 87:28]
    node _T_3 = and(_T_2, readIndexInc) @[SPadModule.scala 87:36]
    readWrapWire <= _T_3 @[SPadModule.scala 87:16]
    node _T_4 = and(io.commonIO.dataLenFinIO.writeInDataIO.valid, io.commonIO.writeEn) @[SPadModule.scala 89:31]
    when _T_4 : @[SPadModule.scala 89:55]
      io.commonIO.dataLenFinIO.writeInDataIO.ready <= UInt<1>("h01") @[SPadModule.scala 90:27]
      node _T_5 = add(padWriteIndexReg, UInt<1>("h01")) @[SPadModule.scala 91:42]
      node _T_6 = tail(_T_5, 1) @[SPadModule.scala 91:42]
      padWriteIndexReg <= _T_6 @[SPadModule.scala 91:22]
      when writeWrapWire : @[SPadModule.scala 92:26]
        padWriteIndexReg <= UInt<1>("h00") @[SPadModule.scala 93:24]
        skip @[SPadModule.scala 92:26]
      skip @[SPadModule.scala 89:55]
    else : @[SPadModule.scala 95:15]
      io.commonIO.dataLenFinIO.writeInDataIO.ready <= UInt<1>("h00") @[SPadModule.scala 96:27]
      skip @[SPadModule.scala 95:15]
    io.commonIO.writeIdx <= padWriteIndexReg @[SPadModule.scala 99:24]
    io.commonIO.dataLenFinIO.writeFin <= writeWrapWire @[SPadModule.scala 100:37]
    io.commonIO.columnNum <= padReadIndexReg @[SPadModule.scala 101:25]
    wire _T_7 : UInt<7>[16] @[SPadModule.scala 14:44]
    _T_7[0] <= UInt<7>("h00") @[SPadModule.scala 14:44]
    _T_7[1] <= UInt<7>("h00") @[SPadModule.scala 14:44]
    _T_7[2] <= UInt<7>("h00") @[SPadModule.scala 14:44]
    _T_7[3] <= UInt<7>("h00") @[SPadModule.scala 14:44]
    _T_7[4] <= UInt<7>("h00") @[SPadModule.scala 14:44]
    _T_7[5] <= UInt<7>("h00") @[SPadModule.scala 14:44]
    _T_7[6] <= UInt<7>("h00") @[SPadModule.scala 14:44]
    _T_7[7] <= UInt<7>("h00") @[SPadModule.scala 14:44]
    _T_7[8] <= UInt<7>("h00") @[SPadModule.scala 14:44]
    _T_7[9] <= UInt<7>("h00") @[SPadModule.scala 14:44]
    _T_7[10] <= UInt<7>("h00") @[SPadModule.scala 14:44]
    _T_7[11] <= UInt<7>("h00") @[SPadModule.scala 14:44]
    _T_7[12] <= UInt<7>("h00") @[SPadModule.scala 14:44]
    _T_7[13] <= UInt<7>("h00") @[SPadModule.scala 14:44]
    _T_7[14] <= UInt<7>("h00") @[SPadModule.scala 14:44]
    _T_7[15] <= UInt<7>("h00") @[SPadModule.scala 14:44]
    reg addrSPad : UInt<7>[16], clock with : (reset => (reset, _T_7)) @[SPadModule.scala 14:36]
    node _T_8 = and(io.commonIO.dataLenFinIO.writeInDataIO.valid, io.commonIO.writeEn) @[SPadModule.scala 16:31]
    when _T_8 : @[SPadModule.scala 16:55]
      addrSPad[padWriteIndexReg] <= io.commonIO.dataLenFinIO.writeInDataIO.bits.data @[SPadModule.scala 17:32]
      skip @[SPadModule.scala 16:55]
    when readIndexInc : @[SPadModule.scala 20:23]
      node _T_9 = add(padReadIndexReg, UInt<1>("h01")) @[SPadModule.scala 21:40]
      node _T_10 = tail(_T_9, 1) @[SPadModule.scala 21:40]
      padReadIndexReg <= _T_10 @[SPadModule.scala 21:21]
      when readWrapWire : @[SPadModule.scala 22:25]
        padReadIndexReg <= UInt<1>("h00") @[SPadModule.scala 23:23]
        skip @[SPadModule.scala 22:25]
      skip @[SPadModule.scala 20:23]
    dataWire <= addrSPad[padReadIndexReg] @[SPadModule.scala 27:12]
    io.commonIO.readOutData <= dataWire @[SPadModule.scala 28:27]
    readIndexInc <= io.addrIO.indexInc @[SPadModule.scala 29:16]
    when io.addrIO.readInIdxEn : @[SPadModule.scala 7:32]
      padReadIndexReg <= io.addrIO.readInIdx @[SPadModule.scala 8:21]
      skip @[SPadModule.scala 7:32]
    
  module SPadDataModule_1 : 
    input clock : Clock
    input reset : Reset
    output io : {commonIO : {columnNum : UInt<8>, readOutData : UInt<12>, flip readEn : UInt<1>, flip writeEn : UInt<1>, writeIdx : UInt<8>, dataLenFinIO : {flip writeInDataIO : {flip ready : UInt<1>, valid : UInt<1>, bits : {data : UInt<12>}}, writeFin : UInt<1>}}, addrIO : {flip readInIdx : UInt<8>, flip indexInc : UInt<1>, flip readInIdxEn : UInt<1>}, dataIO : {flip readInIdx : UInt<8>, flip indexInc : UInt<1>, flip readInIdxEn : UInt<1>}}
    
    wire dataWire : UInt<12> @[SPadModule.scala 79:28]
    reg padWriteIndexReg : UInt<8>, clock with : (reset => (reset, UInt<8>("h00"))) @[SPadModule.scala 80:39]
    reg padReadIndexReg : UInt<8>, clock with : (reset => (reset, UInt<8>("h00"))) @[SPadModule.scala 81:38]
    wire writeWrapWire : UInt<1> @[SPadModule.scala 83:33]
    wire readWrapWire : UInt<1> @[SPadModule.scala 84:32]
    wire readIndexInc : UInt<1> @[SPadModule.scala 85:32]
    node _T = eq(io.commonIO.dataLenFinIO.writeInDataIO.bits.data, UInt<1>("h00")) @[SPadModule.scala 86:46]
    node _T_1 = and(_T, io.commonIO.writeEn) @[SPadModule.scala 86:54]
    writeWrapWire <= _T_1 @[SPadModule.scala 86:17]
    node _T_2 = eq(dataWire, UInt<1>("h00")) @[SPadModule.scala 87:28]
    node _T_3 = and(_T_2, readIndexInc) @[SPadModule.scala 87:36]
    readWrapWire <= _T_3 @[SPadModule.scala 87:16]
    node _T_4 = and(io.commonIO.dataLenFinIO.writeInDataIO.valid, io.commonIO.writeEn) @[SPadModule.scala 89:31]
    when _T_4 : @[SPadModule.scala 89:55]
      io.commonIO.dataLenFinIO.writeInDataIO.ready <= UInt<1>("h01") @[SPadModule.scala 90:27]
      node _T_5 = add(padWriteIndexReg, UInt<1>("h01")) @[SPadModule.scala 91:42]
      node _T_6 = tail(_T_5, 1) @[SPadModule.scala 91:42]
      padWriteIndexReg <= _T_6 @[SPadModule.scala 91:22]
      when writeWrapWire : @[SPadModule.scala 92:26]
        padWriteIndexReg <= UInt<1>("h00") @[SPadModule.scala 93:24]
        skip @[SPadModule.scala 92:26]
      skip @[SPadModule.scala 89:55]
    else : @[SPadModule.scala 95:15]
      io.commonIO.dataLenFinIO.writeInDataIO.ready <= UInt<1>("h00") @[SPadModule.scala 96:27]
      skip @[SPadModule.scala 95:15]
    io.commonIO.writeIdx <= padWriteIndexReg @[SPadModule.scala 99:24]
    io.commonIO.dataLenFinIO.writeFin <= writeWrapWire @[SPadModule.scala 100:37]
    io.commonIO.columnNum <= padReadIndexReg @[SPadModule.scala 101:25]
    smem _T_7 : UInt<12>[192] @[SPadModule.scala 35:50]
    node _T_8 = and(io.commonIO.dataLenFinIO.writeInDataIO.valid, io.commonIO.writeEn) @[SPadModule.scala 37:33]
    when _T_8 : @[SPadModule.scala 37:57]
      write mport _T_9 = _T_7[padWriteIndexReg], clock
      _T_9 <= io.commonIO.dataLenFinIO.writeInDataIO.bits.data
      skip @[SPadModule.scala 37:57]
    when io.dataIO.readInIdxEn : @[SPadModule.scala 41:34]
      padReadIndexReg <= io.dataIO.readInIdx @[SPadModule.scala 42:23]
      skip @[SPadModule.scala 41:34]
    else : @[SPadModule.scala 43:18]
      when readIndexInc : @[SPadModule.scala 44:27]
        node _T_10 = add(padReadIndexReg, UInt<1>("h01")) @[SPadModule.scala 45:44]
        node _T_11 = tail(_T_10, 1) @[SPadModule.scala 45:44]
        padReadIndexReg <= _T_11 @[SPadModule.scala 45:25]
        when readWrapWire : @[SPadModule.scala 46:29]
          padReadIndexReg <= UInt<1>("h00") @[SPadModule.scala 47:27]
          skip @[SPadModule.scala 46:29]
        skip @[SPadModule.scala 44:27]
      skip @[SPadModule.scala 43:18]
    wire _T_12 : UInt @[SPadModule.scala 52:30]
    _T_12 is invalid @[SPadModule.scala 52:30]
    when io.commonIO.readEn : @[SPadModule.scala 52:30]
      _T_12 <= padReadIndexReg @[SPadModule.scala 52:30]
      node _T_13 = or(_T_12, UInt<8>("h00")) @[SPadModule.scala 52:30]
      node _T_14 = bits(_T_13, 7, 0) @[SPadModule.scala 52:30]
      read mport _T_15 = _T_7[_T_14], clock @[SPadModule.scala 52:30]
      skip @[SPadModule.scala 52:30]
    dataWire <= _T_15 @[SPadModule.scala 52:14]
    readIndexInc <= io.dataIO.indexInc @[SPadModule.scala 68:16]
    io.commonIO.readOutData <= dataWire @[SPadModule.scala 69:27]
    
  module ProcessingElementPad : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip padCtrl : {doMACEn : UInt<1>, flip fromTopIO : {flip pSumEnqOrProduct : {flip ready : UInt<1>, valid : UInt<1>, bits : UInt<1>}, flip doLoadEn : UInt<1>, writeFinish : UInt<1>, calFinish : UInt<1>}}, dataStream : {flip ipsIO : {flip ready : UInt<1>, valid : UInt<1>, bits : UInt<20>}, opsIO : {flip ready : UInt<1>, valid : UInt<1>, bits : UInt<20>}, iactIOs : {dataIOs : {flip writeInDataIO : {flip ready : UInt<1>, valid : UInt<1>, bits : {data : UInt<12>}}, writeFin : UInt<1>}, addrIOs : {flip writeInDataIO : {flip ready : UInt<1>, valid : UInt<1>, bits : {data : UInt<4>}}, writeFin : UInt<1>}}, weightIOs : {dataIOs : {flip writeInDataIO : {flip ready : UInt<1>, valid : UInt<1>, bits : {data : UInt<12>}}, writeFin : UInt<1>}, addrIOs : {flip writeInDataIO : {flip ready : UInt<1>, valid : UInt<1>, bits : {data : UInt<7>}}, writeFin : UInt<1>}}}, debugIO : {iactMatrixData : UInt<8>, iactMatrixRow : UInt<4>, iactMatrixColumn : UInt<4>, iactAddrInc : UInt<1>, iactDataInc : UInt<1>, iactAddrIdx : UInt<4>, weightAddrSPadReadOut : UInt<7>, weightMatrixData : UInt<8>, weightMatrixRow : UInt<4>, productResult : UInt<20>, pSumResult : UInt<20>, pSumLoad : UInt<20>, weightAddrInIdx : UInt<4>, sPadState : UInt<3>}}
    
    wire _T : UInt<20>[32] @[ProcessingElement.scala 148:46]
    _T[0] <= UInt<20>("h00") @[ProcessingElement.scala 148:46]
    _T[1] <= UInt<20>("h00") @[ProcessingElement.scala 148:46]
    _T[2] <= UInt<20>("h00") @[ProcessingElement.scala 148:46]
    _T[3] <= UInt<20>("h00") @[ProcessingElement.scala 148:46]
    _T[4] <= UInt<20>("h00") @[ProcessingElement.scala 148:46]
    _T[5] <= UInt<20>("h00") @[ProcessingElement.scala 148:46]
    _T[6] <= UInt<20>("h00") @[ProcessingElement.scala 148:46]
    _T[7] <= UInt<20>("h00") @[ProcessingElement.scala 148:46]
    _T[8] <= UInt<20>("h00") @[ProcessingElement.scala 148:46]
    _T[9] <= UInt<20>("h00") @[ProcessingElement.scala 148:46]
    _T[10] <= UInt<20>("h00") @[ProcessingElement.scala 148:46]
    _T[11] <= UInt<20>("h00") @[ProcessingElement.scala 148:46]
    _T[12] <= UInt<20>("h00") @[ProcessingElement.scala 148:46]
    _T[13] <= UInt<20>("h00") @[ProcessingElement.scala 148:46]
    _T[14] <= UInt<20>("h00") @[ProcessingElement.scala 148:46]
    _T[15] <= UInt<20>("h00") @[ProcessingElement.scala 148:46]
    _T[16] <= UInt<20>("h00") @[ProcessingElement.scala 148:46]
    _T[17] <= UInt<20>("h00") @[ProcessingElement.scala 148:46]
    _T[18] <= UInt<20>("h00") @[ProcessingElement.scala 148:46]
    _T[19] <= UInt<20>("h00") @[ProcessingElement.scala 148:46]
    _T[20] <= UInt<20>("h00") @[ProcessingElement.scala 148:46]
    _T[21] <= UInt<20>("h00") @[ProcessingElement.scala 148:46]
    _T[22] <= UInt<20>("h00") @[ProcessingElement.scala 148:46]
    _T[23] <= UInt<20>("h00") @[ProcessingElement.scala 148:46]
    _T[24] <= UInt<20>("h00") @[ProcessingElement.scala 148:46]
    _T[25] <= UInt<20>("h00") @[ProcessingElement.scala 148:46]
    _T[26] <= UInt<20>("h00") @[ProcessingElement.scala 148:46]
    _T[27] <= UInt<20>("h00") @[ProcessingElement.scala 148:46]
    _T[28] <= UInt<20>("h00") @[ProcessingElement.scala 148:46]
    _T[29] <= UInt<20>("h00") @[ProcessingElement.scala 148:46]
    _T[30] <= UInt<20>("h00") @[ProcessingElement.scala 148:46]
    _T[31] <= UInt<20>("h00") @[ProcessingElement.scala 148:46]
    reg psDataSPad : UInt<20>[32], clock with : (reset => (reset, _T)) @[ProcessingElement.scala 148:38]
    inst SPadSeq_0 of SPadAddrModule @[ProcessingElement.scala 149:44]
    SPadSeq_0.clock <= clock
    SPadSeq_0.reset <= reset
    inst SPadSeq_1 of SPadDataModule @[ProcessingElement.scala 150:44]
    SPadSeq_1.clock <= clock
    SPadSeq_1.reset <= reset
    inst SPadSeq_2 of WeightSPadAddrModule @[ProcessingElement.scala 151:46]
    SPadSeq_2.clock <= clock
    SPadSeq_2.reset <= reset
    inst SPadSeq_3 of SPadDataModule_1 @[ProcessingElement.scala 152:46]
    SPadSeq_3.clock <= clock
    SPadSeq_3.reset <= reset
    wire iactAddrIndexWire : UInt<4> @[ProcessingElement.scala 154:37]
    wire iactAddrDataWire : UInt<4> @[ProcessingElement.scala 155:36]
    wire iactDataIndexWire : UInt<4> @[ProcessingElement.scala 156:37]
    reg iactAddrSPadReadEnReg : UInt<1>, clock with : (reset => (reset, UInt<1>("h00"))) @[ProcessingElement.scala 157:44]
    reg iactDataSPadReadEnReg : UInt<1>, clock with : (reset => (reset, UInt<1>("h00"))) @[ProcessingElement.scala 158:44]
    wire iactAddrSPadIdxIncWire : UInt<1> @[ProcessingElement.scala 159:42]
    wire iactDataSPadIdxIncWire : UInt<1> @[ProcessingElement.scala 160:42]
    reg iactMatrixColumnReg : UInt<4>, clock with : (reset => (reset, UInt<4>("h00"))) @[ProcessingElement.scala 161:42]
    reg iactZeroColumnNumber : UInt<4>, clock with : (reset => (reset, UInt<4>("h00"))) @[ProcessingElement.scala 162:43]
    reg iactDataSPadFirstReadReg : UInt<1>, clock with : (reset => (reset, UInt<1>("h01"))) @[ProcessingElement.scala 163:47]
    wire iactMatrixRowWire : UInt<4> @[ProcessingElement.scala 164:37]
    wire iactMatrixDataWire : UInt<8> @[ProcessingElement.scala 165:38]
    wire weightAddrIndexWire : UInt<4> @[ProcessingElement.scala 167:39]
    wire weightAddrDataWire : UInt<7> @[ProcessingElement.scala 168:38]
    wire weightDataIndexWire : UInt<8> @[ProcessingElement.scala 169:39]
    reg weightAddrSPadReadEnReg : UInt<1>, clock with : (reset => (reset, UInt<1>("h00"))) @[ProcessingElement.scala 170:46]
    reg weightDataSPadReadEnReg : UInt<1>, clock with : (reset => (reset, UInt<1>("h00"))) @[ProcessingElement.scala 171:46]
    wire weightAddrSPadIdxIncWire : UInt<1> @[ProcessingElement.scala 172:44]
    wire weightDataSPadIdxIncWire : UInt<1> @[ProcessingElement.scala 173:44]
    wire weightMatrixDataReg : UInt<8> @[ProcessingElement.scala 174:39]
    reg weightDataSPadFirstRead : UInt<1>, clock with : (reset => (reset, UInt<1>("h01"))) @[ProcessingElement.scala 176:46]
    wire weightDataIdxMuxWire : UInt<1> @[ProcessingElement.scala 177:40]
    wire weightAddrSPadReadIdxWire : UInt<4> @[ProcessingElement.scala 178:45]
    wire weightDataIdxEnWire : UInt<1> @[ProcessingElement.scala 179:39]
    wire weightAddrIdxEnWire : UInt<1> @[ProcessingElement.scala 180:39]
    wire weightMatrixReadFirstColumn : UInt<1> @[ProcessingElement.scala 181:47]
    reg productReg : UInt<20>, clock with : (reset => (reset, UInt<20>("h00"))) @[ProcessingElement.scala 183:33]
    reg pSumSPadLoadReg : UInt<20>, clock with : (reset => (reset, UInt<20>("h00"))) @[ProcessingElement.scala 184:38]
    wire pSumResultWire : UInt<20> @[ProcessingElement.scala 185:34]
    reg sPad : UInt<3>, clock with : (reset => (reset, UInt<3>("h00"))) @[ProcessingElement.scala 196:27]
    wire padEqIA : UInt<1> @[ProcessingElement.scala 197:27]
    wire padEqID : UInt<1> @[ProcessingElement.scala 198:27]
    wire padEqWA : UInt<1> @[ProcessingElement.scala 199:27]
    wire padEqMpy : UInt<1> @[ProcessingElement.scala 200:28]
    wire padEqWB : UInt<1> @[ProcessingElement.scala 201:27]
    node _T_1 = eq(sPad, UInt<3>("h01")) @[ProcessingElement.scala 202:19]
    padEqIA <= _T_1 @[ProcessingElement.scala 202:11]
    node _T_2 = eq(sPad, UInt<3>("h06")) @[ProcessingElement.scala 203:20]
    padEqMpy <= _T_2 @[ProcessingElement.scala 203:12]
    node _T_3 = eq(sPad, UInt<3>("h07")) @[ProcessingElement.scala 204:19]
    padEqWB <= _T_3 @[ProcessingElement.scala 204:11]
    node _T_4 = eq(sPad, UInt<3>("h03")) @[ProcessingElement.scala 205:19]
    padEqWA <= _T_4 @[ProcessingElement.scala 205:11]
    node _T_5 = eq(sPad, UInt<3>("h02")) @[ProcessingElement.scala 206:19]
    padEqID <= _T_5 @[ProcessingElement.scala 206:11]
    node _T_6 = eq(iactMatrixRowWire, UInt<1>("h00")) @[ProcessingElement.scala 207:52]
    weightMatrixReadFirstColumn <= _T_6 @[ProcessingElement.scala 207:31]
    wire weightMatrixRowReg : UInt<4> @[ProcessingElement.scala 208:38]
    SPadSeq_0.io.commonIO.writeEn <= io.padCtrl.fromTopIO.doLoadEn @[ProcessingElement.scala 211:37]
    SPadSeq_1.io.commonIO.writeEn <= io.padCtrl.fromTopIO.doLoadEn @[ProcessingElement.scala 211:37]
    SPadSeq_2.io.commonIO.writeEn <= io.padCtrl.fromTopIO.doLoadEn @[ProcessingElement.scala 211:37]
    SPadSeq_3.io.commonIO.writeEn <= io.padCtrl.fromTopIO.doLoadEn @[ProcessingElement.scala 211:37]
    io.padCtrl.fromTopIO.writeFinish is invalid @[ProcessingElement.scala 212:36]
    io.dataStream.iactIOs.addrIOs.writeFin <= SPadSeq_0.io.commonIO.dataLenFinIO.writeFin @[ProcessingElement.scala 214:41]
    SPadSeq_0.io.commonIO.dataLenFinIO.writeInDataIO.bits.data <= io.dataStream.iactIOs.addrIOs.writeInDataIO.bits.data @[ProcessingElement.scala 214:41]
    SPadSeq_0.io.commonIO.dataLenFinIO.writeInDataIO.valid <= io.dataStream.iactIOs.addrIOs.writeInDataIO.valid @[ProcessingElement.scala 214:41]
    io.dataStream.iactIOs.addrIOs.writeInDataIO.ready <= SPadSeq_0.io.commonIO.dataLenFinIO.writeInDataIO.ready @[ProcessingElement.scala 214:41]
    iactAddrIndexWire <= SPadSeq_0.io.commonIO.columnNum @[ProcessingElement.scala 215:21]
    iactAddrDataWire <= SPadSeq_0.io.commonIO.readOutData @[ProcessingElement.scala 216:20]
    SPadSeq_0.io.commonIO.readEn <= iactAddrSPadReadEnReg @[ProcessingElement.scala 217:35]
    SPadSeq_0.io.addrIO.indexInc <= iactAddrSPadIdxIncWire @[ProcessingElement.scala 218:35]
    SPadSeq_0.io.addrIO.readInIdx is invalid @[ProcessingElement.scala 219:36]
    SPadSeq_0.io.addrIO.readInIdxEn is invalid @[ProcessingElement.scala 220:38]
    SPadSeq_0.io.dataIO.readInIdxEn is invalid @[ProcessingElement.scala 221:26]
    SPadSeq_0.io.dataIO.indexInc is invalid @[ProcessingElement.scala 221:26]
    SPadSeq_0.io.dataIO.readInIdx is invalid @[ProcessingElement.scala 221:26]
    io.dataStream.iactIOs.dataIOs.writeFin <= SPadSeq_1.io.commonIO.dataLenFinIO.writeFin @[ProcessingElement.scala 223:41]
    SPadSeq_1.io.commonIO.dataLenFinIO.writeInDataIO.bits.data <= io.dataStream.iactIOs.dataIOs.writeInDataIO.bits.data @[ProcessingElement.scala 223:41]
    SPadSeq_1.io.commonIO.dataLenFinIO.writeInDataIO.valid <= io.dataStream.iactIOs.dataIOs.writeInDataIO.valid @[ProcessingElement.scala 223:41]
    io.dataStream.iactIOs.dataIOs.writeInDataIO.ready <= SPadSeq_1.io.commonIO.dataLenFinIO.writeInDataIO.ready @[ProcessingElement.scala 223:41]
    iactDataIndexWire <= SPadSeq_1.io.commonIO.columnNum @[ProcessingElement.scala 224:21]
    node iactDataCountVec_0 = bits(SPadSeq_1.io.commonIO.readOutData, 0, 0) @[ProcessingElement.scala 225:74]
    node iactDataCountVec_1 = bits(SPadSeq_1.io.commonIO.readOutData, 1, 1) @[ProcessingElement.scala 225:74]
    node iactDataCountVec_2 = bits(SPadSeq_1.io.commonIO.readOutData, 2, 2) @[ProcessingElement.scala 225:74]
    node iactDataCountVec_3 = bits(SPadSeq_1.io.commonIO.readOutData, 3, 3) @[ProcessingElement.scala 225:74]
    node iactDataCountVec_4 = bits(SPadSeq_1.io.commonIO.readOutData, 4, 4) @[ProcessingElement.scala 225:74]
    node iactDataCountVec_5 = bits(SPadSeq_1.io.commonIO.readOutData, 5, 5) @[ProcessingElement.scala 225:74]
    node iactDataCountVec_6 = bits(SPadSeq_1.io.commonIO.readOutData, 6, 6) @[ProcessingElement.scala 225:74]
    node iactDataCountVec_7 = bits(SPadSeq_1.io.commonIO.readOutData, 7, 7) @[ProcessingElement.scala 225:74]
    node iactDataCountVec_8 = bits(SPadSeq_1.io.commonIO.readOutData, 8, 8) @[ProcessingElement.scala 225:74]
    node iactDataCountVec_9 = bits(SPadSeq_1.io.commonIO.readOutData, 9, 9) @[ProcessingElement.scala 225:74]
    node iactDataCountVec_10 = bits(SPadSeq_1.io.commonIO.readOutData, 10, 10) @[ProcessingElement.scala 225:74]
    node iactDataCountVec_11 = bits(SPadSeq_1.io.commonIO.readOutData, 11, 11) @[ProcessingElement.scala 225:74]
    node _T_7 = cat(iactDataCountVec_5, iactDataCountVec_4) @[Cat.scala 29:58]
    node _T_8 = cat(iactDataCountVec_7, iactDataCountVec_6) @[Cat.scala 29:58]
    node _T_9 = cat(_T_8, _T_7) @[Cat.scala 29:58]
    node _T_10 = cat(iactDataCountVec_9, iactDataCountVec_8) @[Cat.scala 29:58]
    node _T_11 = cat(iactDataCountVec_11, iactDataCountVec_10) @[Cat.scala 29:58]
    node _T_12 = cat(_T_11, _T_10) @[Cat.scala 29:58]
    node _T_13 = cat(_T_12, _T_9) @[Cat.scala 29:58]
    iactMatrixDataWire <= _T_13 @[ProcessingElement.scala 226:22]
    node _T_14 = cat(iactDataCountVec_1, iactDataCountVec_0) @[Cat.scala 29:58]
    node _T_15 = cat(iactDataCountVec_3, iactDataCountVec_2) @[Cat.scala 29:58]
    node _T_16 = cat(_T_15, _T_14) @[Cat.scala 29:58]
    iactMatrixRowWire <= _T_16 @[ProcessingElement.scala 227:21]
    SPadSeq_1.io.commonIO.readEn <= iactDataSPadReadEnReg @[ProcessingElement.scala 228:35]
    SPadSeq_1.io.dataIO.indexInc <= iactDataSPadIdxIncWire @[ProcessingElement.scala 229:35]
    SPadSeq_1.io.dataIO.readInIdx <= iactAddrDataWire @[ProcessingElement.scala 230:36]
    SPadSeq_1.io.dataIO.readInIdxEn is invalid @[ProcessingElement.scala 231:38]
    SPadSeq_1.io.addrIO.readInIdxEn is invalid @[ProcessingElement.scala 232:26]
    SPadSeq_1.io.addrIO.indexInc is invalid @[ProcessingElement.scala 232:26]
    SPadSeq_1.io.addrIO.readInIdx is invalid @[ProcessingElement.scala 232:26]
    io.dataStream.weightIOs.addrIOs.writeFin <= SPadSeq_2.io.commonIO.dataLenFinIO.writeFin @[ProcessingElement.scala 234:43]
    SPadSeq_2.io.commonIO.dataLenFinIO.writeInDataIO.bits.data <= io.dataStream.weightIOs.addrIOs.writeInDataIO.bits.data @[ProcessingElement.scala 234:43]
    SPadSeq_2.io.commonIO.dataLenFinIO.writeInDataIO.valid <= io.dataStream.weightIOs.addrIOs.writeInDataIO.valid @[ProcessingElement.scala 234:43]
    io.dataStream.weightIOs.addrIOs.writeInDataIO.ready <= SPadSeq_2.io.commonIO.dataLenFinIO.writeInDataIO.ready @[ProcessingElement.scala 234:43]
    weightAddrIndexWire <= SPadSeq_2.io.commonIO.columnNum @[ProcessingElement.scala 235:23]
    weightAddrDataWire <= SPadSeq_2.io.commonIO.readOutData @[ProcessingElement.scala 236:22]
    SPadSeq_2.io.commonIO.readEn <= weightAddrSPadReadEnReg @[ProcessingElement.scala 237:37]
    SPadSeq_2.io.addrIO.readInIdx <= weightAddrSPadReadIdxWire @[ProcessingElement.scala 238:38]
    SPadSeq_2.io.addrIO.indexInc <= weightAddrSPadIdxIncWire @[ProcessingElement.scala 241:37]
    SPadSeq_2.io.addrIO.readInIdxEn <= weightAddrIdxEnWire @[ProcessingElement.scala 242:40]
    SPadSeq_2.io.dataIO.readInIdxEn is invalid @[ProcessingElement.scala 243:28]
    SPadSeq_2.io.dataIO.indexInc is invalid @[ProcessingElement.scala 243:28]
    SPadSeq_2.io.dataIO.readInIdx is invalid @[ProcessingElement.scala 243:28]
    io.dataStream.weightIOs.dataIOs.writeFin <= SPadSeq_3.io.commonIO.dataLenFinIO.writeFin @[ProcessingElement.scala 245:43]
    SPadSeq_3.io.commonIO.dataLenFinIO.writeInDataIO.bits.data <= io.dataStream.weightIOs.dataIOs.writeInDataIO.bits.data @[ProcessingElement.scala 245:43]
    SPadSeq_3.io.commonIO.dataLenFinIO.writeInDataIO.valid <= io.dataStream.weightIOs.dataIOs.writeInDataIO.valid @[ProcessingElement.scala 245:43]
    io.dataStream.weightIOs.dataIOs.writeInDataIO.ready <= SPadSeq_3.io.commonIO.dataLenFinIO.writeInDataIO.ready @[ProcessingElement.scala 245:43]
    weightDataIndexWire <= SPadSeq_3.io.commonIO.columnNum @[ProcessingElement.scala 246:23]
    node weightDataCountVec_0 = bits(SPadSeq_3.io.commonIO.readOutData, 0, 0) @[ProcessingElement.scala 247:78]
    node weightDataCountVec_1 = bits(SPadSeq_3.io.commonIO.readOutData, 1, 1) @[ProcessingElement.scala 247:78]
    node weightDataCountVec_2 = bits(SPadSeq_3.io.commonIO.readOutData, 2, 2) @[ProcessingElement.scala 247:78]
    node weightDataCountVec_3 = bits(SPadSeq_3.io.commonIO.readOutData, 3, 3) @[ProcessingElement.scala 247:78]
    node weightDataCountVec_4 = bits(SPadSeq_3.io.commonIO.readOutData, 4, 4) @[ProcessingElement.scala 247:78]
    node weightDataCountVec_5 = bits(SPadSeq_3.io.commonIO.readOutData, 5, 5) @[ProcessingElement.scala 247:78]
    node weightDataCountVec_6 = bits(SPadSeq_3.io.commonIO.readOutData, 6, 6) @[ProcessingElement.scala 247:78]
    node weightDataCountVec_7 = bits(SPadSeq_3.io.commonIO.readOutData, 7, 7) @[ProcessingElement.scala 247:78]
    node weightDataCountVec_8 = bits(SPadSeq_3.io.commonIO.readOutData, 8, 8) @[ProcessingElement.scala 247:78]
    node weightDataCountVec_9 = bits(SPadSeq_3.io.commonIO.readOutData, 9, 9) @[ProcessingElement.scala 247:78]
    node weightDataCountVec_10 = bits(SPadSeq_3.io.commonIO.readOutData, 10, 10) @[ProcessingElement.scala 247:78]
    node weightDataCountVec_11 = bits(SPadSeq_3.io.commonIO.readOutData, 11, 11) @[ProcessingElement.scala 247:78]
    node _T_17 = cat(weightDataCountVec_5, weightDataCountVec_4) @[Cat.scala 29:58]
    node _T_18 = cat(weightDataCountVec_7, weightDataCountVec_6) @[Cat.scala 29:58]
    node _T_19 = cat(_T_18, _T_17) @[Cat.scala 29:58]
    node _T_20 = cat(weightDataCountVec_9, weightDataCountVec_8) @[Cat.scala 29:58]
    node _T_21 = cat(weightDataCountVec_11, weightDataCountVec_10) @[Cat.scala 29:58]
    node _T_22 = cat(_T_21, _T_20) @[Cat.scala 29:58]
    node _T_23 = cat(_T_22, _T_19) @[Cat.scala 29:58]
    weightMatrixDataReg <= _T_23 @[ProcessingElement.scala 248:23]
    node _T_24 = cat(weightDataCountVec_1, weightDataCountVec_0) @[Cat.scala 29:58]
    node _T_25 = cat(weightDataCountVec_3, weightDataCountVec_2) @[Cat.scala 29:58]
    node _T_26 = cat(_T_25, _T_24) @[Cat.scala 29:58]
    weightMatrixRowReg <= _T_26 @[ProcessingElement.scala 249:22]
    SPadSeq_3.io.commonIO.readEn <= iactDataSPadReadEnReg @[ProcessingElement.scala 250:37]
    node _T_27 = mux(weightMatrixReadFirstColumn, UInt<1>("h00"), weightAddrDataWire) @[ProcessingElement.scala 251:44]
    SPadSeq_3.io.dataIO.readInIdx <= _T_27 @[ProcessingElement.scala 251:38]
    SPadSeq_3.io.dataIO.indexInc <= weightDataSPadIdxIncWire @[ProcessingElement.scala 252:37]
    SPadSeq_3.io.dataIO.readInIdxEn <= weightDataIdxEnWire @[ProcessingElement.scala 253:40]
    SPadSeq_3.io.addrIO.readInIdxEn is invalid @[ProcessingElement.scala 254:28]
    SPadSeq_3.io.addrIO.indexInc is invalid @[ProcessingElement.scala 254:28]
    SPadSeq_3.io.addrIO.readInIdx is invalid @[ProcessingElement.scala 254:28]
    node _T_28 = and(padEqMpy, io.padCtrl.fromTopIO.pSumEnqOrProduct.bits) @[ProcessingElement.scala 256:41]
    io.dataStream.ipsIO.ready <= _T_28 @[ProcessingElement.scala 256:29]
    reg value : UInt<5>, clock with : (reset => (reset, UInt<5>("h00"))) @[Counter.scala 29:33]
    node _T_29 = and(io.padCtrl.fromTopIO.doLoadEn, io.dataStream.opsIO.ready) @[ProcessingElement.scala 258:39]
    when _T_29 : @[ProcessingElement.scala 258:69]
      io.dataStream.opsIO.bits <= psDataSPad[value] @[ProcessingElement.scala 259:30]
      io.dataStream.opsIO.valid <= UInt<1>("h01") @[ProcessingElement.scala 260:31]
      node _T_30 = eq(value, UInt<5>("h018")) @[Counter.scala 37:24]
      node _T_31 = add(value, UInt<1>("h01")) @[Counter.scala 38:22]
      node _T_32 = tail(_T_31, 1) @[Counter.scala 38:22]
      value <= _T_32 @[Counter.scala 38:13]
      when _T_30 : @[Counter.scala 40:21]
        value <= UInt<1>("h00") @[Counter.scala 40:29]
        skip @[Counter.scala 40:21]
      skip @[ProcessingElement.scala 258:69]
    else : @[ProcessingElement.scala 262:16]
      io.dataStream.opsIO.valid <= UInt<1>("h00") @[ProcessingElement.scala 263:31]
      io.dataStream.opsIO.bits is invalid @[ProcessingElement.scala 264:30]
      skip @[ProcessingElement.scala 262:16]
    io.padCtrl.fromTopIO.pSumEnqOrProduct.ready <= padEqMpy @[ProcessingElement.scala 267:47]
    node _T_33 = add(pSumSPadLoadReg, productReg) @[ProcessingElement.scala 268:50]
    node _T_34 = tail(_T_33, 1) @[ProcessingElement.scala 268:50]
    node _T_35 = mux(padEqWB, _T_34, UInt<1>("h00")) @[ProcessingElement.scala 268:24]
    pSumResultWire <= _T_35 @[ProcessingElement.scala 268:18]
    reg pSumResultIdxReg : UInt<20>, clock with : (reset => (reset, UInt<20>("h00"))) @[ProcessingElement.scala 274:39]
    wire mightIactZeroColumnWire : UInt<1> @[ProcessingElement.scala 276:43]
    reg iactSPadZeroColumnReg : UInt<1>, clock with : (reset => (reset, UInt<1>("h00"))) @[ProcessingElement.scala 277:44]
    wire mightIactIdxIncWire : UInt<1> @[ProcessingElement.scala 278:39]
    wire mightWeightZeroColumnWire : UInt<1> @[ProcessingElement.scala 279:45]
    wire mightWeightIdxIncWire : UInt<1> @[ProcessingElement.scala 280:41]
    wire mightIactReadFinish : UInt<1> @[ProcessingElement.scala 281:39]
    wire mightWeightReadFinish : UInt<1> @[ProcessingElement.scala 282:41]
    wire psDataSpadIdxWire : UInt<5> @[ProcessingElement.scala 283:37]
    node _T_36 = eq(iactAddrDataWire, UInt<4>("h0f")) @[ProcessingElement.scala 284:47]
    mightIactZeroColumnWire <= _T_36 @[ProcessingElement.scala 284:27]
    node _T_37 = eq(weightAddrDataWire, UInt<7>("h07f")) @[ProcessingElement.scala 285:51]
    mightWeightZeroColumnWire <= _T_37 @[ProcessingElement.scala 285:29]
    node _T_38 = add(iactDataIndexWire, UInt<1>("h01")) @[ProcessingElement.scala 286:66]
    node _T_39 = tail(_T_38, 1) @[ProcessingElement.scala 286:66]
    node _T_40 = eq(iactAddrDataWire, _T_39) @[ProcessingElement.scala 286:43]
    mightIactIdxIncWire <= _T_40 @[ProcessingElement.scala 286:23]
    node _T_41 = add(weightDataIndexWire, UInt<1>("h01")) @[ProcessingElement.scala 287:72]
    node _T_42 = tail(_T_41, 1) @[ProcessingElement.scala 287:72]
    node _T_43 = eq(weightAddrDataWire, _T_42) @[ProcessingElement.scala 287:47]
    mightWeightIdxIncWire <= _T_43 @[ProcessingElement.scala 287:25]
    node _T_44 = eq(iactMatrixDataWire, UInt<1>("h00")) @[ProcessingElement.scala 288:45]
    node _T_45 = eq(iactDataSPadFirstReadReg, UInt<1>("h00")) @[ProcessingElement.scala 288:56]
    node _T_46 = and(_T_44, _T_45) @[ProcessingElement.scala 288:53]
    mightIactReadFinish <= _T_46 @[ProcessingElement.scala 288:23]
    node _T_47 = eq(weightMatrixDataReg, UInt<1>("h00")) @[ProcessingElement.scala 289:48]
    node _T_48 = eq(weightDataSPadFirstRead, UInt<1>("h00")) @[ProcessingElement.scala 289:59]
    node _T_49 = and(_T_47, _T_48) @[ProcessingElement.scala 289:56]
    mightWeightReadFinish <= _T_49 @[ProcessingElement.scala 289:25]
    node _T_50 = and(padEqIA, mightIactZeroColumnWire) @[ProcessingElement.scala 290:38]
    node _T_51 = and(padEqWA, mightWeightZeroColumnWire) @[ProcessingElement.scala 290:80]
    node _T_52 = and(padEqWB, mightWeightIdxIncWire) @[ProcessingElement.scala 290:122]
    node _T_53 = or(_T_51, _T_52) @[ProcessingElement.scala 290:110]
    node _T_54 = and(_T_53, mightIactIdxIncWire) @[ProcessingElement.scala 290:149]
    node _T_55 = or(_T_50, _T_54) @[ProcessingElement.scala 290:66]
    iactAddrSPadIdxIncWire <= _T_55 @[ProcessingElement.scala 290:26]
    node _T_56 = eq(sPad, UInt<3>("h04")) @[ProcessingElement.scala 291:49]
    node _T_57 = or(padEqMpy, _T_56) @[ProcessingElement.scala 291:41]
    node _T_58 = and(_T_57, mightWeightZeroColumnWire) @[ProcessingElement.scala 291:69]
    weightAddrSPadIdxIncWire <= _T_58 @[ProcessingElement.scala 291:28]
    node _T_59 = eq(mightIactZeroColumnWire, UInt<1>("h00")) @[ProcessingElement.scala 293:41]
    node _T_60 = and(padEqIA, _T_59) @[ProcessingElement.scala 293:38]
    node _T_61 = eq(iactDataSPadFirstReadReg, UInt<1>("h00")) @[ProcessingElement.scala 293:69]
    node _T_62 = and(_T_60, _T_61) @[ProcessingElement.scala 293:66]
    node _T_63 = and(padEqWA, mightWeightZeroColumnWire) @[ProcessingElement.scala 293:110]
    node _T_64 = and(padEqWB, mightWeightIdxIncWire) @[ProcessingElement.scala 293:152]
    node _T_65 = or(_T_63, _T_64) @[ProcessingElement.scala 293:140]
    node _T_66 = eq(mightIactIdxIncWire, UInt<1>("h00")) @[ProcessingElement.scala 293:182]
    node _T_67 = and(_T_65, _T_66) @[ProcessingElement.scala 293:179]
    node _T_68 = or(_T_62, _T_67) @[ProcessingElement.scala 293:96]
    iactDataSPadIdxIncWire <= _T_68 @[ProcessingElement.scala 293:26]
    node _T_69 = eq(mightWeightZeroColumnWire, UInt<1>("h00")) @[ProcessingElement.scala 294:43]
    node _T_70 = and(padEqWA, _T_69) @[ProcessingElement.scala 294:40]
    node _T_71 = eq(weightDataSPadFirstRead, UInt<1>("h00")) @[ProcessingElement.scala 294:73]
    node _T_72 = and(_T_70, _T_71) @[ProcessingElement.scala 294:70]
    node _T_73 = eq(mightWeightIdxIncWire, UInt<1>("h00")) @[ProcessingElement.scala 294:114]
    node _T_74 = and(padEqWB, _T_73) @[ProcessingElement.scala 294:111]
    node _T_75 = or(_T_72, _T_74) @[ProcessingElement.scala 294:99]
    weightDataSPadIdxIncWire <= _T_75 @[ProcessingElement.scala 294:28]
    node _T_76 = or(padEqID, padEqWA) @[ProcessingElement.scala 295:35]
    node _T_77 = and(_T_76, weightDataSPadFirstRead) @[ProcessingElement.scala 295:47]
    weightAddrIdxEnWire <= _T_77 @[ProcessingElement.scala 295:23]
    node _T_78 = and(padEqID, weightDataSPadFirstRead) @[ProcessingElement.scala 296:35]
    node _T_79 = eq(weightMatrixReadFirstColumn, UInt<1>("h00")) @[ProcessingElement.scala 296:65]
    node _T_80 = and(_T_78, _T_79) @[ProcessingElement.scala 296:62]
    weightDataIdxMuxWire <= _T_80 @[ProcessingElement.scala 296:24]
    node _T_81 = sub(iactMatrixRowWire, UInt<1>("h01")) @[ProcessingElement.scala 297:76]
    node _T_82 = tail(_T_81, 1) @[ProcessingElement.scala 297:76]
    node _T_83 = mux(weightDataIdxMuxWire, _T_82, iactMatrixRowWire) @[ProcessingElement.scala 297:35]
    weightAddrSPadReadIdxWire <= _T_83 @[ProcessingElement.scala 297:29]
    node _T_84 = and(padEqWA, weightDataSPadFirstRead) @[ProcessingElement.scala 298:34]
    node _T_85 = eq(mightWeightZeroColumnWire, UInt<1>("h00")) @[ProcessingElement.scala 298:64]
    node _T_86 = and(_T_84, _T_85) @[ProcessingElement.scala 298:61]
    weightDataIdxEnWire <= _T_86 @[ProcessingElement.scala 298:23]
    io.padCtrl.fromTopIO.calFinish <= mightIactReadFinish @[ProcessingElement.scala 299:34]
    node _T_87 = mul(iactMatrixColumnReg, UInt<3>("h04")) @[ProcessingElement.scala 300:64]
    node _T_88 = add(weightMatrixRowReg, _T_87) @[ProcessingElement.scala 300:43]
    node _T_89 = tail(_T_88, 1) @[ProcessingElement.scala 300:43]
    psDataSpadIdxWire <= _T_89 @[ProcessingElement.scala 300:21]
    node _T_90 = eq(UInt<3>("h00"), sPad) @[Conditional.scala 37:30]
    when _T_90 : @[Conditional.scala 40:58]
      when io.padCtrl.doMACEn : @[ProcessingElement.scala 303:32]
        sPad <= UInt<3>("h01") @[ProcessingElement.scala 108:10]
        iactAddrSPadReadEnReg <= UInt<1>("h01") @[ProcessingElement.scala 109:27]
        iactDataSPadReadEnReg <= UInt<1>("h00") @[ProcessingElement.scala 110:27]
        weightAddrSPadReadEnReg <= UInt<1>("h00") @[ProcessingElement.scala 111:29]
        weightDataSPadReadEnReg <= UInt<1>("h00") @[ProcessingElement.scala 112:29]
        weightDataSPadFirstRead <= UInt<1>("h01") @[ProcessingElement.scala 113:29]
        iactDataSPadFirstReadReg <= UInt<1>("h01") @[ProcessingElement.scala 305:34]
        skip @[ProcessingElement.scala 303:32]
      skip @[Conditional.scala 40:58]
    else : @[Conditional.scala 39:67]
      node _T_91 = eq(UInt<3>("h01"), sPad) @[Conditional.scala 37:30]
      when _T_91 : @[Conditional.scala 39:67]
        when mightIactZeroColumnWire : @[ProcessingElement.scala 309:38]
          sPad <= UInt<3>("h01") @[ProcessingElement.scala 108:10]
          iactAddrSPadReadEnReg <= UInt<1>("h01") @[ProcessingElement.scala 109:27]
          iactDataSPadReadEnReg <= UInt<1>("h00") @[ProcessingElement.scala 110:27]
          weightAddrSPadReadEnReg <= UInt<1>("h00") @[ProcessingElement.scala 111:29]
          weightDataSPadReadEnReg <= UInt<1>("h00") @[ProcessingElement.scala 112:29]
          weightDataSPadFirstRead <= UInt<1>("h01") @[ProcessingElement.scala 113:29]
          iactSPadZeroColumnReg <= UInt<1>("h01") @[ProcessingElement.scala 311:31]
          node _T_92 = add(iactZeroColumnNumber, UInt<1>("h01")) @[ProcessingElement.scala 312:54]
          node _T_93 = tail(_T_92, 1) @[ProcessingElement.scala 312:54]
          iactZeroColumnNumber <= _T_93 @[ProcessingElement.scala 312:30]
          skip @[ProcessingElement.scala 309:38]
        else : @[ProcessingElement.scala 313:20]
          sPad <= UInt<3>("h02") @[ProcessingElement.scala 116:10]
          iactAddrSPadReadEnReg <= UInt<1>("h00") @[ProcessingElement.scala 117:27]
          iactDataSPadReadEnReg <= UInt<1>("h01") @[ProcessingElement.scala 118:27]
          weightAddrSPadReadEnReg <= UInt<1>("h00") @[ProcessingElement.scala 119:29]
          weightDataSPadReadEnReg <= UInt<1>("h00") @[ProcessingElement.scala 120:29]
          weightDataSPadFirstRead <= UInt<1>("h01") @[ProcessingElement.scala 121:29]
          skip @[ProcessingElement.scala 313:20]
        skip @[Conditional.scala 39:67]
      else : @[Conditional.scala 39:67]
        node _T_94 = eq(UInt<3>("h02"), sPad) @[Conditional.scala 37:30]
        when _T_94 : @[Conditional.scala 39:67]
          when mightIactReadFinish : @[ProcessingElement.scala 318:34]
            sPad <= UInt<3>("h00") @[ProcessingElement.scala 144:10]
            iactMatrixColumnReg <= UInt<1>("h00") @[ProcessingElement.scala 145:25]
            value <= UInt<1>("h00") @[ProcessingElement.scala 146:31]
            skip @[ProcessingElement.scala 318:34]
          else : @[ProcessingElement.scala 320:20]
            sPad <= UInt<3>("h03") @[ProcessingElement.scala 124:10]
            iactAddrSPadReadEnReg <= UInt<1>("h00") @[ProcessingElement.scala 125:27]
            iactDataSPadReadEnReg <= UInt<1>("h00") @[ProcessingElement.scala 126:27]
            weightAddrSPadReadEnReg <= UInt<1>("h01") @[ProcessingElement.scala 127:29]
            weightDataSPadReadEnReg <= UInt<1>("h00") @[ProcessingElement.scala 128:29]
            iactDataSPadFirstReadReg <= UInt<1>("h00") @[ProcessingElement.scala 322:34]
            skip @[ProcessingElement.scala 320:20]
          skip @[Conditional.scala 39:67]
        else : @[Conditional.scala 39:67]
          node _T_95 = eq(UInt<3>("h03"), sPad) @[Conditional.scala 37:30]
          when _T_95 : @[Conditional.scala 39:67]
            when mightWeightZeroColumnWire : @[ProcessingElement.scala 326:40]
              when mightIactIdxIncWire : @[ProcessingElement.scala 327:36]
                sPad <= UInt<3>("h01") @[ProcessingElement.scala 108:10]
                iactAddrSPadReadEnReg <= UInt<1>("h01") @[ProcessingElement.scala 109:27]
                iactDataSPadReadEnReg <= UInt<1>("h00") @[ProcessingElement.scala 110:27]
                weightAddrSPadReadEnReg <= UInt<1>("h00") @[ProcessingElement.scala 111:29]
                weightDataSPadReadEnReg <= UInt<1>("h00") @[ProcessingElement.scala 112:29]
                weightDataSPadFirstRead <= UInt<1>("h01") @[ProcessingElement.scala 113:29]
                when iactSPadZeroColumnReg : @[ProcessingElement.scala 329:40]
                  iactSPadZeroColumnReg <= UInt<1>("h00") @[ProcessingElement.scala 330:35]
                  node _T_96 = add(iactMatrixColumnReg, UInt<1>("h01")) @[ProcessingElement.scala 331:56]
                  node _T_97 = tail(_T_96, 1) @[ProcessingElement.scala 331:56]
                  node _T_98 = add(_T_97, iactZeroColumnNumber) @[ProcessingElement.scala 331:62]
                  node _T_99 = tail(_T_98, 1) @[ProcessingElement.scala 331:62]
                  iactMatrixColumnReg <= _T_99 @[ProcessingElement.scala 331:33]
                  iactZeroColumnNumber <= UInt<1>("h00") @[ProcessingElement.scala 332:34]
                  skip @[ProcessingElement.scala 329:40]
                else : @[ProcessingElement.scala 333:24]
                  node _T_100 = add(iactMatrixColumnReg, UInt<1>("h01")) @[ProcessingElement.scala 334:56]
                  node _T_101 = tail(_T_100, 1) @[ProcessingElement.scala 334:56]
                  iactMatrixColumnReg <= _T_101 @[ProcessingElement.scala 334:33]
                  skip @[ProcessingElement.scala 333:24]
                skip @[ProcessingElement.scala 327:36]
              else : @[ProcessingElement.scala 336:22]
                sPad <= UInt<3>("h02") @[ProcessingElement.scala 116:10]
                iactAddrSPadReadEnReg <= UInt<1>("h00") @[ProcessingElement.scala 117:27]
                iactDataSPadReadEnReg <= UInt<1>("h01") @[ProcessingElement.scala 118:27]
                weightAddrSPadReadEnReg <= UInt<1>("h00") @[ProcessingElement.scala 119:29]
                weightDataSPadReadEnReg <= UInt<1>("h00") @[ProcessingElement.scala 120:29]
                weightDataSPadFirstRead <= UInt<1>("h01") @[ProcessingElement.scala 121:29]
                skip @[ProcessingElement.scala 336:22]
              skip @[ProcessingElement.scala 326:40]
            else : @[ProcessingElement.scala 339:20]
              sPad <= UInt<3>("h04") @[ProcessingElement.scala 131:10]
              iactAddrSPadReadEnReg <= UInt<1>("h00") @[ProcessingElement.scala 132:27]
              iactDataSPadReadEnReg <= UInt<1>("h00") @[ProcessingElement.scala 133:27]
              weightAddrSPadReadEnReg <= UInt<1>("h00") @[ProcessingElement.scala 134:29]
              weightDataSPadReadEnReg <= UInt<1>("h01") @[ProcessingElement.scala 135:29]
              skip @[ProcessingElement.scala 339:20]
            skip @[Conditional.scala 39:67]
          else : @[Conditional.scala 39:67]
            node _T_102 = eq(UInt<3>("h04"), sPad) @[Conditional.scala 37:30]
            when _T_102 : @[Conditional.scala 39:67]
              sPad <= UInt<3>("h05") @[ProcessingElement.scala 344:12]
              skip @[Conditional.scala 39:67]
            else : @[Conditional.scala 39:67]
              node _T_103 = eq(UInt<3>("h05"), sPad) @[Conditional.scala 37:30]
              when _T_103 : @[Conditional.scala 39:67]
                sPad <= UInt<3>("h06") @[ProcessingElement.scala 347:12]
                value <= psDataSpadIdxWire @[ProcessingElement.scala 348:33]
                iactAddrSPadReadEnReg <= UInt<1>("h00") @[ProcessingElement.scala 138:27]
                iactDataSPadReadEnReg <= UInt<1>("h00") @[ProcessingElement.scala 139:27]
                weightAddrSPadReadEnReg <= UInt<1>("h00") @[ProcessingElement.scala 140:29]
                weightDataSPadReadEnReg <= UInt<1>("h00") @[ProcessingElement.scala 141:29]
                skip @[Conditional.scala 39:67]
              else : @[Conditional.scala 39:67]
                node _T_104 = eq(UInt<3>("h06"), sPad) @[Conditional.scala 37:30]
                when _T_104 : @[Conditional.scala 39:67]
                  when io.padCtrl.fromTopIO.pSumEnqOrProduct.bits : @[ProcessingElement.scala 352:57]
                    when io.dataStream.ipsIO.valid : @[ProcessingElement.scala 353:42]
                      sPad <= UInt<3>("h07") @[ProcessingElement.scala 354:16]
                      productReg <= io.dataStream.ipsIO.bits @[ProcessingElement.scala 355:22]
                      io.dataStream.ipsIO.ready <= UInt<1>("h01") @[ProcessingElement.scala 356:37]
                      pSumSPadLoadReg <= psDataSPad[value] @[ProcessingElement.scala 357:27]
                      skip @[ProcessingElement.scala 353:42]
                    skip @[ProcessingElement.scala 352:57]
                  else : @[ProcessingElement.scala 359:20]
                    sPad <= UInt<3>("h07") @[ProcessingElement.scala 360:14]
                    node _T_105 = mul(weightMatrixDataReg, iactMatrixDataWire) @[ProcessingElement.scala 361:44]
                    productReg <= _T_105 @[ProcessingElement.scala 361:20]
                    pSumSPadLoadReg <= psDataSPad[value] @[ProcessingElement.scala 362:25]
                    skip @[ProcessingElement.scala 359:20]
                  skip @[Conditional.scala 39:67]
                else : @[Conditional.scala 39:67]
                  node _T_106 = eq(UInt<3>("h07"), sPad) @[Conditional.scala 37:30]
                  when _T_106 : @[Conditional.scala 39:67]
                    psDataSPad[psDataSpadIdxWire] <= pSumResultWire @[ProcessingElement.scala 366:37]
                    when mightIactReadFinish : @[ProcessingElement.scala 367:34]
                      sPad <= UInt<3>("h00") @[ProcessingElement.scala 144:10]
                      iactMatrixColumnReg <= UInt<1>("h00") @[ProcessingElement.scala 145:25]
                      value <= UInt<1>("h00") @[ProcessingElement.scala 146:31]
                      skip @[ProcessingElement.scala 367:34]
                    else : @[ProcessingElement.scala 369:20]
                      when mightWeightIdxIncWire : @[ProcessingElement.scala 370:38]
                        when mightIactIdxIncWire : @[ProcessingElement.scala 371:38]
                          sPad <= UInt<3>("h01") @[ProcessingElement.scala 108:10]
                          iactAddrSPadReadEnReg <= UInt<1>("h01") @[ProcessingElement.scala 109:27]
                          iactDataSPadReadEnReg <= UInt<1>("h00") @[ProcessingElement.scala 110:27]
                          weightAddrSPadReadEnReg <= UInt<1>("h00") @[ProcessingElement.scala 111:29]
                          weightDataSPadReadEnReg <= UInt<1>("h00") @[ProcessingElement.scala 112:29]
                          weightDataSPadFirstRead <= UInt<1>("h01") @[ProcessingElement.scala 113:29]
                          when iactSPadZeroColumnReg : @[ProcessingElement.scala 373:42]
                            iactSPadZeroColumnReg <= UInt<1>("h00") @[ProcessingElement.scala 374:37]
                            node _T_107 = add(iactMatrixColumnReg, UInt<1>("h01")) @[ProcessingElement.scala 375:58]
                            node _T_108 = tail(_T_107, 1) @[ProcessingElement.scala 375:58]
                            node _T_109 = add(_T_108, iactZeroColumnNumber) @[ProcessingElement.scala 375:64]
                            node _T_110 = tail(_T_109, 1) @[ProcessingElement.scala 375:64]
                            iactMatrixColumnReg <= _T_110 @[ProcessingElement.scala 375:35]
                            iactZeroColumnNumber <= UInt<1>("h00") @[ProcessingElement.scala 376:36]
                            skip @[ProcessingElement.scala 373:42]
                          else : @[ProcessingElement.scala 377:26]
                            node _T_111 = add(iactMatrixColumnReg, UInt<1>("h01")) @[ProcessingElement.scala 378:58]
                            node _T_112 = tail(_T_111, 1) @[ProcessingElement.scala 378:58]
                            iactMatrixColumnReg <= _T_112 @[ProcessingElement.scala 378:35]
                            skip @[ProcessingElement.scala 377:26]
                          skip @[ProcessingElement.scala 371:38]
                        else : @[ProcessingElement.scala 380:24]
                          sPad <= UInt<3>("h02") @[ProcessingElement.scala 116:10]
                          iactAddrSPadReadEnReg <= UInt<1>("h00") @[ProcessingElement.scala 117:27]
                          iactDataSPadReadEnReg <= UInt<1>("h01") @[ProcessingElement.scala 118:27]
                          weightAddrSPadReadEnReg <= UInt<1>("h00") @[ProcessingElement.scala 119:29]
                          weightDataSPadReadEnReg <= UInt<1>("h00") @[ProcessingElement.scala 120:29]
                          weightDataSPadFirstRead <= UInt<1>("h01") @[ProcessingElement.scala 121:29]
                          skip @[ProcessingElement.scala 380:24]
                        skip @[ProcessingElement.scala 370:38]
                      else : @[ProcessingElement.scala 383:22]
                        sPad <= UInt<3>("h04") @[ProcessingElement.scala 131:10]
                        iactAddrSPadReadEnReg <= UInt<1>("h00") @[ProcessingElement.scala 132:27]
                        iactDataSPadReadEnReg <= UInt<1>("h00") @[ProcessingElement.scala 133:27]
                        weightAddrSPadReadEnReg <= UInt<1>("h00") @[ProcessingElement.scala 134:29]
                        weightDataSPadReadEnReg <= UInt<1>("h01") @[ProcessingElement.scala 135:29]
                        weightDataSPadFirstRead <= UInt<1>("h00") @[ProcessingElement.scala 385:35]
                        skip @[ProcessingElement.scala 383:22]
                      skip @[ProcessingElement.scala 369:20]
                    skip @[Conditional.scala 39:67]
    io.debugIO.iactMatrixColumn <= iactMatrixColumnReg @[ProcessingElement.scala 391:33]
    io.debugIO.iactMatrixData <= iactMatrixDataWire @[ProcessingElement.scala 392:31]
    io.debugIO.iactMatrixRow <= iactMatrixRowWire @[ProcessingElement.scala 393:30]
    io.debugIO.iactAddrIdx <= iactAddrIndexWire @[ProcessingElement.scala 394:28]
    io.debugIO.iactAddrInc <= iactAddrSPadIdxIncWire @[ProcessingElement.scala 395:28]
    io.debugIO.iactDataInc <= iactDataSPadIdxIncWire @[ProcessingElement.scala 396:28]
    io.debugIO.weightMatrixData <= weightMatrixDataReg @[ProcessingElement.scala 397:33]
    io.debugIO.weightMatrixRow <= weightMatrixRowReg @[ProcessingElement.scala 398:32]
    io.debugIO.weightAddrSPadReadOut <= weightAddrDataWire @[ProcessingElement.scala 399:38]
    io.debugIO.productResult <= productReg @[ProcessingElement.scala 400:30]
    io.debugIO.pSumResult <= pSumResultWire @[ProcessingElement.scala 401:27]
    io.debugIO.pSumLoad <= pSumSPadLoadReg @[ProcessingElement.scala 402:25]
    io.debugIO.weightAddrInIdx <= weightAddrSPadReadIdxWire @[ProcessingElement.scala 403:32]
    io.debugIO.sPadState <= sPad @[ProcessingElement.scala 404:26]
    
