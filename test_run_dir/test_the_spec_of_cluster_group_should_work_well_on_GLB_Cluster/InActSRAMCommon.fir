;buildInfoPackage: chisel3, version: 3.3-SNAPSHOT, scalaVersion: 2.12.10, sbtVersion: 1.3.2
circuit InActSRAMCommon : 
  module InActSRAMCommon : 
    input clock : Clock
    input reset : UInt<1>
    output io : {dataPath : {flip inIOs : {data : {flip ready : UInt<1>, valid : UInt<1>, bits : UInt<4>}}, outIOs : {data : {flip ready : UInt<1>, valid : UInt<1>, bits : UInt<4>}}}, ctrlPath : {flip writeOrRead : UInt<1>, flip doEn : UInt<1>, done : UInt<1>}, debugIO : {idx : UInt<9>, idxInc : UInt<1>, idxCount : UInt<9>}}
    
    smem theSRAM : UInt<4>[486] @[GLBCluster.scala 52:57]
    wire writeOrRead : UInt<1> @[GLBCluster.scala 54:41]
    wire doEnWire : UInt<1> @[GLBCluster.scala 57:38]
    wire doReadWire : UInt<1> @[GLBCluster.scala 58:40]
    wire doWriteWire : UInt<1> @[GLBCluster.scala 59:41]
    wire writeInData : UInt<4> @[GLBCluster.scala 60:41]
    wire readOutData : UInt<4> @[GLBCluster.scala 61:41]
    reg waitForRead : UInt<1>, clock with : (reset => (reset, UInt<1>("h01"))) @[GLBCluster.scala 62:44]
    wire doIdxIncWire : UInt<1> @[GLBCluster.scala 63:42]
    wire nextValid : UInt<1> @[GLBCluster.scala 64:39]
    reg doDoneReg : UInt<1>, clock with : (reset => (reset, UInt<1>("h00"))) @[GLBCluster.scala 65:42]
    node _T = and(doReadWire, waitForRead) @[GLBCluster.scala 66:60]
    node _T_1 = mux(writeOrRead, doWriteWire, _T) @[GLBCluster.scala 66:22]
    doIdxIncWire <= _T_1 @[GLBCluster.scala 66:16]
    wire _T_2 : UInt<1> @[GLBCluster.scala 93:36]
    reg _T_3 : UInt<1>, clock with : (reset => (reset, UInt<1>("h00"))) @[GLBCluster.scala 94:43]
    wire _T_4 : UInt<1> @[GLBCluster.scala 95:35]
    wire _T_5 : UInt<1> @[GLBCluster.scala 96:34]
    reg _T_6 : UInt<9>, clock with : (reset => (reset, UInt<9>("h00"))) @[GLBCluster.scala 97:39]
    wire _T_7 : UInt<9> @[GLBCluster.scala 101:33]
    wire _T_8 : UInt<1> @[GLBCluster.scala 102:32]
    writeOrRead <= io.ctrlPath.writeOrRead @[GLBCluster.scala 104:15]
    io.ctrlPath.done <= _T_8 @[GLBCluster.scala 105:20]
    doDoneReg <= _T_8 @[GLBCluster.scala 106:13]
    node _T_9 = eq(doDoneReg, UInt<1>("h00")) @[GLBCluster.scala 107:15]
    node _T_10 = and(_T_9, io.ctrlPath.doEn) @[GLBCluster.scala 107:26]
    doEnWire <= _T_10 @[GLBCluster.scala 107:12]
    node _T_11 = mux(writeOrRead, writeInData, readOutData) @[GLBCluster.scala 108:21]
    _T_7 <= _T_11 @[GLBCluster.scala 108:15]
    when doIdxIncWire : @[GLBCluster.scala 109:23]
      node _T_12 = add(_T_6, UInt<1>("h01")) @[GLBCluster.scala 110:26]
      node _T_13 = tail(_T_12, 1) @[GLBCluster.scala 110:26]
      _T_6 <= _T_13 @[GLBCluster.scala 110:14]
      skip @[GLBCluster.scala 109:23]
    node _T_14 = mux(writeOrRead, io.dataPath.inIOs.data.bits, UInt<1>("h00")) @[GLBCluster.scala 77:23]
    writeInData <= _T_14 @[GLBCluster.scala 77:17]
    node _T_15 = and(doEnWire, io.dataPath.inIOs.data.valid) @[GLBCluster.scala 78:29]
    doWriteWire <= _T_15 @[GLBCluster.scala 78:17]
    io.dataPath.inIOs.data.ready <= doWriteWire @[GLBCluster.scala 79:21]
    when doIdxIncWire : @[GLBCluster.scala 80:25]
      write mport _T_16 = theSRAM[_T_6], clock
      _T_16 <= writeInData
      skip @[GLBCluster.scala 80:25]
    nextValid <= doEnWire @[GLBCluster.scala 68:15]
    node _T_17 = eq(waitForRead, UInt<1>("h00")) @[GLBCluster.scala 69:20]
    waitForRead <= _T_17 @[GLBCluster.scala 69:17]
    reg _T_18 : UInt<1>, clock @[GLBCluster.scala 70:31]
    _T_18 <= nextValid @[GLBCluster.scala 70:31]
    io.dataPath.outIOs.data.valid <= _T_18 @[GLBCluster.scala 70:21]
    node _T_19 = and(io.dataPath.outIOs.data.ready, nextValid) @[GLBCluster.scala 71:35]
    doReadWire <= _T_19 @[GLBCluster.scala 71:16]
    node _T_20 = eq(waitForRead, UInt<1>("h00")) @[GLBCluster.scala 72:54]
    node _T_21 = and(doReadWire, _T_20) @[GLBCluster.scala 72:51]
    wire _T_22 : UInt @[GLBCluster.scala 72:32]
    _T_22 is invalid @[GLBCluster.scala 72:32]
    when _T_21 : @[GLBCluster.scala 72:32]
      _T_22 <= _T_6 @[GLBCluster.scala 72:32]
      node _T_23 = or(_T_22, UInt<9>("h00")) @[GLBCluster.scala 72:32]
      node _T_24 = bits(_T_23, 8, 0) @[GLBCluster.scala 72:32]
      read mport _T_25 = theSRAM[_T_24], clock @[GLBCluster.scala 72:32]
      skip @[GLBCluster.scala 72:32]
    readOutData <= _T_25 @[GLBCluster.scala 72:17]
    node _T_26 = mux(writeOrRead, UInt<1>("h00"), readOutData) @[GLBCluster.scala 73:26]
    io.dataPath.outIOs.data.bits <= _T_26 @[GLBCluster.scala 73:20]
    node _T_27 = eq(_T_7, UInt<1>("h00")) @[GLBCluster.scala 117:33]
    _T_2 <= _T_27 @[GLBCluster.scala 117:18]
    node _T_28 = and(_T_2, doEnWire) @[GLBCluster.scala 118:40]
    _T_3 <= _T_28 @[GLBCluster.scala 118:22]
    node _T_29 = and(_T_2, doEnWire) @[GLBCluster.scala 120:35]
    node _T_30 = and(_T_29, _T_3) @[GLBCluster.scala 120:47]
    _T_4 <= _T_30 @[GLBCluster.scala 120:17]
    _T_5 <= _T_3 @[GLBCluster.scala 121:16]
    node _T_31 = mux(writeOrRead, _T_4, _T_5) @[GLBCluster.scala 122:20]
    _T_8 <= _T_31 @[GLBCluster.scala 122:14]
    io.debugIO.idx <= _T_6 @[GLBCluster.scala 86:17]
    io.debugIO.idxInc <= doIdxIncWire @[GLBCluster.scala 87:20]
    io.debugIO.idxCount is invalid @[GLBCluster.scala 126:25]
    
